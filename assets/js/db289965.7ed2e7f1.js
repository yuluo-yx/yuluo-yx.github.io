"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[746],{54520:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var i=a(9179),t=a(25105),r=a(89999);const o={slug:"spring-ai-alibaba-graph-quickstart",title:"spring ai alibaba graph quickstart",date:new Date("2025-06-14T23:40:21.000Z"),authors:"yuluo",tags:["spring ai alibaba graph","agent"],keywords:["spring ai alibaba","graph","agents"]},s=void 0,l={authorsImageUrls:[void 0]},c=[{value:"1. Agent \u667a\u80fd\u4f53",id:"1-agent-\u667a\u80fd\u4f53",level:2},{value:"1. AI \u667a\u80fd\u4f53\u6846\u67b6\u4ecb\u7ecd",id:"1-ai-\u667a\u80fd\u4f53\u6846\u67b6\u4ecb\u7ecd",level:2},{value:"1.1 Microsoft AutoGen",id:"11-microsoft-autogen",level:3},{value:"1.2 LangGraph",id:"12-langgraph",level:3},{value:"1.3 CrewAI",id:"13-crewai",level:3},{value:"2. Spring AI Alibaba Graph",id:"2-spring-ai-alibaba-graph",level:2},{value:"2.1 \u5feb\u901f\u5165\u95e8",id:"21-\u5feb\u901f\u5165\u95e8",level:3},{value:"pom.xml",id:"pomxml",level:4},{value:"application.yml",id:"applicationyml",level:4},{value:"Config",id:"config",level:4},{value:"\u81ea\u5b9a\u4e49 RecordingNode \u8282\u70b9",id:"\u81ea\u5b9a\u4e49-recordingnode-\u8282\u70b9",level:4},{value:"Controller",id:"controller",level:4},{value:"2.2 \u8bbf\u95ee\u6d4b\u8bd5",id:"22-\u8bbf\u95ee\u6d4b\u8bd5",level:3},{value:"3. \u53c2\u8003\u8d44\u6599",id:"3-\u53c2\u8003\u8d44\u6599",level:2}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"\u672c\u6587\u4e2d\u5c06\u9610\u8ff0\u4e0b AI \u6d41\u7a0b\u7f16\u6392\u6846\u67b6\u548c Spring AI Alibaba Graph \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"1-agent-\u667a\u80fd\u4f53",children:"1. Agent \u667a\u80fd\u4f53"}),"\n",(0,t.jsx)(n.p,{children:"\u7ed3\u5408 Google \u548c Authropic \u5bf9 Agent \u7684\u5b9a\u4e49\uff1aAgent \u7684\u5b9a\u4e49\u4e3a\uff1a\u667a\u80fd\u4f53\uff08Agent\uff09\u662f\u80fd\u591f\u72ec\u7acb\u8fd0\u884c\uff0c\u611f\u77e5\u548c\u7406\u89e3\u73b0\u5b9e\u4e16\u754c\u5e76\u4f7f\u7528\u5de5\u5177\u6765\u5b9e\u73b0\u6700\u7ec8\u76ee\u6807\u7684\u5e94\u7528\u7a0b\u5e8f\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4ece\u67b6\u6784\u4e0a\uff0c\u53ef\u4ee5\u5c06 Agent \u5206\u4e3a\u4e24\u7c7b\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Workflows \u7cfb\u7edf\uff1a\u4eba\u7c7b\u5e72\u9884\u505a\u6574\u4f53\u51b3\u7b56\uff0cLLMs \u4f5c\u4e3a workflows \u94fe\u8def\u7684\u8282\u70b9\u3002","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u5177\u6709\u660e\u786e\u8bed\u4e49\u7684\u7cfb\u7edf\uff0c\u9884\u5148\u5b9a\u4e49\u597d workflows \u6d41\u7a0b\uff1b"}),"\n",(0,t.jsx)(n.li,{children:"LLMs \u901a\u8fc7\u5404\u4e2a Node \u8282\u70b9\u5bf9 Workflows \u8def\u5f84\u7f16\u6392\u6765\u8fbe\u5230\u6700\u7ec8\u6548\u679c\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u667a\u80fd\u4f53\u7cfb\u7edf\uff08Agents\uff09\uff1aLLMs \u4f5c\u4e3a\u5927\u8111\u51b3\u7b56\uff0c\u81ea\u9a71\u52a8\u5b8c\u6210\u4efb\u52a1\u3002","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"LLMs \u81ea\u5df1\u7f16\u6392\u548c\u89c4\u5212\u5de5\u5177\u8c03\u7528\uff1b"}),"\n",(0,t.jsx)(n.li,{children:"\u9002\u7528\u4e8e\u6a21\u578b\u9a71\u52a8\u51b3\u7b56\u7684\u573a\u666f\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4ee5\u4e0a\u4e24\u79cd\u67b6\u6784\u90fd\u5728 Spring AI Alibaba \u9879\u76ee\u4e2d\u6709\u4f53\u73b0\uff1a\u4e00\u662f JManus \u7cfb\u7edf\u3002\u4e8c\u662f\u57fa\u4e8e spring ai alibaba graph \u6784\u5efa\u7684 DeepResearch \u7cfb\u7edf\u3002"})}),"\n",(0,t.jsx)(n.h2,{id:"1-ai-\u667a\u80fd\u4f53\u6846\u67b6\u4ecb\u7ecd",children:"1. AI \u667a\u80fd\u4f53\u6846\u67b6\u4ecb\u7ecd"}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u8fc7\u53bb\u4e00\u5e74\u4e2d\uff0cAI Infra \u5feb\u901f\u53d1\u5c55\uff0c\u6d8c\u73b0\u4e86\u4e00\u7cfb\u5217\u4ee5 LangChain \u4e3a\u4ee3\u7801\u7684 AI \u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff0c\u5230\u6700\u57fa\u7840\u7684\u5e94\u7528\u5f00\u53d1\u6846\u67b6\u5230\u667a\u80fd\u4f53\u7f16\u6392\uff0cAI \u5e94\u7528\u89c2\u6d4b\u7b49\u3002\u6b64\u7ae0\u8282\u4e2d\u4e3b\u8981\u4ecb\u7ecd\u4e0b AI \u5e94\u7528\u7684\u667a\u80fd\u4f53\u7f16\u6392\u6846\u67b6\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"11-microsoft-autogen",children:"1.1 Microsoft AutoGen"}),"\n",(0,t.jsxs)(n.p,{children:["Github  \u5730\u5740\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/microsoft/autogen",children:"https://github.com/microsoft/autogen"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u7531\u5fae\u8f6f\u5f00\u6e90\u7684\u667a\u80fd\u4f53\u5f00\u53d1\u6846\u67b6\uff1a",(0,t.jsx)(n.strong,{children:"AutoGen"})," \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u53ef\u81ea\u4e3b\u884c\u52a8\u6216\u4e0e\u4eba\u7c7b\u534f\u540c\u5de5\u4f5c\u7684\u591a\u667a\u80fd\u4f53 AI \u5e94\u7528\u7a0b\u5e8f\u7684\u6846\u67b6\u3002"]}),"\n",(0,t.jsx)(n.h3,{id:"12-langgraph",children:"1.2 LangGraph"}),"\n",(0,t.jsxs)(n.p,{children:["Github \u5730\u5740\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/langchain-ai/langgraph",children:"https://github.com/langchain-ai/langgraph"})]}),"\n",(0,t.jsx)(n.p,{children:"\u4ee5 LangGraph \u4e3a\u57fa\u7840\uff0c\u4f7f\u7528\u56fe\u7ed3\u6784\u7684 AI \u5e94\u7528\u7f16\u6392\u6846\u67b6\u3002\u7531 LangChain \u793e\u533a\u5f00\u53d1\uff0c\u793e\u533a\u6d3b\u8dc3\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"13-crewai",children:"1.3 CrewAI"}),"\n",(0,t.jsxs)(n.p,{children:["Github \u5730\u5740\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/crewAIInc/crewAI",children:"https://github.com/crewAIInc/crewAI"})]}),"\n",(0,t.jsxs)(n.p,{children:["CrewAI \u662f\u4e00\u4e2a\u7cbe\u7b80\u3001\u5feb\u901f\u7684 Python \u6846\u67b6\uff0c\u5b8c\u5168\u4ece\u96f6\u6784\u5efa\uff0c\u5b8c\u5168",(0,t.jsx)(n.strong,{children:"\u72ec\u7acb\u4e8e LangChain \u6216\u5176\u4ed6\u4ee3\u7406\u6846\u67b6"}),"\u3002\u5b83\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u7684\u7b80\u6d01\u6027\u548c\u7cbe\u786e\u7684\u5e95\u5c42\u63a7\u5236\uff0c\u975e\u5e38\u9002\u5408\u521b\u5efa\u9002\u5408\u4efb\u4f55\u573a\u666f\u7684\u81ea\u4e3b AI \u4ee3\u7406\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"2-spring-ai-alibaba-graph",children:"2. Spring AI Alibaba Graph"}),"\n",(0,t.jsxs)(n.p,{children:["Github \u5730\u5740\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/alibaba/spring-ai-alibaba/tree/main/spring-ai-alibaba-graph",children:"https://github.com/alibaba/spring-ai-alibaba/tree/main/spring-ai-alibaba-graph"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Spring AI Alibaba Graph \u662f\u4e00\u6b3e\u9762\u5411 Java \u5f00\u53d1\u8005\u7684",(0,t.jsx)(n.strong,{children:"\u5de5\u4f5c\u6d41\u3001\u591a\u667a\u80fd\u4f53\u6846\u67b6"}),"\uff0c\u7528\u4e8e\u6784\u5efa\u7531\u591a\u4e2a AI \u6a21\u578b\u6216\u6b65\u9aa4\u7ec4\u6210\u7684\u590d\u6742\u5e94\u7528\u3002\u901a\u8fc7\u56fe\u7ed3\u6784\u7684\u5b9a\u4e49\uff0c\u6765\u63cf\u8ff0\u667a\u80fd\u4f53\u4e2d\u7684\u72b6\u6001\u6d41\u8f6c\u903b\u8f91\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u6846\u67b6\u6838\u5fc3\u5305\u62ec\uff1a",(0,t.jsx)(n.strong,{children:"StateGraph"}),"\uff08\u72b6\u6001\u56fe\uff0c\u7528\u4e8e\u5b9a\u4e49\u8282\u70b9\u548c\u8fb9\uff09\u3001",(0,t.jsx)(n.strong,{children:"Node"}),"\uff08\u8282\u70b9\uff0c\u5c01\u88c5\u5177\u4f53\u64cd\u4f5c\u6216\u6a21\u578b\u8c03\u7528\uff09\u3001",(0,t.jsx)(n.strong,{children:"Edge"}),"\uff08\u8fb9\uff0c\u8868\u793a\u8282\u70b9\u95f4\u7684\u8df3\u8f6c\u5173\u7cfb\uff09\u4ee5\u53ca ",(0,t.jsx)(n.strong,{children:"OverAllState"}),"\uff08\u5168\u5c40\u72b6\u6001\uff0c\u8d2f\u7a7f\u6d41\u7a0b\u5171\u4eab\u6570\u636e\uff09"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"21-\u5feb\u901f\u5165\u95e8",children:"2.1 \u5feb\u901f\u5165\u95e8"}),"\n",(0,t.jsxs)(n.p,{children:["Demo \u5730\u5740\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/exmaple/spring-ai-alibaba-graph-demo",children:"https://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/exmaple/spring-ai-alibaba-graph-demo"})]}),"\n",(0,t.jsx)(n.h4,{id:"pomxml",children:"pom.xml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n    <dependency>\n        <groupId>com.alibaba.cloud.ai</groupId>\n        <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>com.alibaba.cloud.ai</groupId>\n        <artifactId>spring-ai-alibaba-graph-core</artifactId>\n        <version>1.0.0.2</version>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>com.google.code.gson</groupId>\n        <artifactId>gson</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-dependencies</artifactId>\n            <version>3.4.5</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba.cloud.ai</groupId>\n            <artifactId>spring-ai-alibaba-bom</artifactId>\n            <version>1.0.0.2</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n"})}),"\n",(0,t.jsx)(n.h4,{id:"applicationyml",children:"application.yml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"server:\n  port: 8081\n\nspring:\n  ai:\n    dashscope:\n      api-key: ${AI_DASHSCOPE_API_KEY}\n\n"})}),"\n",(0,t.jsx)(n.h4,{id:"config",children:"Config"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'\nimport com.alibaba.cloud.ai.graph.GraphRepresentation;\nimport com.alibaba.cloud.ai.graph.OverAllState;\nimport com.alibaba.cloud.ai.graph.OverAllStateFactory;\nimport com.alibaba.cloud.ai.graph.StateGraph;\nimport com.alibaba.cloud.ai.graph.action.EdgeAction;\nimport com.alibaba.cloud.ai.graph.exception.GraphStateException;\nimport com.alibaba.cloud.ai.graph.node.QuestionClassifierNode;\nimport com.alibaba.cloud.ai.graph.state.strategy.ReplaceStrategy;\nimport indi.yuluo.graph.customnode.RecordingNode;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.ai.chat.client.ChatClient;\nimport org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport static com.alibaba.cloud.ai.graph.StateGraph.END;\nimport static com.alibaba.cloud.ai.graph.StateGraph.START;\nimport static com.alibaba.cloud.ai.graph.action.AsyncEdgeAction.edge_async;\nimport static com.alibaba.cloud.ai.graph.action.AsyncNodeAction.node_async;\n\n/**\n * Graph Demo\uff1a\u9996\u5148\u5224\u65ad\u8bc4\u4ef7\u6b63\u8d1f\uff0c\u5176\u6b21\u7ec6\u5206\u8d1f\u9762\u95ee\u9898\uff0c\u6700\u540e\u8f93\u51fa\u5904\u7406\u65b9\u6848\u3002\n *\n * @author yuluo\n * @author <a href="mailto:yuluo08290126@gmail.com">yuluo</a>\n */\n\n@Configuration\npublic class GraphAutoConfiguration {\n\n    private static final Logger logger = LoggerFactory.getLogger(GraphAutoConfiguration.class);\n\n    /**\n     * \u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u6d41 StateGraph Bean.\n     */\n    @Bean\n    public StateGraph workflowGraph(ChatClient.Builder builder) throws GraphStateException {\n\n        // LLMs Bean\n        ChatClient chatClient = builder.defaultAdvisors(new SimpleLoggerAdvisor()).build();\n\n        // \u5b9a\u4e49\u4e00\u4e2a OverAllStateFactory\uff0c\u7528\u4e8e\u5728\u6bcf\u6b21\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\u521b\u5efa\u521d\u59cb\u7684\u5168\u5c40\u72b6\u6001\u5bf9\u8c61\u3002\u901a\u8fc7\u6ce8\u518c\u82e5\u5e72 Key \u53ca\u5176\u66f4\u65b0\u7b56\u7565\u6765\u7ba1\u7406\u4e0a\u4e0b\u6587\u6570\u636e\n        // \u6ce8\u518c\u4e09\u4e2a\u72b6\u6001 key \u5206\u522b\u4e3a\n        // 1. input\uff1a\u7528\u6237\u8f93\u5165\u7684\u6587\u672c\n        // 2. classifier_output\uff1a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u7ed3\u679c\n        // 3. solution\uff1a\u6700\u7ec8\u8f93\u51fa\u7ed3\u8bba\n        // \u4f7f\u7528 ReplaceStrategy\uff08\u6bcf\u6b21\u5199\u5165\u66ff\u6362\u65e7\u503c\uff09\u7b56\u7565\u5904\u7406\u4e0a\u4e0b\u6587\u72b6\u6001\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\uff0c\u7528\u4e8e\u5728\u8282\u70b9\u4e2d\u4f20\u9012\u6570\u636e\n        OverAllStateFactory stateFactory = () -> {\n            OverAllState state = new OverAllState();\n            state.registerKeyAndStrategy("input", new ReplaceStrategy());\n            state.registerKeyAndStrategy("classifier_output", new ReplaceStrategy());\n            state.registerKeyAndStrategy("solution", new ReplaceStrategy());\n            return state;\n        };\n\n        // \u521b\u5efa workflows \u8282\u70b9\n        // \u4f7f\u7528 Graph \u6846\u67b6\u9884\u5b9a\u4e49\u7684 QuestionClassifierNode \u6765\u5904\u7406\u6587\u672c\u5206\u7c7b\u4efb\u52a1\n\n        // \u8bc4\u4ef7\u6b63\u8d1f\u5206\u7c7b\u8282\u70b9\n        QuestionClassifierNode feedbackClassifier = QuestionClassifierNode.builder()\n                .chatClient(chatClient)\n                .inputTextKey("input")\n                .categories(List.of("positive feedback", "negative feedback"))\n                .classificationInstructions(\n                        List.of("Try to understand the user\'s feeling when he/she is giving the feedback."))\n                .build();\n\n        // \u8d1f\u9762\u8bc4\u4ef7\u5177\u4f53\u95ee\u9898\u5206\u7c7b\u8282\u70b9\n        QuestionClassifierNode specificQuestionClassifier = QuestionClassifierNode.builder()\n                .chatClient(chatClient)\n                .inputTextKey("input")\n                .categories(List.of("after-sale service", "transportation", "product quality", "others"))\n                .classificationInstructions(List\n                        .of("What kind of service or help the customer is trying to get from us? Classify the question based on your understanding."))\n                .build();\n\n        // \u7f16\u6392 Node \u8282\u70b9\uff0c\u4f7f\u7528 StateGraph \u7684 API\uff0c\u5c06\u4e0a\u8ff0\u8282\u70b9\u52a0\u5165\u56fe\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u8282\u70b9\u95f4\u7684\u8df3\u8f6c\u5173\u7cfb\n        // \u9996\u5148\u5c06\u8282\u70b9\u6ce8\u518c\u5230\u56fe\uff0c\u5e76\u4f7f\u7528 node_async(...) \u5c06\u6bcf\u4e2a NodeAction \u5305\u88c5\u4e3a\u5f02\u6b65\u8282\u70b9\u6267\u884c\uff08\u63d0\u9ad8\u541e\u5410\u6216\u9632\u6b62\u963b\u585e\uff0c\u5177\u4f53\u5b9e\u73b0\u6846\u67b6\u5df2\u5c01\u88c5\uff09\n        StateGraph stateGraph = new StateGraph("Consumer Service Workflow Demo", stateFactory)\n\n                // \u5b9a\u4e49\u8282\u70b9\n                .addNode("feedback_classifier", node_async(feedbackClassifier))\n                .addNode("specific_question_classifier", node_async(specificQuestionClassifier))\n                .addNode("recorder", node_async(new RecordingNode()))\n\n                // \u5b9a\u4e49\u8fb9\uff08\u6d41\u7a0b\u987a\u5e8f\uff09\n                .addEdge(START, "feedback_classifier")\n                .addConditionalEdges("feedback_classifier",\n                        edge_async(new FeedbackQuestionDispatcher()),\n                        Map.of("positive", "recorder", "negative", "specific_question_classifier"))\n                .addConditionalEdges("specific_question_classifier",\n                        edge_async(new SpecificQuestionDispatcher()),\n                        Map.of("after-sale", "recorder", "transportation", "recorder", "quality", "recorder", "others",\n                                "recorder"))\n\n                // \u56fe\u7684\u7ed3\u675f\u8282\u70b9\n                .addEdge("recorder", END);\n\n        GraphRepresentation graphRepresentation = stateGraph.getGraph(GraphRepresentation.Type.PLANTUML,\n                "workflow graph");\n\n        System.out.println("\\n\\n");\n        System.out.println(graphRepresentation.content());\n        System.out.println("\\n\\n");\n\n        return stateGraph;\n    }\n\n    public static class FeedbackQuestionDispatcher implements EdgeAction {\n\n        @Override\n        public String apply(OverAllState state) {\n\n            String classifierOutput = (String) state.value("classifier_output").orElse("");\n            logger.info("classifierOutput: {}", classifierOutput);\n\n            if (classifierOutput.contains("positive")) {\n                return "positive";\n            }\n            return "negative";\n        }\n\n    }\n\n    public static class SpecificQuestionDispatcher implements EdgeAction {\n\n        @Override\n        public String apply(OverAllState state) {\n\n            String classifierOutput = (String) state.value("classifier_output").orElse("");\n            logger.info("classifierOutput: {}", classifierOutput);\n\n            Map<String, String> classifierMap = new HashMap<>();\n            classifierMap.put("after-sale", "after-sale");\n            classifierMap.put("quality", "quality");\n            classifierMap.put("transportation", "transportation");\n\n            for (Map.Entry<String, String> entry : classifierMap.entrySet()) {\n                if (classifierOutput.contains(entry.getKey())) {\n                    return entry.getValue();\n                }\n            }\n\n            return "others";\n        }\n\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"\u81ea\u5b9a\u4e49-recordingnode-\u8282\u70b9",children:"\u81ea\u5b9a\u4e49 RecordingNode \u8282\u70b9"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class RecordingNode implements NodeAction {\n\n    private static final Logger logger = LoggerFactory.getLogger(RecordingNode.class);\n\n    @Override\n    public Map<String, Object> apply(OverAllState state) {\n\n        String feedback = (String) state.value("classifier_output").get();\n\n        Map<String, Object> updatedState = new HashMap<>();\n        if (feedback.contains("positive")) {\n            logger.info("Received positive feedback: {}", feedback);\n            updatedState.put("solution", "Praise, no action taken.");\n        }\n        else {\n            logger.info("Received negative feedback: {}", feedback);\n            updatedState.put("solution", feedback);\n        }\n\n        return updatedState;\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"controller",children:"Controller"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestController\n@RequestMapping("/graph/demo")\npublic class GraphController {\n\n    private final CompiledGraph compiledGraph;\n\n    public GraphController(@Qualifier("workflowGraph") StateGraph stateGraph) throws GraphStateException {\n\n        this.compiledGraph = stateGraph.compile();\n    }\n\n    @GetMapping("/chat")\n    public String simpleChat(@RequestParam("query") String query) {\n\n        return compiledGraph.invoke(Map.of("input", query)).flatMap(input -> input.value("solution")).get().toString();\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"22-\u8bbf\u95ee\u6d4b\u8bd5",children:"2.2 \u8bbf\u95ee\u6d4b\u8bd5"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'### \u6b63\u9762\nGET http://localhost:8081/graph/demo/chat?query="This product is excellent, I love it!"\n\n# Praise, no action taken.\n\n### \u8d1f\u9762 1\nGET http://localhost:8081/graph/demo/chat?query="\u8fd9\u4e1c\u897f\u771f\u5783\u573e\u554a\uff0c\u5929\u5450\uff0c\u592a\u96be\u7528\u4e86\uff01"\n\n# ```json\n# {"keywords": ["\u4e1c\u897f", "\u5783\u573e", "\u96be\u7528"], "category_name": "product quality"}\n# ```\n\n### \u8d1f\u9762 2\nGET http://localhost:8081/graph/demo/chat?query="The product broke after one day, very disappointed."\n\n# ```json\n# {"keywords": ["product", "broke", "one day", "disappointed"], "category_name": "product quality"}\n# ```\n'})}),"\n",(0,t.jsx)(n.h2,{id:"3-\u53c2\u8003\u8d44\u6599",children:"3. \u53c2\u8003\u8d44\u6599"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Google Agent \u767d\u76ae\u4e66\uff1a",(0,t.jsx)(n.a,{href:"https://www.kaggle.com/whitepaper-agents",children:"https://www.kaggle.com/whitepaper-agents"})]}),"\n",(0,t.jsxs)(n.li,{children:["Authropic Agent\uff1a",(0,t.jsx)(n.a,{href:"https://www.anthropic.com/engineering/building-effective-agents",children:"https://www.anthropic.com/engineering/building-effective-agents"})]}),"\n",(0,t.jsxs)(n.li,{children:["IBM Agents \u667a\u80fd\u4f53\u7f16\u6392\uff1a ",(0,t.jsx)(n.a,{href:"https://www.ibm.com/cn-zh/think/topics/ai-agent-orchestration",children:"https://www.ibm.com/cn-zh/think/topics/ai-agent-orchestration"})]}),"\n",(0,t.jsxs)(n.li,{children:["Spring AI Alibaba Graph\uff1a",(0,t.jsx)(n.a,{href:"https://github.com/alibaba/spring-ai-alibaba/blob/main/spring-ai-alibaba-graph/README-zh.md",children:"https://github.com/alibaba/spring-ai-alibaba/blob/main/spring-ai-alibaba-graph/README-zh.md"})]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},89999:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var i=a(58101);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},9179:e=>{e.exports=JSON.parse('{"permalink":"/blog/spring-ai-alibaba-graph-quickstart","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-graph-quickstart.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-graph-quickstart.md","title":"spring ai alibaba graph quickstart","description":"\u672c\u6587\u4e2d\u5c06\u9610\u8ff0\u4e0b AI \u6d41\u7a0b\u7f16\u6392\u6846\u67b6\u548c Spring AI Alibaba Graph \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u3002","date":"2025-06-14T23:40:21.000Z","tags":[{"inline":true,"label":"spring ai alibaba graph","permalink":"/blog/tags/spring-ai-alibaba-graph"},{"inline":true,"label":"agent","permalink":"/blog/tags/agent"}],"readingTime":5.043333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-ai-alibaba-graph-quickstart","title":"spring ai alibaba graph quickstart","date":"2025-06-14T23:40:21.000Z","authors":"yuluo","tags":["spring ai alibaba graph","agent"],"keywords":["spring ai alibaba","graph","agents"]},"unlisted":false,"prevItem":{"title":"Gemini CLI QuickStart","permalink":"/blog/gemini-cli-quickstart"},"nextItem":{"title":"\u8c37\u6b4c\u5f00\u6e90 gemini-fullstack-langgraph-quickstart \u4f53\u9a8c","permalink":"/blog/gemini-fullstack-langgraph-quickstart"}}')}}]);