"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8130],{77735:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"goroutine-close","metadata":{"permalink":"/blog/goroutine-close","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/java-and-go/goroutine-close.md","source":"@site/blog/java-and-go/goroutine-close.md","title":"\u4f18\u96c5\u5173\u95ed GoRoutine","description":"\u9996\u5148\u9700\u8981\u660e\u786e\u522b\u7684\u662f\uff1aGo \u4e2d\u5e76\u6ca1\u6709\u663e\u5f0f\uff08\u4e3b\u52a8\uff09\u505c\u6b62 GoRoutine \u7684\u65b9\u5f0f\u3002\u53ea\u80fd\u901a\u8fc7\u4e3b\u52a8\u9000\u51fa\u7684\u65b9\u5f0f\u7ec8\u6b62\u534f\u7a0b\uff0c\u901a\u5e38\u901a\u8fc7\u4e0a\u4e0b\u6587\u901a\u4fe1\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002","date":"2025-09-02T20:51:10.000Z","tags":[{"inline":true,"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":3.8333333333333335,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"goroutine-close","title":"\u4f18\u96c5\u5173\u95ed GoRoutine","date":"2025-09-02T20:51:10.000Z","authors":"yuluo","tags":["golang"],"keywords":["golang"]},"unlisted":false,"nextItem":{"title":"Mac Mini \u5165\u624b\u540e\u7eed","permalink":"/blog/mac-mini"}},"content":"> \u9996\u5148\u9700\u8981\u660e\u786e\u522b\u7684\u662f\uff1aGo \u4e2d\u5e76\u6ca1\u6709\u663e\u5f0f\uff08\u4e3b\u52a8\uff09\u505c\u6b62 GoRoutine \u7684\u65b9\u5f0f\u3002\u53ea\u80fd\u901a\u8fc7\u4e3b\u52a8\u9000\u51fa\u7684\u65b9\u5f0f\u7ec8\u6b62\u534f\u7a0b\uff0c\u901a\u5e38\u901a\u8fc7\u4e0a\u4e0b\u6587\u901a\u4fe1\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\\n> \u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48 goRoutine \u4e0d\u80fd\u88ab\u5f3a\u5236\u505c\u6b62\uff1f\\n> 1. \u8d44\u6e90\u7ba1\u7406\uff1a\u534f\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9b\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u53e5\u67c4\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\u3002\u5982\u679c\u5f3a\u5236\u505c\u6b62\u534f\u7a0b\uff0c\u8fd9\u4e9b\u8d44\u6e90\u53ef\u80fd\u4e0d\u4f1a\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\uff1b\\n>    \u6570\u636e\u4e00\u81f4\u6027\uff1a\u534f\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5904\u7406\u5171\u4eab\u7684\u6570\u636e\uff0c\u5982\u679c\u5f3a\u5236\u505c\u6b62\u534f\u7a0b\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff1b\\n> 2. defer \u65e0\u6cd5\u6267\u884c\uff1a\u534f\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u4f7f\u7528 defer \u8bed\u53e5\u6765\u6267\u884c\u4e00\u4e9b\u6e05\u7406\u64cd\u4f5c\uff0c\u5982\u679c\u5f3a\u5236\u505c\u6b62\u534f\u7a0b\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4e0d\u4f1a\u88ab\u6267\u884c\uff1b\\n> 3. \u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\u964d\u4f4e\uff0c\u5f00\u53d1\u8005\u53ef\u80fd\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019 goRoutine \u5c31\u4f1a\u88ab\u5173\u95ed\u4e86\uff0c\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4\u3002\\n\\n---\\n\\n> goRoutine \u5f3a\u8c03\u7684\u662f\u534f\u540c\u5de5\u4f5c\u7684\u6982\u5ff5\uff0c\u800c\u4e0d\u662f\u5f3a\u5236\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## 1. Go Context \\n\\n\u627f\u63a5\u4e0a\u6587\uff1a[Go context](./golang-context.md) \u662f Go \u5b98\u65b9\u53d1\u5e03\u7684\u7528\u6765\u7ba1\u7406 GoRoutine \u7684\u5305\u3002\u53ef\u4ee5\u5728\u534f\u7a0b\u4e2d\u4f20\u9012\u53c2\u6570\uff0c\u63a7\u5236\u534f\u7a0b\u7684\u751f\u547d\u5468\u671f\u7b49\u3002\\n\\n## 2. GoRoutine \u5173\u95ed\\n\\n\u4e0b\u9762\u6765\u7814\u7a76\u4e0b\u5982\u4f55\u5173\u95ed goRoutine\u3002\u6709\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\uff1a\\n\\n1. \u4f7f\u7528 close \u5173\u95ed\uff1b\\n2. \u4f7f\u7528 select \u8f6e\u8be2\u5173\u95ed\uff1b\\n3. \u4f7f\u7528 context \u5173\u95ed\u3002\\n\\n### 2.1 close \u5173\u95ed\u65b9\u5f0f\\n\\n\u6700\u539f\u59cb\u7684\u5173\u95ed\u65b9\u5f0f\uff0c\u4f7f\u7528 channel \u7684 close \u673a\u5236\u6765\u53d1\u9001\u7ed3\u675f\u4fe1\u606f\u3002\\n\\n\u5f53\u4e00\u4e2a channel \u88ab\u5173\u95ed\u65f6\uff0c\u5982\u679c\u7ee7\u7eed\u8bfb\u53d6\u6570\u636e\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5355\u4f4d\u96f6\u503c\u548c\u4e00\u4e2a false \u7684\u5e03\u5c14\u503c\uff0cgoRoutine \u53ef\u4ee5\u901a\u8fc7\u5e03\u5c14\u503c\u6765\u9000\u51fa\u3002\\n\\n```go\\n// will also set ok to false for a closed and empty channel.\\nfunc close(c chan<- Type)\\n```\\n\\nclose \u5173\u95ed goRoutine\uff1a\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc main() {\\n\\n    // \u521b\u5efa\u4e00\u4e2a\u65e0\u7f13\u51b2\u7684 int \u578b channel\uff0c\u7528\u4e8e\u5728\u4e3b goroutine \u4e0e\u533f\u540d\u5b50 goroutine \u4e4b\u95f4\u901a\u4fe1\\n    ch := make(chan int)\\n\\n    // \u542f\u52a8\u4e00\u4e2a\u5b50 goroutine \u8d1f\u8d23\u751f\u4ea7\u6570\u636e\\n    go func() {\\n        // \u4f9d\u6b21\u53d1\u9001 0~9 \u5171 10 \u4e2a\u6574\u6570\\n        for i := 0; i < 10; i++ {\\n            ch <- i\\n        }\\n        // \u53d1\u9001\u5b8c\u6bd5\u540e\u5173\u95ed channel\uff0c\u5411\u63a5\u6536\u7aef\u5e7f\u64ad\u201c\u65e0\u66f4\u591a\u6570\u636e\u201d\u4fe1\u53f7\\n        close(ch)\\n    }()\\n\\n    // \u4e3b goroutine \u901a\u8fc7 range \u5faa\u73af\u4e0d\u65ad\u4ece channel \u63a5\u6536\u6570\u636e\\n    // \u5f53 channel \u88ab\u5173\u95ed\u4e14\u7f13\u51b2\u533a\u4e3a\u7a7a\u65f6\uff0cfor-range \u81ea\u52a8\u7ed3\u675f\\n    for v := range ch {\\n        fmt.Println(v)\\n        time.Sleep(200 * time.Millisecond)\\n    }\\n}\\n```\\n\\n#### 2.1.1 \u4f18\u70b9\\n\\n\u7b80\u5355\u76f4\u89c2\uff0c\u5bb9\u6613\u7406\u89e3\u3002\\n\\n#### 2.1.2 \u7f3a\u70b9\\n\\n\u53ea\u80fd\u5173\u95ed\u4e00\u6b21\uff0c\u4e0d\u80fd\u91cd\u590d\u5173\u95ed\uff1b\\n\u65e0\u6cd5\u4f20\u9012\u66f4\u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4f8b\u5982\u5173\u95ed\u539f\u56e0\u7b49\u3002\\n\\n### 2.2 select \u8f6e\u8be2\u673a\u5236\u5173\u95ed\\n\\nselect \u662f Go \u8bed\u8a00\u4e2d\u7528\u4e8e\u5904\u7406\u591a\u4e2a channel \u7684\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u540c\u65f6\u76d1\u542c\u591a\u4e2a channel\uff0c\u5e76\u5728\u5176\u4e2d\u4e00\u4e2a channel \u6709\u6570\u636e\u53ef\u8bfb\u65f6\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\\n\u4f8b\u5982\u63a5\u6536\u5230\u4e86\u5173\u95ed channel \u7684\u6570\u636e\uff0cgoRoutine \u5c31\u4f1a\u9000\u51fa\u3002 select \u4f1a\u963b\u585e\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a case \u6ee1\u8db3\u6761\u4ef6\uff0c\u7136\u540e\u6267\u884c\u8be5 case \u4e2d\u7684\u4ee3\u7801\u3002\\n\\n\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cgoRoutine \u901a\u5e38\u4f1a\u6267\u884c\u4efb\u52a1\u5e76\u76d1\u542c\u9000\u51fa\u4fe1\u53f7\uff0c\u5f53\u63a5\u6536\u5230\u9000\u51fa\u4fe1\u53f7\u65f6\uff0cgoRoutine \u4f1a\u9000\u51fa\u3002\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc worker(workChan <-chan int, doneChan chan struct{}) {\\n\\n    fmt.Println(\\"work \u542f\u52a8...\\")\\n\\n    for {\\n        select {\\n        case v := <-workChan:\\n            fmt.Println(\\"work \u63a5\u6536\u5230\u6570\u636e:\\", v)\\n        case <-doneChan:\\n            fmt.Println(\\"work \u7ed3\u675f...\\")\\n            return\\n        }\\n\\n        time.Sleep(200 * time.Millisecond)\\n    }\\n}\\n\\nfunc main() {\\n\\n    workChan := make(chan int)\\n    doneChan := make(chan struct{})\\n\\n    go worker(workChan, doneChan)\\n\\n    // \u6a21\u62df\u4e1a\u52a1\u903b\u8f91\u53d1\u9001\u6570\u636e\\n    for i := 0; i < 10; i++ {\\n        workChan <- i\\n    }\\n\\n    // workChan \u6267\u884c\u7ed3\u675f\uff0c\u5ef6\u8fdf\u4e00\u79d2\u540e\u53d1\u9001\u7ed3\u675f\u4fe1\u53f7\\n    time.Sleep(1 * time.Second)\\n\\n    doneChan <- struct{}{}\\n\\n    fmt.Println(\\"Main \u7ed3\u675f...\\")\\n}\\n```\\n\\n#### 2.2.1 \u4f18\u70b9\\n\\n\u66f4\u52a0\u7075\u6d3b\uff0c\u53ef\u4ee5\u4f20\u9012\u66f4\u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4f8b\u5982\u5173\u95ed\u539f\u56e0\u7b49\u3002\\n\u4f7f\u7528 goRoutine \u6709\u590d\u6742\u903b\u8f91\u6216\u8005\u963b\u585e\u7684\u573a\u666f\u3002\\n\\n#### 2.2.2 \u7f3a\u70b9\\n\\n\u9700\u8981\u5f00\u53d1\u8005\u624b\u52a8\u7ef4\u62a4\u4e00\u4e2a done chan\uff1b\\n\u5173\u95ed\u4e4b\u540e\uff0c\u6240\u6709\u76d1\u542c\u7684 channel \u90fd\u4f1a\u88ab\u5173\u95ed\uff0c\u65e0\u6cd5\u518d\u6b21\u4f7f\u7528\u3002\\n\\n### 2.3 context \u5173\u95ed\\n\\n\u6807\u51c6\u505a\u6cd5\uff0c\u6240\u6709 go \u51fd\u6570\u548c\u5e93\u90fd\u503e\u5411\u4f7f\u7528 context \u5173\u95ed goRoutine\u3002\\ncontext \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u88ab\u5c42\u5c42\u4f20\u9012\uff0cgoRoutine \u53ef\u4ee5\u901a\u8fc7 context \u5224\u65ad\u662f\u5426\u9700\u8981\u9000\u51fa\u3002\\n\\n> PS: \u5b98\u65b9\u63a8\u8350\u4efb\u4f55\u4e00\u4e2a\u957f\u671f\u8fd0\u884c\u7684\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u5e94\u8be5\u662f context.Context\u3002\\n\\n\u652f\u6301\u8f83\u4e3a\u4e30\u5bcc\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u8d85\u65f6\u9000\u51fa\uff0c\u624b\u52a8\u53d6\u6d88\u7b49\u3002\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"context\\"\\n    \\"fmt\\"\\n    \\"sync\\"\\n    \\"time\\"\\n)\\n\\nfunc worker(ctx context.Context, wg *sync.WaitGroup) {\\n    \\n    defer wg.Done() // \u786e\u4fdd goroutine \u9000\u51fa\u65f6\u901a\u77e5 main\\n\\n    fmt.Println(\\"worker \u542f\u52a8...\\")\\n\\n    ticker := time.NewTicker(200 * time.Millisecond)\\n    defer ticker.Stop()\\n\\n    for {\\n        select {\\n        case <-ctx.Done():\\n            fmt.Println(\\"worker \u63a5\u6536\u5230 Done \u4fe1\u53f7\uff0c\u9000\u51fa...\\")\\n            return\\n        case <-ticker.C:\\n            fmt.Println(\\"worker running...\\")\\n        }\\n    }\\n}\\n\\nfunc main() {\\n    ctx, cancel := context.WithCancel(context.Background())\\n\\n    var wg sync.WaitGroup\\n    wg.Add(1)\\n    go worker(ctx, &wg)\\n\\n    // 1 \u79d2\u540e\u53d6\u6d88\\n    time.Sleep(time.Second)\\n    cancel()\\n\\n    // \u7b49\u5f85 worker \u4f18\u96c5\u9000\u51fa\\n    wg.Wait()\\n    fmt.Println(\\"main \u9000\u51fa\\")\\n}\\n```"},{"id":"mac-mini","metadata":{"permalink":"/blog/mac-mini","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/everythings/mac-mini.md","source":"@site/blog/everythings/mac-mini.md","title":"Mac Mini \u5165\u624b\u540e\u7eed","description":"\u7528\u4e86\u4e94\u5e74\u6234\u5c14\u7684\u7535\u8111\u8d8a\u6765\u8d8a\u5361\u987f\uff0c\u9879\u76ee\u542f\u52a8\u8d8a\u6765\u8d8a\u6162\u3002\u5f00\u673a\u8d8a\u6765\u8d8a\u6162\uff0c\u4e8e\u662f\u51c6\u5907\u5f88\u4e0b\u5fc3\u6765\u3002\u6362\u7535\u8111\uff01\uff01\uff01","date":"2025-08-22T23:34:54.000Z","tags":[{"inline":true,"label":"MacMini","permalink":"/blog/tags/mac-mini"},{"inline":true,"label":"devTools","permalink":"/blog/tags/dev-tools"}],"readingTime":1.8566666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"mac-mini","title":"Mac Mini \u5165\u624b\u540e\u7eed","date":"2025-08-22T23:34:54.000Z","authors":"yuluo","tags":["MacMini","devTools"],"keywords":["MacMini","devTools"]},"unlisted":false,"prevItem":{"title":"\u4f18\u96c5\u5173\u95ed GoRoutine","permalink":"/blog/goroutine-close"},"nextItem":{"title":"golang context","permalink":"/blog/golang-context"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u7528\u4e86\u4e94\u5e74\u6234\u5c14\u7684\u7535\u8111\u8d8a\u6765\u8d8a\u5361\u987f\uff0c\u9879\u76ee\u542f\u52a8\u8d8a\u6765\u8d8a\u6162\u3002\u5f00\u673a\u8d8a\u6765\u8d8a\u6162\uff0c\u4e8e\u662f\u51c6\u5907\u5f88\u4e0b\u5fc3\u6765\u3002\u6362\u7535\u8111\uff01\uff01\uff01\\n\\n## \u9009\u62e9\u52a8\u673a\\n\\n### Win \u548c Mac\\n\\n\u7528\u4e86\u4e94\u5e74\u7684 Windows \u7cfb\u7edf\uff0c\u671f\u95f4\u5b9e\u4e60\uff0c\u5de5\u4f5c\u90fd\u7528\u7684\u662f Mac\u3002\u867d\u7136 Windows \u4e5f\u597d\uff0c\u4f46\u662f\u6211\u89c9\u5f97 Mac \u5bf9\u5f00\u53d1\u66f4\u53cb\u597d\u4e00\u4e9b\u3002\u800c\u4e14\u66f4\u7b26\u5408\u5168\u5929\u5019\u7684\u4f7f\u7528\u4e60\u60ef\u3002\\n\\n\u4e0a\u73ed\u7528 Windows \u952e\u76d8\uff0c\u4e0b\u73ed\u7528 Mac\u3002\u5bb9\u6613\u952e\u4f4d\u6df7\u4e71\uff0c\u7ecf\u5e38\u6572\u4e4b\u524d\u9700\u8981\u601d\u8003 ctrl \u548c command, options??????\\n\\n### \u7b14\u8bb0\u672c\u3001\u53f0\u5f0f or Mac Mini\\n\\n\u7b14\u8bb0\u672c\u4e0a\u73ed\u6709\u4e86\uff0c\u4e5f\u6ca1\u6709\u9700\u8981\u5e26\u51fa\u53bb\u7684\u9700\u6c42\uff1f\u4e0d\u8003\u8651~~~\\n\\n\u53f0\u5f0f\u673a\uff0c\u4e00\u76f4\u7528\u7684\u662f\u7b14\u8bb0\u672c\uff0c\u53f0\u5f0f\u8fc7\u4e8e\u7b28\u91cd\u4e86\uff0c\u4e0d\u8003\u8651~~~\\n\\nMac mini **\u4fbf\u5b9c\uff0c\u6ee1\u8db3\u9700\u6c42\u3002**\u5c31\u5b83\u4e86\uff01\uff01\uff01\\n\\n### \u914d\u7f6e\\n\\n\u4f17\u6240\u5468\u77e5\uff0cMac \u7684\u5185\u5b58\u548c\u786c\u76d8\u5b58\u50a8\u582a\u6bd4\u91d1\u5b50\u3002\u6700\u7ec8\u9009\u4e86\u5fae\u4e10\u7248\u914d\u7f6e\uff0c\u81ea\u5df1\u5916\u7f6e\u786c\u76d8\u6269\u5bb9\uff0c24 + 256\u3002\u5916\u7f6e\u6682\u65f6 512\uff0c\u540e\u9762\u770b\u9700\u6c42\u6269 1T\u3002\\n\\n### \u8d2d\u4e70\u6e20\u9053\\n\\n\u7535\u5b50\u548c\u5927\u7269\u4ef6\u6211\u8fd8\u662f\u503e\u5411\u4e8e\u4eac\u4e1c\uff0c\u5b66\u751f\u4f18\u60e0 + \u56fd\u8865\u3002\\n\\n## \u914d\u4ef6\u548c\u7cfb\u7edf\u914d\u7f6e\\n\\n### \u914d\u4ef6\\n\\n\u7eff\u8054\u6269\u5c55\u575e\uff1a\u4eac\u4e1c 399\uff1b\\n\\n\u7eff\u8054\u6269\u5c55\u575e\u7684\u786c\u76d8\u662f\u5b89\u88c5\u5728\u4e0b\u9762\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u53d1\u70ed\uff0c\u62fc\u591a\u591a 40 \u5757\u94b1\u7684\u94f6\u8272\u589e\u9ad8\u6563\u70ed\u57ab\u4e00\u4e2a\uff1b\\n\\n\u7eff\u8054 USE \u9ea6\u514b\u98ce 70\u3002\\n\\n### \u7cfb\u7edf\u914d\u7f6e\\n\\n\u5916\u7f6e\u7cfb\u7edf\u5b89\u88c5\u53c2\u8003\u94fe\u63a5 2\uff0c\u975e\u5e38\u8be6\u7ec6\u3002\ud83d\udc4d\\n\\n> But \u5b89\u88c5\u5916\u7f6e\u7cfb\u7edf\u65f6\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6ce8\u610f\u4e8b\u9879\uff1a**\u6269\u5c55\u575e\u7684\u8fde\u63a5\u53e3\u4e0d\u8981\u63d2\u5728 Mac Mini \u540e\u9762\u7684\u96f7\u96f3\u53e3\u4e0a\uff01\uff01\uff01**\\n>\\n> \u5426\u5219\u4f1a\u5b89\u88c5\u7cfb\u7edf\u5931\u8d25\uff0cemm \u8bd5\u4e86\u597d\u51e0\u6b21\u3002\u6700\u540e google \u641c\u4e86\u4e0b\uff0c\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f46\u662f\u4e5f\u6709\u4eba\u8bc4\u8bba\u5b89\u88c5\u6210\u529f\u3002\\n>\\n> \u96f7\u9739\u63a5\u53e3\u5217\u4e3e\uff1ahttps://support.apple.com/zh-cn/120694\\n\\n## \u8f6f\u4ef6\u5b89\u88c5\\n\\n> \u53c2\u8003\uff1ahttps://github.com/yuluo-yx/use#%E5%BA%94%E7%94%A8%E6%95%B4%E7%90%86\\n>\\n> SDK \u7ba1\u7406\uff1ahttps://yuluo-yx.github.io/blog/java-and-go-sdk-manager\\n\\nOrbstack\uff1aDocker desktop \u5e73\u66ff\uff1b\\n\\nRaycast\uff1a\u975e\u5e38\u597d\u4f7f\u7684\u542f\u52a8\u5668\\n\\nMonitorcontrol\uff1a\u63a7\u5236\u5916\u63a5\u663e\u793a\u5c4f\u4eae\u5ea6\\n\\nSnipaste\uff1a\u622a\u56fe\u8f6f\u4ef6\\n\\nRectangle\uff1a\u7a97\u53e3\u7ba1\u7406\\n\\n## \u4f7f\u7528\u4f53\u9a8c\\n\\n\u5148\u8bf4\u7b2c\u4e00\u70b9\u4f53\u9a8c\uff1a\u684c\u9762\u7a7a\u95f4\u5927\u4e86\u3002\u6027\u80fd\u65b9\u9762\u7684\u6ca1\u5f97\u8bf4\uff0c\u6bd4\u6211\u4e4b\u524d\u7535\u8111\u597d\u591a\u4e86\u3002\\n\\n\u7f3a\u70b9\uff1a\u6269\u5c55\u575e\u4e0b\u9762\u7684\u786c\u76d8\u5728\u5927\u91cf\u8bfb\u5199\u64cd\u4f5c\u65f6\u4f1a\u53d1\u70ed\u3002\u4f46\u662f Mac Mini \u6574\u4f53\u53d1\u70ed\u8868\u73b0\u826f\u597d\u3002\\n\\n## \u53c2\u8003\u6587\u7ae0\\n\\n1. https://jimmysong.io/blog/my-new-mac-mini-m4/\\n2. https://www.xiaohongshu.com/explore/685d9b040000000015020624"},{"id":"golang-context","metadata":{"permalink":"/blog/golang-context","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/java-and-go/golang-context.md","source":"@site/blog/java-and-go/golang-context.md","title":"golang context","description":"context \u4e3b\u8981\u4e3a\u4e86\u89e3\u51b3\u5728\u5e76\u53d1\u6a21\u578b\u4e0b\uff0c\u591a\u4e2a Goroutine \u4e4b\u95f4\u53d6\u6d88\u4fe1\u53f7\uff0c\u8d85\u65f6\uff0c\u6570\u636e\u4f20\u9012\u7b49\u95ee\u9898\u3002","date":"2025-08-18T20:04:11.000Z","tags":[{"inline":true,"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":4.586666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"golang-context","title":"golang context","date":"2025-08-18T20:04:11.000Z","authors":"yuluo","tags":["golang"],"keys":["golang"]},"unlisted":false,"prevItem":{"title":"Mac Mini \u5165\u624b\u540e\u7eed","permalink":"/blog/mac-mini"},"nextItem":{"title":"Apache Shenyu \u672c\u5730\u542f\u52a8\u53ca\u5feb\u901f\u5165\u95e8","permalink":"/blog/shenyu-init"}},"content":"context \u4e3b\u8981\u4e3a\u4e86\u89e3\u51b3\u5728\u5e76\u53d1\u6a21\u578b\u4e0b\uff0c\u591a\u4e2a Goroutine \u4e4b\u95f4**\u53d6\u6d88\u4fe1\u53f7\uff0c\u8d85\u65f6\uff0c\u6570\u636e\u4f20\u9012**\u7b49\u95ee\u9898\u3002\\n\\n\x3c!-- truncate --\x3e\\n## 1. \u7528\u9014\\n\\n\u5728\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u6d89\u53ca\u5230\u591a\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\uff0c\u8bf7\u6c42 API\uff0c\u8c03\u7528\u6570\u636e\u5e93\u7b49\u3002\u4f8b\u5982\u7528\u6237\u767b\u5f55\u8bf7\u6c42\uff1a\\n\\n1. controller \u5c42\u63a5\u53d7\u8bf7\u6c42\uff1b\\n2. \u8c03\u7528 service \u5c42\uff0c\u8fdb\u884c\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\uff1b\\n3. service \u5c42\u8c03\u7528 user \u6a21\u5757\u7684 API\uff0c\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff1b\\n4. user \u6a21\u5757\u8c03\u7528\u6570\u636e\u5e93\uff0c\u67e5\u8be2\u7528\u6237\u4fe1\u606f\u3002\\n\\n\u5728\u767b\u5f55\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u7b49\u5176\u4ed6\u529f\u80fd\u5c5e\u6027\uff0c\u4f8b\u5982\\n\\n1. \u5728 3s \u5185\uff0c\u7528\u6237\u767b\u5f55\u6210\u529f\uff0c\u5219\u8fd4\u56de\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u5931\u8d25\uff1b\\n2. \u52a0\u5165 traceId\uff0c\u65b9\u4fbf\u6392\u67e5\u95ee\u9898\uff1b\\n3. \u52a0\u5165\u53d6\u6d88\u4fe1\u53f7\uff0c\u5f53\u7528\u6237\u53d6\u6d88\u767b\u5f55\u65f6\uff0c\u505c\u6b62\u540e\u7eed\u64cd\u4f5c\u7b49\u3002\\n\\ncontext \u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u3002\\n\\n## 2. Context \u5305\u5206\u6790\\n\\n\u4ee5\u4e0b\u5206\u6790\u57fa\u4e8e Go SDK 1.24.6\u3002\\n\\n### 2.1 Context \u63a5\u53e3\\n\\n```go\\n// \u672c\u8d28\u662f\u4e00\u4e2a\u63a5\u53e3\\ntype Context interface {\\n\\n    // \u83b7\u53d6 context \u7684\u622a\u6b62\u65f6\u95f4\u3002\\n    // ok \u4e3a false \u8868\u793a\u6ca1\u6709\u8bbe\u7f6e\u622a\u6b62\u65f6\u95f4\\n    Deadline() (deadline time.Time, ok bool)\\n\\n    // \u6838\u5fc3\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb channel\uff0c\u5f53 context \u88ab\u53d6\u6d88\u65f6\uff0c\u4f1a\u5173\u95ed Done channel\u3002\\n    // \u4e0b\u6e38\u7684 Goroutine \u53ea\u9700\u8981\u5728 select \u4e2d\u76d1\u542c Done channel\uff0c\u5373\u53ef\u611f\u77e5\u5230 context \u88ab\u53d6\u6d88\u3002\\n    // \u4ece\u800c\u505a\u51fa\u505c\u6b62\u52a8\u4f5c\\n    Done() <-chan struct{}\\n\\n    // \u8fd4\u56de context \u88ab\u53d6\u6d88\u7684\u539f\u56e0\uff08Done channel \u53d6\u6d88\u7684\u539f\u56e0\uff09\\n    // context.Canceled\uff1acontext \u88ab\u4e3b\u52a8\u53d6\u6d88\u3002\\n    // context.DeadlineExceeded\uff1acontext \u56e0\u8d85\u65f6\u800c\u88ab\u53d6\u6d88\u3002\\n    Err() error\\n\\n    // \u4ece context \u4e2d\u83b7\u53d6\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\\n    // \u7528\u6765\u4f20\u9012\u8bf7\u6c42\u8303\u56f4\u7684\u4e0a\u4e0b\u6587\u6570\u636e\uff0c\u4f8b\u5982 traceId\uff0c\u7528\u6237\u4fe1\u606f\u7b49\u3002\\n    Value(key any) any\\n}\\n```\\n\\n### 2.2 Context \u5b9e\u73b0\\n\\n\u5728\u5f00\u53d1\u4e2d\uff0c\u4e0d\u76f4\u63a5\u6216\u8005\u5f88\u5c11\u4f7f\u7528 Context \u63a5\u53e3\uff0c\u800c\u662f\u4f7f\u7528 context \u5305\u63d0\u4f9b\u7684\u6d3e\u751f\u51fd\u6570\u6765\u4f7f\u7528 context\u3002\\n\\n1. context.Background(): \u901a\u5e38\u5728 main \u51fd\u6570\u3001\u521d\u59cb\u5316\u548c\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u521b\u5efa\uff0c\u4f5c\u4e3a\u6240\u6709 context \u7684\u6839\u8282\u70b9\u3002\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u53d6\u6d88\uff1b\\n2. context.TODO(): \u5f53\u4f60\u4e0d\u786e\u5b9a\u8be5\u7528\u54ea\u4e2a Context\uff0c\u6216\u8005\u5f53\u524d\u51fd\u6570\u4ee5\u540e\u4f1a\u66f4\u65b0\u4ee5\u4fbf\u63a5\u6536\u4e00\u4e2a Context \u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u5b83\u548c Background \u7c7b\u4f3c\uff1b\\n3. context.WithCancel(parent Context): \u57fa\u4e8e\u4e00\u4e2a\u7236 context \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 context \u548c\u4e00\u4e2a cancel \u51fd\u6570\u3002\u8c03\u7528 cancel \u51fd\u6570\uff0c\u65b0\u7684 context \u5c31\u4f1a\u88ab\u53d6\u6d88\uff1b\\n4. context.WithTimeout(parent Context, timeout time.Duration): \u548c WithCancel \u7c7b\u4f3c\uff0c\u4f46\u5b83\u591a\u4e86\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u3002\u65f6\u95f4\u4e00\u5230\uff0c\u81ea\u52a8\u53d6\u6d88\uff1b\\n5. context.WithValue(parent Context, key, val any): \u521b\u5efa\u4e00\u4e2a\u643a\u5e26\u952e\u503c\u5bf9\u7684 context\u3002\\n\\n## 3. \u4f7f\u7528\u793a\u4f8b\\n\\n### 3.1 \u952e\u503c\u5bf9\u4f20\u9012\\n\\n```go\\n// context \u4f20\u9012\u4e0a\u4e0b\u6587\u4fe1\u606f\\npackage main\\n\\nimport (\\n    \\"context\\"\\n    \\"fmt\\"\\n)\\n\\ntype TraceId string\\n\\nconst TraceIdKey = TraceId(\\"trace_id\\")\\n\\nfunc main() {\\n\\n    ctx := context.WithValue(context.Background(), TraceIdKey, \\"main start...\\")\\n\\n    // \u7b2c\u4e00\u8df3\\n    processOne(ctx)\\n}\\n\\nfunc processOne(ctx context.Context) {\\n\\n    // \u7b2c\u4e8c\u8df3\\n    processTwo(ctx)\\n}\\n\\nfunc processTwo(ctx context.Context) {\\n\\n    traceId, _ := ctx.Value(TraceIdKey).(string)\\n\\n    // \u7ed3\u675f\\n    fmt.Println(traceId)\\n}\\n```\\n\\n### 3.2 \u8d85\u65f6\u53d6\u6d88\\n\\n```go\\n// \u8c03\u7528\u5916\u90e8\u63a5\u53e3\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d85\u65f6\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u7528 context \u6765\u63a7\u5236\u3002\\n\\npackage main\\n\\nimport (\\n    \\"context\\"\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc callAPI(ctx context.Context) error {\\n\\n    fmt.Println(\\"\u5f00\u59cb\u8c03\u7528 API...\\")\\n\\n    // \u6a21\u62df\u4e00\u4e2a\u8017\u65f6\u5f88\u957f\u7684\u64cd\u4f5c\\n    if err := longRunningTask(ctx); err != nil {\\n        return err\\n    }\\n\\n    fmt.Println(\\"API \u8c03\u7528\u5b8c\u6210\u3002\uff08\u5982\u679c\u770b\u5230\u6b64\u6d88\u606f\uff0c\u8bf4\u660e\u672a\u8d85\u65f6\uff09\\")\\n    return nil\\n}\\n\\nfunc longRunningTask(ctx context.Context) error {\\n\\n    select {\\n    // \u6a21\u62df\u8fd9\u4e2a\u4efb\u52a1\u9700\u8981 5 \u79d2\u624d\u80fd\u5b8c\u6210\\n    case <-time.After(5 * time.Second):\\n        fmt.Println(\\"\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\uff01\\")\\n        return nil\\n    // \u5728\u4efb\u52a1\u5b8c\u6210\u524d\uff0c\u68c0\u67e5 context \u662f\u5426\u88ab\u53d6\u6d88\\n    case <-ctx.Done():\\n        return fmt.Errorf(\\"\u4efb\u52a1\u88ab\u4e2d\u65ad: %w\\", ctx.Err())\\n    }\\n}\\n\\nfunc main() {\\n    // \u521b\u5efa\u4e00\u4e2a 3 \u79d2\u540e\u4f1a\u8d85\u65f6\u7684 context\\n    ctx, cancel := context.WithTimeout(context.Background(), 3*time.Second)\\n    defer cancel()\\n\\n    if err := callAPI(ctx); err != nil {\\n        fmt.Printf(\\"API \u8c03\u7528\u51fa\u9519: %v\\\\n\\", err)\\n    }\\n}\\n```\\n\\n### 3.3 \u4e3b\u52a8\u53d6\u6d88\\n\\n```go\\n// \u5efa\u7acb\u4e00\u4e2a\u4e3b\u52a8\u53d6\u6d88\u7684context\\n// \u5f53\u6211\u4eec\u9700\u8981\u505c\u6b62\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\u65f6\uff0c\u4f7f\u7528 context \u53ef\u4ee5\u65b9\u4fbf\u5730\u53d1\u51fa\u53d6\u6d88\u4fe1\u53f7\u6765\u7ed3\u675f\u4efb\u52a1\u3002\\n\\npackage main\\n\\nimport (\\n    \\"context\\"\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc monitor(ctx context.Context, name string) {\\n\\n    fmt.Printf(\\"\u3010%s\u3011\u76d1\u63a7\u542f\u52a8...\\\\n\\", name)\\n\\n    for {\\n        select {\\n        case <-ctx.Done():\\n            // \u5f53 ctx.Done() \u88ab\u5173\u95ed\u65f6\uff0c\u8bf4\u660e\u6536\u5230\u4e86\u53d6\u6d88\u4fe1\u53f7\\n            fmt.Printf(\\"\u3010%s\u3011\u6536\u5230\u53d6\u6d88\u4fe1\u53f7\uff0c\u76d1\u63a7\u505c\u6b62\u3002\u539f\u56e0: %s\\\\n\\", name, ctx.Err())\\n            return\\n        default:\\n            // \u6a21\u62df\u6267\u884c\u76d1\u63a7\u4efb\u52a1\\n            fmt.Printf(\\"\u3010%s\u3011\u6b63\u5728\u76d1\u63a7\u4e2d...\\\\n\\", name)\\n            time.Sleep(1 * time.Second)\\n        }\\n    }\\n}\\n\\nfunc main() {\\n\\n    // \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u88ab\u53d6\u6d88\u7684\u6839 context\\n    ctx, cancel := context.WithCancel(context.Background())\\n\\n    // \u542f\u52a8\u4e00\u4e2a goroutine \u6267\u884c\u76d1\u63a7\\n    go monitor(ctx, \\"\u76d1\u63a7 1 \u53f7\\")\\n\\n    // \u8ba9\u76d1\u63a7\u8fd0\u884c 5 \u79d2\\n    time.Sleep(5 * time.Second)\\n\\n    // 5 \u79d2\u540e\uff0c\u624b\u52a8\u8c03\u7528 cancel \u51fd\u6570\uff0c\u53d1\u51fa\u53d6\u6d88\u4fe1\u53f7\\n    fmt.Println(\\"\u4e3b\u7a0b\u5e8f\uff1a\u53d1\u51fa\u53d6\u6d88\u4fe1\u53f7\uff01\\")\\n    cancel()\\n\\n    // \u518d\u7b49\u5f85\u4e00\u5c0f\u4f1a\uff0c\u786e\u4fdd goroutine \u5df2\u7ecf\u9000\u51fa\\n    time.Sleep(1 * time.Second)\\n\\n    fmt.Println(\\"\u4e3b\u7a0b\u5e8f\uff1a\u9000\u51fa\u3002\\")\\n}\\n```\\n\\n### 3.4 HTTP \u670d\u52a1\u5668\u4f18\u96c5\u5173\u95ed\\n\\n```go\\n// context \u7684\u7ecf\u5178\u7528\u6cd5\uff0cGo \u7684 http.Server \u4e2d\uff0c\u6bcf\u4e2a\u8bf7\u6c42\\n// \u7684 http.Request \u90fd\u5305\u542b\u4e00\u4e2a context.Context\\n// \u53ef\u4ee5\u7528\u6765\u4f20\u9012\u8bf7\u6c42\u7ea7\u522b\u7684\u503c\uff0c\u4ee5\u53ca\u53d6\u6d88\u4fe1\u53f7\\n// \u5f53\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u65f6\uff0cctx.Done() \u4f1a\u6536\u5230\u4fe1\u53f7\\n// Gin \u57fa\u4e8e context \u63a5\u53e3\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684 gin.Context\uff0c\u7528\u6765\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94\\n\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"log\\"\\n    \\"net/http\\"\\n    \\"time\\"\\n)\\n\\nfunc slowHandler(w http.ResponseWriter, r *http.Request) {\\n\\n    // r.Context() \u8bf7\u6c42\u7ed1\u5b9a\u7684 context\\n    ctx := r.Context()\\n\\n    log.Println(\\"Handler \u5f00\u59cb\u5904\u7406\u8bf7\u6c42\\")\\n    defer log.Println(\\"Handler \u5904\u7406\u8bf7\u6c42\u7ed3\u675f\\")\\n\\n    select {\\n    case <-time.After(10 * time.Second):\\n        // \u6a21\u62df\u4e00\u4e2a\u8017\u65f6 10 \u79d2\u7684\u64cd\u4f5c\\n        fmt.Fprintln(w, \\"\u8bf7\u6c42\u5904\u7406\u5b8c\u6bd5\uff01\\")\\n        log.Println(\\"\u8bf7\u6c42\u5904\u7406\u5b8c\u6bd5\uff01\\")\\n    case <-ctx.Done():\\n        // \u5982\u679c\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\uff0cctx.Done() \u4f1a\u6536\u5230\u4fe1\u53f7\\n        err := ctx.Err()\\n        log.Printf(\\"\u8bf7\u6c42\u88ab\u5ba2\u6237\u7aef\u53d6\u6d88: %v\\", err)\\n        http.Error(w, err.Error(), http.StatusRequestTimeout)\\n    }\\n\\n}\\n\\nfunc main() {\\n\\n    http.HandleFunc(\\"/slow\\", slowHandler)\\n\\n    log.Println(\\"\u670d\u52a1\u5668\u542f\u52a8\uff0c\u76d1\u542c\u7aef\u53e3 :8080\\")\\n    log.Println(\\"\u8bf7\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:8080/slow\uff0c\u7136\u540e\u5728 10 \u79d2\u5185\u5173\u95ed\u6216\u505c\u6b62\u52a0\u8f7d\u9875\u9762\\")\\n\\n    if err := http.ListenAndServe(\\":8080\\", nil); err != nil {\\n        log.Fatal(err)\\n    }\\n}\\n```"},{"id":"shenyu-init","metadata":{"permalink":"/blog/shenyu-init","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/shenyu/shenyu-init-and-start.md","source":"@site/blog/shenyu/shenyu-init-and-start.md","title":"Apache Shenyu \u672c\u5730\u542f\u52a8\u53ca\u5feb\u901f\u5165\u95e8","description":"Apache ShenYu is a Java native API Gateway for service proxy, protocol conversion and API governance.","date":"2025-07-31T22:41:01.000Z","tags":[{"inline":true,"label":"shenyu","permalink":"/blog/tags/shenyu"},{"inline":true,"label":"gateway","permalink":"/blog/tags/gateway"}],"readingTime":2.0166666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"shenyu-init","title":"Apache Shenyu \u672c\u5730\u542f\u52a8\u53ca\u5feb\u901f\u5165\u95e8","date":"2025-07-31T22:41:01.000Z","authors":"yuluo","tags":["shenyu","gateway"],"keywords":["shenyu","gateway"]},"unlisted":false,"prevItem":{"title":"golang context","permalink":"/blog/golang-context"},"nextItem":{"title":"Java & Go SDK \u7ba1\u7406\u5b9e\u8df5","permalink":"/blog/java-and-go-sdk-manager"}},"content":"Apache ShenYu is a Java native API Gateway for service proxy, protocol conversion and API governance.\\n\\n\x3c!-- truncate --\x3e\\n\\n## 1. \u73af\u5883\u51c6\u5907\\n\\n\u672c\u6587\u4e2d\u4f7f\u7528 MySQL \u6765\u4f5c\u4e3a ShenYu \u6570\u636e\u5e93\uff0c\u4f7f\u7528 Docker Compose \u90e8\u7f72 MySQL\u3002\\n\\n> \u6216\u8005\u4f7f\u7528\u672c\u5730 MySQL \u6570\u636e\u5e93\u4e5f\u53ef\uff0c\u4f7f\u7528\u672c\u5730\u6570\u636e\u5e93\u65f6\u8df3\u8f6c\u5230 1.3 \u914d\u7f6e\u6570\u636e\u5e93\u8868\u3002\\n\\n### 1.1 docker-compose.yml\\n\\n```yml\\nservices:\\n  db:\\n    image: mysql\\n    container_name: mysql\\n    restart: always\\n    command: --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1 --max_allowed_packet=128M;\\n    ports:\\n      - 3306:3306\\n    volumes:\\n      - ./data:/var/lib/mysql\\n      - ./my.cnf:/etc/my.cnf:ro\\n      - ./log:/var/log/mysql\\n      - ./initdb.d:/docker-entrypoint-initdb.d\\n    environment:\\n      MYSQL_ROOT_PASSWORD: toor\\n```\\n\\n### 1.2 MySQL \u6570\u636e\u5e93\u914d\u7f6e\\n\\n```conf\\n[mysqld]\\n\\nskip-host-cache\\nskip-name-resolve\\ndatadir=/var/lib/mysql\\nsocket=/var/lib/mysql/mysql.sock\\nsecure-file-priv=/var/lib/mysql-files\\nuser=mysql\\n\\npid-file=/var/run/mysqld/mysqld.pid\\n\\ntmpdir=/tmp\\n```\\n\\n### 1.3 SQL \u6587\u4ef6\u914d\u7f6e\uff1a\\n\\nSQL \u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/apache/shenyu/blob/master/db/init/mysql/schema.sql\\n\\n\u5c06\u6570\u636e\u6587\u4ef6\u5728\u540c\u7ea7\u76ee\u5f55\u7684 init.d \u76ee\u5f55\u4e0b\u5e76\u6539\u4e3a init.sql.\\n\\n> Tips: \u6216\u8005\u4e0d\u81ea\u52a8\u6267\u884c sql \u811a\u672c\uff0c\u542f\u52a8\u4e4b\u540e\u624b\u52a8\u6267\u884c sql \u6587\u4ef6\u3002\\n\\n## 2. \u5de5\u5177\u548c\u4ee3\u7801\u4e0b\u8f7d\\n\\n\u672c\u6587\u4e2d\u4f7f\u7528 IDEA\uff0c\u4ece Github clone \u4ed3\u5e93\u5e76\u4f7f\u7528 IDEA \u6253\u5f00\u3002\\n\\nGithub\uff1ahttps://github.com/apache/shenyu\\n\\n## 3. \u7f16\u8bd1\u53ca\u542f\u52a8\\n\\n### 3.1 \u5b89\u88c5\u7f16\u8bd1\\n\\n\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5c06 shenyu \u5b89\u88c5\u5230\u672c\u5730\u7684 mvn \u4ed3\u5e93\uff0c**\u540e\u9762\u542f\u52a8 example \u65f6\u9700\u8981\u7528\u5230\u3002**\\n\\n```shell\\nmvn clean install \'-Dmaven.javadoc.skip=true\' \'-B\' \'-Drat.skip=true\' \'-Djacoco.skip=true\' \'-DskipITs\' \'-DskipTests\'\\n```\\n\\n### 3.2 \u914d\u7f6e\u4fee\u6539\\n\\n1. \u5c06 shenyu-admin/src/resource/application.yml#24 \u4e2d\u7684\u6fc0\u6d3b\u914d\u7f6e\u4ece h2 \u6539\u4e3a mysql\\n2. \u5c06 shenyu-admin/src/resource/application-mysql.yml#25 \u4e2d\u7684 MySQL \u5bc6\u7801\u6539\u4e3a 1.1 \u4e2d\u7684 `toor` \u6216\u8005\u4f60\u81ea\u5df1\u7684\u6570\u636e\u5e93\u5bc6\u7801\u3002\\n\\n### 3.3 \u542f\u52a8\\n\\n1. \u542f\u52a8 Admin \u7ba1\u7406\u7aef\uff08\u4f5c\u4e3a\u7f51\u5173\u63a7\u5236\u9762\uff09 org.apache.shenyu.admin.ShenyuAdminBootstrap\\n2. \u542f\u52a8 ShenYu \u7f51\u5173\uff08\u4f5c\u4e3a\u7f51\u5173\u6570\u636e\u9762\uff09org.apache.shenyu.bootstrap.ShenyuBootstrapApplication\\n\\n### 3.4 \u8bbf\u95ee Admin \u9875\u9762\\n\\n\u6d4f\u89c8\u5668\u8bbf\u95ee `http://127.0.0.1:9095`\uff0c\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u5bc6\u7801\u4e3a\uff1aadmin/123456\u3002\\n\\n> \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 shenyu \u7f51\u5173\u7684 Admin \u9875\u9762\u3002\\n\\n## 4. Example \u6d4b\u8bd5\\n\\n\u63a5\u4e0b\u6765\u4f7f\u7528 shenyu-examples/shenyu-examples-http \u4f5c\u4e3a\u6d4b\u8bd5\u670d\u52a1\uff0c\u4f7f\u7528 IDEA \u5355\u72ec\u6253\u5f00\u6216\u8005\u4e3a\u5176\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002\\n\\n> Tips: \u52a1\u5fc5\u5b8c\u6210 3.1 \u7684\u7f16\u8bd1\u52a8\u4f5c\uff01\\n\\n\u5b8c\u6210 example \u542f\u52a8\u4e4b\u540e\uff0c\u89c2\u5bdf\u5404\u4e2a\u670d\u52a1\u63a7\u5236\u53f0\uff0c\u4f1a\u770b\u5230\u65e5\u5fd7\u8f93\u51fa\u3002\\n\\n\u7136\u540e\u5728 Admin \u63a7\u5236\u53f0\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6ce8\u518c\u7684\u7684 http \u8def\u7531\uff1a\\n\\n\u542f\u52a8\u4e4b\u524d\uff1a\\n\\n![\u8def\u7531\u672a\u6ce8\u518c](/img/apache/shenyu/image2.png)\\n\\n\u542f\u52a8\u4e4b\u540e\uff1a\\n\\n![\u8def\u7531\u6ce8\u518c\u6210\u529f](/img/apache/shenyu/image1.png)\\n\\n## 5. \u6d41\u91cf\u5904\u7406\\n\\n\u9996\u5148\u9700\u8981\u660e\u786e\u4e0b\u9762\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff1a\\n\\n1. Shenyu \u7f51\u5173\u6d41\u91cf\u901a\u8fc7\u63d2\u4ef6\u548c\u9009\u62e9\u5668\u4ee5\u53ca\u8def\u7531\u89c4\u5219\u6765\u63a7\u5236\uff1b\\n2. \u7f51\u5173\u6d41\u91cf\u5165\u53e3\u5728\uff1aorg.apache.shenyu.web.handler.ShenyuWebHandler.DefaultShenyuPluginChain#execute\\n3. \u63d2\u4ef6\u6267\u884c\u94fe\u8def\u5728\uff0c\u5b8c\u6210\u8def\u7531\u89c4\u5219\u7684\u7b5b\u9009\u5e76\u4ea4\u7531\u63d2\u4ef6\u5b9e\u73b0\u6267\u884c\uff1aorg.apache.shenyu.plugin.base.AbstractShenyuPlugin#execute\\n\\n\u901a\u8fc7\u65ad\u70b9\u5373\u53ef\u770b\u5230\u6267\u884c\u7684\u63d2\u4ef6\u94fe\u4ee5\u53ca\u63d2\u4ef6\u6570\u636e\u4fe1\u606f\u7b49\\n\\n## \u53c2\u8003\u6587\u6863\\n\\n1. https://shenyu.apache.org/zh/docs/deployment/deployment-before\\n2. https://shenyu.apache.org/zh/docs/deployment/deployment-local\\n3. https://shenyu.apache.org/zh/blog/Plugin-SourceCode-Analysis-Divide-Plugin/\\n4. https://github.com/deigmata-paideias/deigmata-paideias/blob/main/docker-compose-tmpl/mysql"},{"id":"java-and-go-sdk-manager","metadata":{"permalink":"/blog/java-and-go-sdk-manager","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/java-and-go/java-and-go-sdk-manager.md","source":"@site/blog/java-and-go/java-and-go-sdk-manager.md","title":"Java & Go SDK \u7ba1\u7406\u5b9e\u8df5","description":"\u6d41\u884c\u7684\u7248\u672c\u7ba1\u7406\u5de5\u5177","date":"2025-07-05T21:19:22.000Z","tags":[{"inline":true,"label":"Java","permalink":"/blog/tags/java"},{"inline":true,"label":"Go","permalink":"/blog/tags/go"}],"readingTime":2.2266666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"java-and-go-sdk-manager","title":"Java & Go SDK \u7ba1\u7406\u5b9e\u8df5","date":"2025-07-05T21:19:22.000Z","authors":"yuluo","tags":["Java","Go"],"keywords":["Java","Go"]},"unlisted":false,"prevItem":{"title":"Apache Shenyu \u672c\u5730\u542f\u52a8\u53ca\u5feb\u901f\u5165\u95e8","permalink":"/blog/shenyu-init"},"nextItem":{"title":"Google ADK Java QuickStart","permalink":"/blog/google-adk-java-quickstart"}},"content":"\x3c!-- truncate --\x3e\\n\\n\\n## \u6d41\u884c\u7684\u7248\u672c\u7ba1\u7406\u5de5\u5177\\n\\n| \u7c7b\u522b     | \u5de5\u5177\u540d\u79f0    | GitHub\u94fe\u63a5                                                        | Star\u6570 |\\n| -------- | ----------- | ----------------------------------------------------------------- | ------ |\\n| Java SDK | Jabba       | [https://github.com/shyiko/jabba](https://github.com/shyiko/jabba) | 3.2k   |\\n|          | Jenv        | [https://github.com/jenv/jenv](https://github.com/jenv/jenv)     | 6.2k   |\\n|          | SDKMan      | [https://github.com/sdkman/sdkman-cli](https://github.com/sdkman/sdkman-cli) | 6.4k   |\\n| Go SDK   | GVM         | [https://github.com/moovweb/gvm](https://github.com/moovweb/gvm)   | 10.9k  |\\n|          | voidint/g   | [https://github.com/voidint/g](https://github.com/voidint/g)       | 2.2k   |\\n|          | Goenv       | [https://github.com/go-nv/goenv](https://github.com/go-nv/goenv)   | 2.3k   |\\n\\n## Java SDK \u7ba1\u7406\u5de5\u5177\u5b9e\u8df5\\n\\n\u5f00\u59cb\u4e4b\u524d\u5148\u770b\u4e0b\u81ea\u5df1\u672c\u5730\u7684 JDK \u7248\u672c\uff1a\\n\\n```shell\\n# yuluo @ \ud83d\udcaf Everything wins. in ~ [17:26:49]\\n$ java -version\\nopenjdk version \\"23.0.2\\" 2025-01-21\\nOpenJDK Runtime Environment Homebrew (build 23.0.2)\\nOpenJDK 64-Bit Server VM Homebrew (build 23.0.2, mixed mode, sharing)\\n\\n# \u5378\u8f7d \u901a\u8fc7 brew install \u7684 java \u548c mvn\\nbrew uninstall --ignore-dependencies java\\nbrew uninstall mvn\\n\\n# \u5982\u679c\u4e0d\u60f3\u5378\u8f7d\uff0c\u9700\u8981\u5efa\u7acb\u8f6f\u94fe\u63a5\u8ba9 sdkman \u53ef\u4ee5\u8bc6\u522b\u5230\u5df2\u7ecf\u5b89\u88c5\u7684 java\\n# \u53c2\u8003 https://blog.csdn.net/gp_911014/article/details/138579268\\n```\\n\\n> \u8fd9\u91cc\u9009\u62e9\u4f7f\u7528 star \u6570\u6700\u9ad8\u7684 sdkman\u3002\\n\\n### SDKMan \\n#### \u5b89\u88c5\\n\\n```shell\\n# \u7ec8\u7aef\u4e2d\u6267\u884c\\ncurl -s \\"https://get.sdkman.io\\" | bash\\n\\n# \u8f93\u51fa\u5982\u4e0b\uff1a\\nAll done!\\n\\n\\nYou are subscribed to the STABLE channel.\\n\\nPlease open a new terminal, or run the following in the existing one:\\n\\n    source \\"/Users/yuluo/.sdkman/bin/sdkman-init.sh\\"\\n\\nThen issue the following command:\\n\\n    sdk help\\n\\nEnjoy!!!\\n\\n# \u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef\u6267\u884c\uff1a\\nsource \\"$HOME/.sdkman/bin/sdkman-init.sh\\"\\n\\n# \u68c0\u67e5\\n$ sdk version\\n\\nSDKMAN!\\nscript: 5.19.0\\nnative: 0.7.4 (macos aarch64)\\n```\\n\\n#### \u4f7f\u7528\\n\\n##### Java SDK\\n\\n```shell\\n# \u67e5\u770b\u5e2e\u52a9\\nsdk help\\nsdk help install\\n\\n# \u67e5\u770b\u5f53\u524d\u7684 java sdk\\nsdk current\\n\\n# \u5217\u51fa\u53ef\u5b89\u88c5\u7684 java sdk\\nsdk list java\\n\\n Oracle        |     | 24.0.1       | oracle  |            | 24.0.1-oracle\\n               |     | 24           | oracle  |            | 24-oracle\\n               |     | 23.0.2       | oracle  |            | 23.0.2-oracle\\n               |     | 22.0.2       | oracle  |            | 22.0.2-oracle\\n               |     | 21.0.7       | oracle  |            | 21.0.7-oracle\\n               |     | 21.0.6       | oracle  |            | 21.0.6-oracle\\n\\n# \u5b89\u88c5\u4e00\u4e2a java sdk \u9009\u62e9 oracle jdk\\n# \u5206\u522b\u5b89\u88c5 17 \u548c 24 \u7248\u672c\\nsdk install java 24-oracle\\nsdk install java 17.0.12-oracle\\n\\n# \u4f7f\u7528 java 17\\nsdk use java 17.0.12-oracle\\n\\nUsing java version 17.0.12-oracle in this shell\\n\\n# \u67e5\u770b\u5f53\u524d\u7684 java sdk\\nsdk current\\n\\n# \u5207\u6362\u81f3 24 \u7248\u672c\\nsdk use java 24-oracle\\n\\n# \u5378\u8f7d\\nsdk uninstall java 17.0.12-oracle\\n```\\n\\n##### Maven\\n\\nsdkman \u8fd8\u80fd\u7ba1\u7406 maven \u548c gradle\uff0cscala\uff0cgroovy \u7b49\u3002\\n\\n```shell\\n# \u5217\u51fa\u53ef\u7528\u7684 maven\\nsdk list maven\\n\\n# \u5b89\u88c5\\nsdk install maven\\n\\n# \u67e5\u770b\\nmvn -v\\n```\\n\\n> \u5982\u679c\u5b89\u88c5\u7684 sdk \u547d\u4ee4\u6ca1\u6709\u51fa\u73b0\u65f6\uff0c\u6267\u884c \\n>\\n> `source \\"$HOME/.sdkman/bin/sdkman-init.sh\\"`\\n>\\n> \u5373\u53ef\u3002\\n>\\n\\n##### Gradle\\n\\ngradle \u548c maven \u540c\u7406\u3002\\n\\n## Go SDK \u7ba1\u7406\u5de5\u5177\u5b9e\u8df5\\n\\n\u9009\u62e9\u4f7f\u7528 star \u6570\u6700\u591a\u7684 GVM\\n\\n### \u5b89\u88c5\\n\\n```shell\\nzsh < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/13b10b604255360a9a559c2ea23ba42e75cb536e/binscripts/gvm-installer)\\n\\nsource ~/.gvm/scripts/gvm\\n```\\n\\n### \u53c2\u6570\u8bbe\u7f6e\\n\\n```shell\\n# GVM \u7684\u5b89\u88c5\u5305\u83b7\u53d6\u5730\u5740\\nexport GVM_GO_GET=\'https://golang.google.cn/dl/\'\\n\\n# Go proxy https://goproxy.cn/\\nexport GO111MODULE=on\\nexport GOPROXY=https://goproxy.cn\\n```\\n\\n### \u547d\u4ee4\u4f7f\u7528\\n\\n\u5982\u9047\u5230\u4e0b\u8f7d\u6162\u7b49\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a[https://blog.csdn.net/Narutolxy/article/details/143017169](https://blog.csdn.net/Narutolxy/article/details/143017169)\\n\\n```plain\\n# \u76f4\u63a5\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 gvm \u53ef\u4ee5\u770b\u5230\u63d0\u4f9b\u7684\u547d\u4ee4\\ngvm\\n\\n# \u5b89\u88c5 SDK \u62c9\u53d6\u6e90\u7801\u5305\u7f16\u8bd1\u5b89\u88c5\\ngvm install go1.24.2\\n\\n# \u76f4\u63a5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5b89\u88c5\\ngvm install go1.24.2 --binary\\n\\n# \u663e\u793a\u7248\u672c\\n$ gvm list\\n\\ngvm gos (installed)\\n\\n   go1.24.2\\n=> go1.24.4\\n   system\\n\\n# \u5207\u6362\u4e34\u65f6\u7248\u672c\\ngvm use go1.22.11\\n\\n# \u8bbe\u7f6e\u67d0\u4e2a\u7248\u672c\u4e3a\u9ed8\u8ba4 SDK\\ngvm use go1.22.11 --default\\n\\n# \u9a8c\u8bc1\\ngo version\\n```"},{"id":"google-adk-java-quickstart","metadata":{"permalink":"/blog/google-adk-java-quickstart","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/google-adk-java-quickstart.md","source":"@site/blog/AI-large-models/google-adk-java-quickstart.md","title":"Google ADK Java QuickStart","description":"1. ADK \u4ecb\u7ecd","date":"2025-06-27T23:34:54.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"ADK","permalink":"/blog/tags/adk"}],"readingTime":2.57,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"google-adk-java-quickstart","title":"Google ADK Java QuickStart","date":"2025-06-27T23:34:54.000Z","authors":"yuluo","tags":["AI","ADK"],"keywords":["AI"]},"unlisted":false,"prevItem":{"title":"Java & Go SDK \u7ba1\u7406\u5b9e\u8df5","permalink":"/blog/java-and-go-sdk-manager"},"nextItem":{"title":"Gemini CLI QuickStart","permalink":"/blog/gemini-cli-quickstart"}},"content":"\x3c!-- truncate --\x3e\\n\\n## 1. ADK \u4ecb\u7ecd\\n\\nAgent Development Kit (ADK) \u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u6a21\u5757\u5316\u6846\u67b6\uff0c\u7528\u4e8e\u5f00\u53d1\u548c\u90e8\u7f72 AI Agent\u3002ADK \u5bf9 Gemini \u548c Google \u751f\u6001\u7cfb\u7edf\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u540c\u65f6\u4e0e\u6a21\u578b\u548c\u90e8\u7f72\u65e0\u5173\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u6846\u67b6\u517c\u5bb9\u3002ADK \u65e8\u5728\u4f7f Agent \u5f00\u53d1\u66f4\u50cf\u8f6f\u4ef6\u5f00\u53d1\u90a3\u6837\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u521b\u5efa\u3001\u90e8\u7f72\u548c\u7f16\u6392\u4ece\u7b80\u5355\u4efb\u52a1\u5230\u590d\u6742\u5de5\u4f5c\u6d41\u7684 Agent \u5e94\u7528\u3002\\n\\n\u4e3b\u8981\u7279\u70b9\\n\\n- **\u4e30\u5bcc\u7684\u5de5\u5177\u751f\u6001\u7cfb\u7edf**\uff1a\u5229\u7528\u9884\u5148\u6784\u5efa\u7684\u5de5\u5177\u3001\u81ea\u5b9a\u4e49\u529f\u80fd\u3001OpenAPI \u89c4\u8303\u6216\u96c6\u6210\u73b0\u6709\u5de5\u5177\uff0c\u4e3a\u4ee3\u7406\u63d0\u4f9b\u591a\u6837\u5316\u7684\u529f\u80fd\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e3a\u4e86\u4e0e Google \u751f\u6001\u7cfb\u7edf\u7d27\u5bc6\u96c6\u6210\u3002\\n- **\u4ee3\u7801\u4f18\u5148\u5f00\u53d1**\uff1a\u76f4\u63a5\u5728 Python \u4e2d\u5b9a\u4e49\u4ee3\u7406\u903b\u8f91\u3001\u5de5\u5177\u548c\u7f16\u6392\uff0c\u4ee5\u5b9e\u73b0\u6700\u5927\u7684\u7075\u6d3b\u6027\u3001\u53ef\u6d4b\u8bd5\u6027\u548c\u7248\u672c\u63a7\u5236\u3002\\n- **\u6a21\u5757\u5316\u591a\u4ee3\u7406\u7cfb\u7edf**\uff1a\u901a\u8fc7\u5c06\u591a\u4e2a\u4e13\u95e8\u7684\u4ee3\u7406\u7ec4\u5408\u6210\u7075\u6d3b\u7684\u5c42\u6b21\u7ed3\u6784\u6765\u8bbe\u8ba1\u53ef\u6269\u5c55\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\\n- **\u968f\u5904\u90e8\u7f72**\uff1a\u8f7b\u677e\u5728 Cloud Run \u4e0a\u5bb9\u5668\u5316\u548c\u90e8\u7f72\u4ee3\u7406\uff0c\u6216\u4f7f\u7528 Vertex AI Agent Engine \u65e0\u7f1d\u6269\u5c55\u3002\\n\\n## 2. ADK Java\\n\\n\u800c ADK Java \u5219\u662f ADK Python \u7684 Java \u5b9e\u73b0\u3002\\n\\n## 3. ADK Java Examples\\n\\n\u7f16\u5199\u793a\u4f8b\u4e4b\u524d\u9700\u8981\u83b7\u53d6\u5230 Google Genmini \u6a21\u578b\u7684 ak \u5e76\u914d\u7f6e\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff1a\\n\\n```shell\\nexport GOOGLE_GENAI_USE_VERTEXAI=FALSE\\nexport GOOGLE_API_KEY=AK\\n```\\n\\n### 3.1 \u4ee3\u7801\\n\\n\u6b64\u793a\u4f8b\u4f7f\u7528 ADK Java \u6587\u6863\u4e2d\u7684\u4ee3\u7801\uff1ahttps://google.github.io/adk-docs/get-started/quickstart/#create-agent-project\\n\\n```java\\npackage indi.yuluo.java.agent.multitool;\\n\\nimport com.google.adk.agents.BaseAgent;\\nimport com.google.adk.agents.LlmAgent;\\nimport com.google.adk.events.Event;\\nimport com.google.adk.runner.InMemoryRunner;\\nimport com.google.adk.sessions.Session;\\nimport com.google.adk.tools.Annotations.Schema;\\nimport com.google.adk.tools.FunctionTool;\\nimport com.google.genai.types.Content;\\nimport com.google.genai.types.Part;\\nimport io.reactivex.rxjava3.core.Flowable;\\nimport java.nio.charset.StandardCharsets;\\nimport java.text.Normalizer;\\nimport java.time.ZoneId;\\nimport java.time.ZonedDateTime;\\nimport java.time.format.DateTimeFormatter;\\nimport java.util.Map;\\nimport java.util.Scanner;\\n\\n/**\\n * @author yuluo\\n * @author <a href=\\"mailto:yuluo08290126@gmail.com\\">yuluo</a>\\n */\\n\\npublic class MultiToolAgent {\\n\\n    private static String USER_ID = \\"student\\";\\n    private static String NAME = \\"multi_tool_agent\\";\\n\\n    // The run your agent with Dev UI, the ROOT_AGENT should be a global public static variable.\\n    public static BaseAgent ROOT_AGENT = initAgent();\\n\\n    public static BaseAgent initAgent() {\\n        return LlmAgent.builder()\\n                .name(NAME)\\n                .model(\\"gemini-2.0-flash\\")\\n                .description(\\"Agent to answer questions about the time and weather in a city.\\")\\n                .instruction(\\n                        \\"You are a helpful agent who can answer user questions about the time and weather\\"\\n                                + \\" in a city.\\")\\n                .tools(\\n                        FunctionTool.create(MultiToolAgent.class, \\"getCurrentTime\\"),\\n                        FunctionTool.create(MultiToolAgent.class, \\"getWeather\\"))\\n                .build();\\n    }\\n\\n    public static Map<String, String> getCurrentTime(\\n            @Schema(description = \\"The name of the city for which to retrieve the current time\\")\\n            String city) {\\n        String normalizedCity =\\n                Normalizer.normalize(city, Normalizer.Form.NFD)\\n                        .trim()\\n                        .toLowerCase()\\n                        .replaceAll(\\"(\\\\\\\\p{IsM}+|\\\\\\\\p{IsP}+)\\", \\"\\")\\n                        .replaceAll(\\"\\\\\\\\s+\\", \\"_\\");\\n\\n        return ZoneId.getAvailableZoneIds().stream()\\n                .filter(zid -> zid.toLowerCase().endsWith(\\"/\\" + normalizedCity))\\n                .findFirst()\\n                .map(\\n                        zid ->\\n                                Map.of(\\n                                        \\"status\\",\\n                                        \\"success\\",\\n                                        \\"report\\",\\n                                        \\"The current time in \\"\\n                                                + city\\n                                                + \\" is \\"\\n                                                + ZonedDateTime.now(ZoneId.of(zid))\\n                                                .format(DateTimeFormatter.ofPattern(\\"HH:mm\\"))\\n                                                + \\".\\"))\\n                .orElse(\\n                        Map.of(\\n                                \\"status\\",\\n                                \\"error\\",\\n                                \\"report\\",\\n                                \\"Sorry, I don\'t have timezone information for \\" + city + \\".\\"));\\n    }\\n\\n    public static Map<String, String> getWeather(\\n            @Schema(description = \\"The name of the city for which to retrieve the weather report\\")\\n            String city) {\\n        if (city.toLowerCase().equals(\\"new york\\")) {\\n            return Map.of(\\n                    \\"status\\",\\n                    \\"success\\",\\n                    \\"report\\",\\n                    \\"The weather in New York is sunny with a temperature of 25 degrees Celsius (77 degrees\\"\\n                            + \\" Fahrenheit).\\");\\n\\n        } else {\\n            return Map.of(\\n                    \\"status\\", \\"error\\", \\"report\\", \\"Weather information for \\" + city + \\" is not available.\\");\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        InMemoryRunner runner = new InMemoryRunner(ROOT_AGENT);\\n\\n        Session session =\\n                runner\\n                        .sessionService()\\n                        .createSession(NAME, USER_ID)\\n                        .blockingGet();\\n\\n        try (Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8)) {\\n            while (true) {\\n                System.out.print(\\"\\\\nYou > \\");\\n                String userInput = scanner.nextLine();\\n\\n                if (\\"quit\\".equalsIgnoreCase(userInput)) {\\n                    break;\\n                }\\n\\n                Content userMsg = Content.fromParts(Part.fromText(userInput));\\n                Flowable<Event> events = runner.runAsync(USER_ID, session.id(), userMsg);\\n\\n                System.out.print(\\"\\\\nAgent > \\");\\n                events.blockingForEach(event -> System.out.println(event.stringifyContent()));\\n            }\\n        }\\n    }\\n}\\n```\\n\\n### 3.2 \u8fd0\u884c\\n\\n1. **AdkWebServer** \u4e0d\u80fd\u66f4\u6539\u3002\\n2. \u8fd0\u884c\u6b64\u547d\u4ee4\u9700\u8981\u8df3\u8f6c\u5230\u9879\u76ee\u6839\u76ee\u5f55\uff08\u65e2 pom.xml \u6240\u5728\u7684\u76ee\u5f55\u6267\u884c\uff09\\n\\n```shell\\nmvn exec:java \\\\\\n    -Dexec.mainClass=\\"com.google.adk.web.AdkWebServer\\" \\\\\\n    -Dexec.args=\\"--adk.agents.source-dir=src/main/java\\" \\\\\\n    -Dexec.classpathScope=\\"compile\\" \\n```\\n\\n### 3.3 \u8bbf\u95ee\\n\\n\u6d4f\u89c8\u5668\u6253\u5f00 localhost:8080 \u8bbf\u95ee\u524d\u7aef\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230 Dev UI\uff1a\\n\\n![image-20250626233522684](/img/ai/adk/image-20250626233522684.png)"},{"id":"gemini-cli-quickstart","metadata":{"permalink":"/blog/gemini-cli-quickstart","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/gemini-cli-quickstart.md","source":"@site/blog/AI-large-models/gemini-cli-quickstart.md","title":"Gemini CLI QuickStart","description":"Github \u4ed3\u5e93\uff1ahttps://github.com/google-gemini/gemini-cli","date":"2025-06-27T23:34:00.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"Genmini CLI","permalink":"/blog/tags/genmini-cli"}],"readingTime":1.6233333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"gemini-cli-quickstart","title":"Gemini CLI QuickStart","date":"2025-06-27T23:34:00.000Z","authors":"yuluo","tags":["AI","Genmini CLI"],"keywords":["AI"]},"unlisted":false,"prevItem":{"title":"Google ADK Java QuickStart","permalink":"/blog/google-adk-java-quickstart"},"nextItem":{"title":"spring ai alibaba graph quickstart","permalink":"/blog/spring-ai-alibaba-graph-quickstart"}},"content":"\x3c!-- truncate --\x3e\\n\\nGithub \u4ed3\u5e93\uff1ahttps://github.com/google-gemini/gemini-cli\\n\\n## \u4ecb\u7ecd\\n\\nGemini CLI \u662f\u4e00\u4e2a\u7528\u4e8e\u4e0e Google Gemini \u5927\u578b\u8bed\u8a00\u6a21\u578b\u4ea4\u4e92\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\uff08\u636e\u76f8\u5173\u6d88\u606f\uff0c\u9006\u5411\u4e86 Claude Code\uff09\\n\\n\u4e3a\u5f00\u53d1\u8005\u3001\u7814\u7a76\u5458\u4ee5\u53ca\u4efb\u4f55\u9700\u8981\u901a\u8fc7\u547d\u4ee4\u884c\u4e0e Gemini \u6a21\u578b\u4ea4\u4e92\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u529f\u80fd\u3002\\n\\nGemini \u662f Google DeepMind \u5f00\u53d1\u7684\u4e00\u7cfb\u5217\u591a\u6a21\u6001\u4eba\u5de5\u667a\u80fd\u6a21\u578b\uff0c\u5177\u5907\u8bed\u8a00\u3001\u97f3\u9891\u3001\u4ee3\u7801\u548c\u89c6\u9891\u7406\u89e3\u80fd\u529b\uff0c\u80fd\u591f\u5904\u7406\u591a\u79cd\u4efb\u52a1\uff0c\u5305\u62ec\u6587\u672c\u751f\u6210\u3001\u591a\u6a21\u6001\u5bf9\u8bdd\u3001\u4ee3\u7801\u751f\u6210\u7b49\u3002\\n\\n\u5728 6 \u6708 25 \u65e5\uff0c\u8c37\u6b4c\u6b63\u5f0f\u63a8\u51fa\u4e86**Gemini CLI** \uff0c\u5c06 Gemini \u5927\u6a21\u578b\u7684\u5f3a\u5927\u80fd\u529b\u76f4\u63a5\u878d\u5165\u5230\u5f00\u53d1\u8005\u65e5\u5e38\u547d\u4ee4\u884c\u754c\u9762\u4e2d\u3002\\n\\n#### Star \u8d70\u52bf\\n\\n\u4e0d\u5f97\u4e0d\u63d0 Github star \u8d70\u52bf\u3002\u5728 26 \u53f7\uff0cGemini CLI \u9879\u76ee star \u7206\u53d1\u5f0f\u589e\u957f\uff0c\u622a\u6b62 6 \u6708 26 \u65e5 \u665a\uff0c\u5df2\u7ecf\u5230\u4e86 26k star\u3002\\n\\n![image-20250626235009715](/img/ai/gemini-cli/image-20250626235009715.png)\\n\\n## \u5b89\u88c5\\n\\n```shell\\n# \u5b89\u88c5\\nnpm install -g @google/gemini-cli \\n```\\n\\n## \u914d\u7f6e\\n\\n\u540c\u65f6\uff0cGemini CLI \u53ef\u4ee5\u4f7f\u7528 Google \u8d26\u53f7\u767b\u9646\uff0c\u5141\u8bb8\u6bcf\u5206\u949f\u6700\u591a 60 \u4e2a\u6a21\u578b\u8bf7\u6c42\uff0c\u6bcf\u5929\u6700\u591a 1000 \u4e2a\u6a21\u578b\u8bf7\u6c42\u3002\\n\\n> \u5728\u6b64\u4e4b\u524d\uff0c\u9700\u8981\u6709 Gemini \u7684 AK\u3002\u5982\u679c\u4f53\u9a8c\u9ad8\u7ea7\u529f\u80fd\u6216\u8005\u7279\u5b9a\u6a21\u578b\u9700\u8981\u6b64\u914d\u7f6e\u3002\\n\\n## \u542f\u52a8\\n\\n1. \u5728 terminal \u4e2d\u8f93\u5165 `gemini` \u542f\u52a8 cli\uff1b\\n\\n2. \u9009\u62e9\u4e3b\u9898\uff1a**\uff08\u901a\u8fc7 tab + \u65b9\u5411\u4e0a\u4e0b\u952e\u9009\u62e9\uff09**\\n\\n    \u5728\u8f93\u5165 gemini \u4e4b\u540e\uff0c\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u9875\u9762\\n\\n    ![image-20250626235840772](/img/ai/gemini-cli/image-20250626235840772.png)\\n\\n    \u9057\u61be\u7684\u662f\uff0c\u4e2a\u522b\u4e3b\u9898\u5bf9 windows \u7ec8\u7aef\u9002\u914d\u6709 bug\uff1a\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\\n\\n    ![image-20250626235953023](/img/ai/gemini-cli/image-20250626235953023.png)\\n\\n   \u8fd9\u91cc\u4e5f\u662f\u9009\u4e86\u6700\u706b\u7684 Atom One \u4e3b\u9898\u3002\\n\\n3. \u8eab\u4efd\u9a8c\u8bc1\uff0c\u51fa\u73b0\u65f6\u4f7f\u7528 google \u8d26\u53f7\u767b\u5f55\u5373\u53ef\u3002\\n\\n## \u4f7f\u7528\u4f53\u9a8c\\n\\n\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u7ec8\u7aef\u8f93\u5165\u6846\uff1a\\n\\n![image-20250627000142982](/img/ai/gemini-cli/image-20250627000142982.png)\\n\\n\u6709\u8da3\u7684\u662f\uff0c\u5728\u7b49\u5f85\u8fc7\u7a0b\u4e2d\uff0cgemini cli \u4f1a\u8f93\u51fa\u4e00\u4e9b\u53d8\u6362\u7684 message\uff1a\\n\\n![image-20250627000907701](/img/ai/gemini-cli/image-20250627000907701.png)\\n\\ngemini cli \u8fd8\u652f\u6301\u5176\u4ed6\u529f\u80fd\uff1a\u751f\u6210\u4e00\u4e2a\u9879\u76ee\uff0c\u89e3\u6790\u672c\u5730\u6587\u4ef6\u6570\u636e\uff0c\u8054\u7f51\u641c\u7d22\u7b49\u3002\\n\\n## \u95ee\u9898\u6392\u67e5\\n\\n\u5982\u679c\u8bbf\u95ee\u5931\u8d25\uff0c\u90a3\u4e48\u5c31\u7528\u9b54\u6cd5\uff1a\\n\\nWindows Powershell\uff1a`$env:https_proxy=\\"http://127.0.0.1:7890\\"`\\n\\nMac/Linux: `$env:https_proxy=\\"http://127.0.0.1:7890`"},{"id":"spring-ai-alibaba-graph-quickstart","metadata":{"permalink":"/blog/spring-ai-alibaba-graph-quickstart","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-graph-quickstart.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-graph-quickstart.md","title":"spring ai alibaba graph quickstart","description":"\u672c\u6587\u4e2d\u5c06\u9610\u8ff0\u4e0b AI \u6d41\u7a0b\u7f16\u6392\u6846\u67b6\u548c Spring AI Alibaba Graph \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u3002","date":"2025-06-14T23:40:21.000Z","tags":[{"inline":true,"label":"spring ai alibaba graph","permalink":"/blog/tags/spring-ai-alibaba-graph"},{"inline":true,"label":"agent","permalink":"/blog/tags/agent"}],"readingTime":5.043333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-ai-alibaba-graph-quickstart","title":"spring ai alibaba graph quickstart","date":"2025-06-14T23:40:21.000Z","authors":"yuluo","tags":["spring ai alibaba graph","agent"],"keywords":["spring ai alibaba","graph","agents"]},"unlisted":false,"prevItem":{"title":"Gemini CLI QuickStart","permalink":"/blog/gemini-cli-quickstart"},"nextItem":{"title":"\u8c37\u6b4c\u5f00\u6e90 gemini-fullstack-langgraph-quickstart \u4f53\u9a8c","permalink":"/blog/gemini-fullstack-langgraph-quickstart"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u672c\u6587\u4e2d\u5c06\u9610\u8ff0\u4e0b AI \u6d41\u7a0b\u7f16\u6392\u6846\u67b6\u548c Spring AI Alibaba Graph \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u3002\\n\\n## 1. Agent \u667a\u80fd\u4f53\\n\\n\u7ed3\u5408 Google \u548c Authropic \u5bf9 Agent \u7684\u5b9a\u4e49\uff1aAgent \u7684\u5b9a\u4e49\u4e3a\uff1a\u667a\u80fd\u4f53\uff08Agent\uff09\u662f\u80fd\u591f\u72ec\u7acb\u8fd0\u884c\uff0c\u611f\u77e5\u548c\u7406\u89e3\u73b0\u5b9e\u4e16\u754c\u5e76\u4f7f\u7528\u5de5\u5177\u6765\u5b9e\u73b0\u6700\u7ec8\u76ee\u6807\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\\n\\n\u4ece\u67b6\u6784\u4e0a\uff0c\u53ef\u4ee5\u5c06 Agent \u5206\u4e3a\u4e24\u7c7b\uff1a\\n\\n1. Workflows \u7cfb\u7edf\uff1a\u4eba\u7c7b\u5e72\u9884\u505a\u6574\u4f53\u51b3\u7b56\uff0cLLMs \u4f5c\u4e3a workflows \u94fe\u8def\u7684\u8282\u70b9\u3002\\n   1. \u5177\u6709\u660e\u786e\u8bed\u4e49\u7684\u7cfb\u7edf\uff0c\u9884\u5148\u5b9a\u4e49\u597d workflows \u6d41\u7a0b\uff1b\\n   2. LLMs \u901a\u8fc7\u5404\u4e2a Node \u8282\u70b9\u5bf9 Workflows \u8def\u5f84\u7f16\u6392\u6765\u8fbe\u5230\u6700\u7ec8\u6548\u679c\u3002\\n2. \u667a\u80fd\u4f53\u7cfb\u7edf\uff08Agents\uff09\uff1aLLMs \u4f5c\u4e3a\u5927\u8111\u51b3\u7b56\uff0c\u81ea\u9a71\u52a8\u5b8c\u6210\u4efb\u52a1\u3002\\n   1. LLMs \u81ea\u5df1\u7f16\u6392\u548c\u89c4\u5212\u5de5\u5177\u8c03\u7528\uff1b\\n   2. \u9002\u7528\u4e8e\u6a21\u578b\u9a71\u52a8\u51b3\u7b56\u7684\u573a\u666f\u3002\\n\\n**\u4ee5\u4e0a\u4e24\u79cd\u67b6\u6784\u90fd\u5728 Spring AI Alibaba \u9879\u76ee\u4e2d\u6709\u4f53\u73b0\uff1a\u4e00\u662f JManus \u7cfb\u7edf\u3002\u4e8c\u662f\u57fa\u4e8e spring ai alibaba graph \u6784\u5efa\u7684 DeepResearch \u7cfb\u7edf\u3002**\\n\\n## 1. AI \u667a\u80fd\u4f53\u6846\u67b6\u4ecb\u7ecd\\n\\n\u5728\u8fc7\u53bb\u4e00\u5e74\u4e2d\uff0cAI Infra \u5feb\u901f\u53d1\u5c55\uff0c\u6d8c\u73b0\u4e86\u4e00\u7cfb\u5217\u4ee5 LangChain \u4e3a\u4ee3\u7801\u7684 AI \u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff0c\u5230\u6700\u57fa\u7840\u7684\u5e94\u7528\u5f00\u53d1\u6846\u67b6\u5230\u667a\u80fd\u4f53\u7f16\u6392\uff0cAI \u5e94\u7528\u89c2\u6d4b\u7b49\u3002\u6b64\u7ae0\u8282\u4e2d\u4e3b\u8981\u4ecb\u7ecd\u4e0b AI \u5e94\u7528\u7684\u667a\u80fd\u4f53\u7f16\u6392\u6846\u67b6\u3002\\n\\n### 1.1 Microsoft AutoGen\\n\\nGithub  \u5730\u5740\uff1ahttps://github.com/microsoft/autogen\\n\\n\u7531\u5fae\u8f6f\u5f00\u6e90\u7684\u667a\u80fd\u4f53\u5f00\u53d1\u6846\u67b6\uff1a**AutoGen** \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u53ef\u81ea\u4e3b\u884c\u52a8\u6216\u4e0e\u4eba\u7c7b\u534f\u540c\u5de5\u4f5c\u7684\u591a\u667a\u80fd\u4f53 AI \u5e94\u7528\u7a0b\u5e8f\u7684\u6846\u67b6\u3002\\n\\n### 1.2 LangGraph\\n\\nGithub \u5730\u5740\uff1ahttps://github.com/langchain-ai/langgraph\\n\\n\u4ee5 LangGraph \u4e3a\u57fa\u7840\uff0c\u4f7f\u7528\u56fe\u7ed3\u6784\u7684 AI \u5e94\u7528\u7f16\u6392\u6846\u67b6\u3002\u7531 LangChain \u793e\u533a\u5f00\u53d1\uff0c\u793e\u533a\u6d3b\u8dc3\u3002\\n\\n### 1.3 CrewAI\\n\\nGithub \u5730\u5740\uff1ahttps://github.com/crewAIInc/crewAI\\n\\nCrewAI \u662f\u4e00\u4e2a\u7cbe\u7b80\u3001\u5feb\u901f\u7684 Python \u6846\u67b6\uff0c\u5b8c\u5168\u4ece\u96f6\u6784\u5efa\uff0c\u5b8c\u5168**\u72ec\u7acb\u4e8e LangChain \u6216\u5176\u4ed6\u4ee3\u7406\u6846\u67b6**\u3002\u5b83\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u7684\u7b80\u6d01\u6027\u548c\u7cbe\u786e\u7684\u5e95\u5c42\u63a7\u5236\uff0c\u975e\u5e38\u9002\u5408\u521b\u5efa\u9002\u5408\u4efb\u4f55\u573a\u666f\u7684\u81ea\u4e3b AI \u4ee3\u7406\u3002\\n\\n## 2. Spring AI Alibaba Graph\\n\\nGithub \u5730\u5740\uff1ahttps://github.com/alibaba/spring-ai-alibaba/tree/main/spring-ai-alibaba-graph\\n\\n> Spring AI Alibaba Graph \u662f\u4e00\u6b3e\u9762\u5411 Java \u5f00\u53d1\u8005\u7684**\u5de5\u4f5c\u6d41\u3001\u591a\u667a\u80fd\u4f53\u6846\u67b6**\uff0c\u7528\u4e8e\u6784\u5efa\u7531\u591a\u4e2a AI \u6a21\u578b\u6216\u6b65\u9aa4\u7ec4\u6210\u7684\u590d\u6742\u5e94\u7528\u3002\u901a\u8fc7\u56fe\u7ed3\u6784\u7684\u5b9a\u4e49\uff0c\u6765\u63cf\u8ff0\u667a\u80fd\u4f53\u4e2d\u7684\u72b6\u6001\u6d41\u8f6c\u903b\u8f91\u3002\\n>\\n> \u6846\u67b6\u6838\u5fc3\u5305\u62ec\uff1a**StateGraph**\uff08\u72b6\u6001\u56fe\uff0c\u7528\u4e8e\u5b9a\u4e49\u8282\u70b9\u548c\u8fb9\uff09\u3001**Node**\uff08\u8282\u70b9\uff0c\u5c01\u88c5\u5177\u4f53\u64cd\u4f5c\u6216\u6a21\u578b\u8c03\u7528\uff09\u3001**Edge**\uff08\u8fb9\uff0c\u8868\u793a\u8282\u70b9\u95f4\u7684\u8df3\u8f6c\u5173\u7cfb\uff09\u4ee5\u53ca **OverAllState**\uff08\u5168\u5c40\u72b6\u6001\uff0c\u8d2f\u7a7f\u6d41\u7a0b\u5171\u4eab\u6570\u636e\uff09\\n\\n### 2.1 \u5feb\u901f\u5165\u95e8\\n\\nDemo \u5730\u5740\uff1ahttps://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/exmaple/spring-ai-alibaba-graph-demo\\n\\n#### pom.xml\\n\\n```xml\\n<dependencies>\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-graph-core</artifactId>\\n        <version>1.0.0.2</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-web</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.google.code.gson</groupId>\\n        <artifactId>gson</artifactId>\\n    </dependency>\\n</dependencies>\\n\\n<dependencyManagement>\\n    <dependencies>\\n        <dependency>\\n            <groupId>org.springframework.boot</groupId>\\n            <artifactId>spring-boot-dependencies</artifactId>\\n            <version>3.4.5</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n        <dependency>\\n            <groupId>com.alibaba.cloud.ai</groupId>\\n            <artifactId>spring-ai-alibaba-bom</artifactId>\\n            <version>1.0.0.2</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n    </dependencies>\\n</dependencyManagement>\\n```\\n\\n#### application.yml\\n\\n```yml\\nserver:\\n  port: 8081\\n\\nspring:\\n  ai:\\n    dashscope:\\n      api-key: ${AI_DASHSCOPE_API_KEY}\\n\\n```\\n\\n#### Config \\n\\n```java\\n\\nimport com.alibaba.cloud.ai.graph.GraphRepresentation;\\nimport com.alibaba.cloud.ai.graph.OverAllState;\\nimport com.alibaba.cloud.ai.graph.OverAllStateFactory;\\nimport com.alibaba.cloud.ai.graph.StateGraph;\\nimport com.alibaba.cloud.ai.graph.action.EdgeAction;\\nimport com.alibaba.cloud.ai.graph.exception.GraphStateException;\\nimport com.alibaba.cloud.ai.graph.node.QuestionClassifierNode;\\nimport com.alibaba.cloud.ai.graph.state.strategy.ReplaceStrategy;\\nimport indi.yuluo.graph.customnode.RecordingNode;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.ai.chat.client.ChatClient;\\nimport org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\n\\nimport java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\nimport static com.alibaba.cloud.ai.graph.StateGraph.END;\\nimport static com.alibaba.cloud.ai.graph.StateGraph.START;\\nimport static com.alibaba.cloud.ai.graph.action.AsyncEdgeAction.edge_async;\\nimport static com.alibaba.cloud.ai.graph.action.AsyncNodeAction.node_async;\\n\\n/**\\n * Graph Demo\uff1a\u9996\u5148\u5224\u65ad\u8bc4\u4ef7\u6b63\u8d1f\uff0c\u5176\u6b21\u7ec6\u5206\u8d1f\u9762\u95ee\u9898\uff0c\u6700\u540e\u8f93\u51fa\u5904\u7406\u65b9\u6848\u3002\\n *\\n * @author yuluo\\n * @author <a href=\\"mailto:yuluo08290126@gmail.com\\">yuluo</a>\\n */\\n\\n@Configuration\\npublic class GraphAutoConfiguration {\\n\\n    private static final Logger logger = LoggerFactory.getLogger(GraphAutoConfiguration.class);\\n\\n    /**\\n     * \u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u6d41 StateGraph Bean.\\n     */\\n    @Bean\\n    public StateGraph workflowGraph(ChatClient.Builder builder) throws GraphStateException {\\n\\n        // LLMs Bean\\n        ChatClient chatClient = builder.defaultAdvisors(new SimpleLoggerAdvisor()).build();\\n\\n        // \u5b9a\u4e49\u4e00\u4e2a OverAllStateFactory\uff0c\u7528\u4e8e\u5728\u6bcf\u6b21\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\u521b\u5efa\u521d\u59cb\u7684\u5168\u5c40\u72b6\u6001\u5bf9\u8c61\u3002\u901a\u8fc7\u6ce8\u518c\u82e5\u5e72 Key \u53ca\u5176\u66f4\u65b0\u7b56\u7565\u6765\u7ba1\u7406\u4e0a\u4e0b\u6587\u6570\u636e\\n        // \u6ce8\u518c\u4e09\u4e2a\u72b6\u6001 key \u5206\u522b\u4e3a\\n        // 1. input\uff1a\u7528\u6237\u8f93\u5165\u7684\u6587\u672c\\n        // 2. classifier_output\uff1a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u7ed3\u679c\\n        // 3. solution\uff1a\u6700\u7ec8\u8f93\u51fa\u7ed3\u8bba\\n        // \u4f7f\u7528 ReplaceStrategy\uff08\u6bcf\u6b21\u5199\u5165\u66ff\u6362\u65e7\u503c\uff09\u7b56\u7565\u5904\u7406\u4e0a\u4e0b\u6587\u72b6\u6001\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\uff0c\u7528\u4e8e\u5728\u8282\u70b9\u4e2d\u4f20\u9012\u6570\u636e\\n        OverAllStateFactory stateFactory = () -> {\\n            OverAllState state = new OverAllState();\\n            state.registerKeyAndStrategy(\\"input\\", new ReplaceStrategy());\\n            state.registerKeyAndStrategy(\\"classifier_output\\", new ReplaceStrategy());\\n            state.registerKeyAndStrategy(\\"solution\\", new ReplaceStrategy());\\n            return state;\\n        };\\n\\n        // \u521b\u5efa workflows \u8282\u70b9\\n        // \u4f7f\u7528 Graph \u6846\u67b6\u9884\u5b9a\u4e49\u7684 QuestionClassifierNode \u6765\u5904\u7406\u6587\u672c\u5206\u7c7b\u4efb\u52a1\\n\\n        // \u8bc4\u4ef7\u6b63\u8d1f\u5206\u7c7b\u8282\u70b9\\n        QuestionClassifierNode feedbackClassifier = QuestionClassifierNode.builder()\\n                .chatClient(chatClient)\\n                .inputTextKey(\\"input\\")\\n                .categories(List.of(\\"positive feedback\\", \\"negative feedback\\"))\\n                .classificationInstructions(\\n                        List.of(\\"Try to understand the user\'s feeling when he/she is giving the feedback.\\"))\\n                .build();\\n\\n        // \u8d1f\u9762\u8bc4\u4ef7\u5177\u4f53\u95ee\u9898\u5206\u7c7b\u8282\u70b9\\n        QuestionClassifierNode specificQuestionClassifier = QuestionClassifierNode.builder()\\n                .chatClient(chatClient)\\n                .inputTextKey(\\"input\\")\\n                .categories(List.of(\\"after-sale service\\", \\"transportation\\", \\"product quality\\", \\"others\\"))\\n                .classificationInstructions(List\\n                        .of(\\"What kind of service or help the customer is trying to get from us? Classify the question based on your understanding.\\"))\\n                .build();\\n\\n        // \u7f16\u6392 Node \u8282\u70b9\uff0c\u4f7f\u7528 StateGraph \u7684 API\uff0c\u5c06\u4e0a\u8ff0\u8282\u70b9\u52a0\u5165\u56fe\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u8282\u70b9\u95f4\u7684\u8df3\u8f6c\u5173\u7cfb\\n        // \u9996\u5148\u5c06\u8282\u70b9\u6ce8\u518c\u5230\u56fe\uff0c\u5e76\u4f7f\u7528 node_async(...) \u5c06\u6bcf\u4e2a NodeAction \u5305\u88c5\u4e3a\u5f02\u6b65\u8282\u70b9\u6267\u884c\uff08\u63d0\u9ad8\u541e\u5410\u6216\u9632\u6b62\u963b\u585e\uff0c\u5177\u4f53\u5b9e\u73b0\u6846\u67b6\u5df2\u5c01\u88c5\uff09\\n        StateGraph stateGraph = new StateGraph(\\"Consumer Service Workflow Demo\\", stateFactory)\\n\\n                // \u5b9a\u4e49\u8282\u70b9\\n                .addNode(\\"feedback_classifier\\", node_async(feedbackClassifier))\\n                .addNode(\\"specific_question_classifier\\", node_async(specificQuestionClassifier))\\n                .addNode(\\"recorder\\", node_async(new RecordingNode()))\\n\\n                // \u5b9a\u4e49\u8fb9\uff08\u6d41\u7a0b\u987a\u5e8f\uff09\\n                .addEdge(START, \\"feedback_classifier\\")\\n                .addConditionalEdges(\\"feedback_classifier\\",\\n                        edge_async(new FeedbackQuestionDispatcher()),\\n                        Map.of(\\"positive\\", \\"recorder\\", \\"negative\\", \\"specific_question_classifier\\"))\\n                .addConditionalEdges(\\"specific_question_classifier\\",\\n                        edge_async(new SpecificQuestionDispatcher()),\\n                        Map.of(\\"after-sale\\", \\"recorder\\", \\"transportation\\", \\"recorder\\", \\"quality\\", \\"recorder\\", \\"others\\",\\n                                \\"recorder\\"))\\n\\n                // \u56fe\u7684\u7ed3\u675f\u8282\u70b9\\n                .addEdge(\\"recorder\\", END);\\n\\n        GraphRepresentation graphRepresentation = stateGraph.getGraph(GraphRepresentation.Type.PLANTUML,\\n                \\"workflow graph\\");\\n\\n        System.out.println(\\"\\\\n\\\\n\\");\\n        System.out.println(graphRepresentation.content());\\n        System.out.println(\\"\\\\n\\\\n\\");\\n\\n        return stateGraph;\\n    }\\n\\n    public static class FeedbackQuestionDispatcher implements EdgeAction {\\n\\n        @Override\\n        public String apply(OverAllState state) {\\n\\n            String classifierOutput = (String) state.value(\\"classifier_output\\").orElse(\\"\\");\\n            logger.info(\\"classifierOutput: {}\\", classifierOutput);\\n\\n            if (classifierOutput.contains(\\"positive\\")) {\\n                return \\"positive\\";\\n            }\\n            return \\"negative\\";\\n        }\\n\\n    }\\n\\n    public static class SpecificQuestionDispatcher implements EdgeAction {\\n\\n        @Override\\n        public String apply(OverAllState state) {\\n\\n            String classifierOutput = (String) state.value(\\"classifier_output\\").orElse(\\"\\");\\n            logger.info(\\"classifierOutput: {}\\", classifierOutput);\\n\\n            Map<String, String> classifierMap = new HashMap<>();\\n            classifierMap.put(\\"after-sale\\", \\"after-sale\\");\\n            classifierMap.put(\\"quality\\", \\"quality\\");\\n            classifierMap.put(\\"transportation\\", \\"transportation\\");\\n\\n            for (Map.Entry<String, String> entry : classifierMap.entrySet()) {\\n                if (classifierOutput.contains(entry.getKey())) {\\n                    return entry.getValue();\\n                }\\n            }\\n\\n            return \\"others\\";\\n        }\\n\\n    }\\n\\n}\\n```\\n\\n#### \u81ea\u5b9a\u4e49 RecordingNode \u8282\u70b9\\n\\n```java\\npublic class RecordingNode implements NodeAction {\\n\\n    private static final Logger logger = LoggerFactory.getLogger(RecordingNode.class);\\n\\n    @Override\\n    public Map<String, Object> apply(OverAllState state) {\\n\\n        String feedback = (String) state.value(\\"classifier_output\\").get();\\n\\n        Map<String, Object> updatedState = new HashMap<>();\\n        if (feedback.contains(\\"positive\\")) {\\n            logger.info(\\"Received positive feedback: {}\\", feedback);\\n            updatedState.put(\\"solution\\", \\"Praise, no action taken.\\");\\n        }\\n        else {\\n            logger.info(\\"Received negative feedback: {}\\", feedback);\\n            updatedState.put(\\"solution\\", feedback);\\n        }\\n\\n        return updatedState;\\n    }\\n\\n}\\n```\\n\\n#### Controller\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/graph/demo\\")\\npublic class GraphController {\\n\\n    private final CompiledGraph compiledGraph;\\n\\n    public GraphController(@Qualifier(\\"workflowGraph\\") StateGraph stateGraph) throws GraphStateException {\\n\\n        this.compiledGraph = stateGraph.compile();\\n    }\\n\\n    @GetMapping(\\"/chat\\")\\n    public String simpleChat(@RequestParam(\\"query\\") String query) {\\n\\n        return compiledGraph.invoke(Map.of(\\"input\\", query)).flatMap(input -> input.value(\\"solution\\")).get().toString();\\n    }\\n\\n}\\n```\\n\\n### 2.2 \u8bbf\u95ee\u6d4b\u8bd5\\n\\n```text\\n### \u6b63\u9762\\nGET http://localhost:8081/graph/demo/chat?query=\\"This product is excellent, I love it!\\"\\n\\n# Praise, no action taken.\\n\\n### \u8d1f\u9762 1\\nGET http://localhost:8081/graph/demo/chat?query=\\"\u8fd9\u4e1c\u897f\u771f\u5783\u573e\u554a\uff0c\u5929\u5450\uff0c\u592a\u96be\u7528\u4e86\uff01\\"\\n\\n# ```json\\n# {\\"keywords\\": [\\"\u4e1c\u897f\\", \\"\u5783\u573e\\", \\"\u96be\u7528\\"], \\"category_name\\": \\"product quality\\"}\\n# ```\\n\\n### \u8d1f\u9762 2\\nGET http://localhost:8081/graph/demo/chat?query=\\"The product broke after one day, very disappointed.\\"\\n\\n# ```json\\n# {\\"keywords\\": [\\"product\\", \\"broke\\", \\"one day\\", \\"disappointed\\"], \\"category_name\\": \\"product quality\\"}\\n# ```\\n```\\n\\n## 3. \u53c2\u8003\u8d44\u6599\\n\\n1. Google Agent \u767d\u76ae\u4e66\uff1ahttps://www.kaggle.com/whitepaper-agents\\n2. Authropic Agent\uff1ahttps://www.anthropic.com/engineering/building-effective-agents\\n3. IBM Agents \u667a\u80fd\u4f53\u7f16\u6392\uff1a https://www.ibm.com/cn-zh/think/topics/ai-agent-orchestration\\n4. Spring AI Alibaba Graph\uff1ahttps://github.com/alibaba/spring-ai-alibaba/blob/main/spring-ai-alibaba-graph/README-zh.md"},{"id":"gemini-fullstack-langgraph-quickstart","metadata":{"permalink":"/blog/gemini-fullstack-langgraph-quickstart","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/gemini-fullstack-langgraph-quickstart.md","source":"@site/blog/AI-large-models/gemini-fullstack-langgraph-quickstart.md","title":"\u8c37\u6b4c\u5f00\u6e90 gemini-fullstack-langgraph-quickstart \u4f53\u9a8c","description":"- Github \u5730\u5740\uff1ahttps://github.com/google-gemini/gemini-fullstack-langgraph-quickstart","date":"2025-06-13T23:34:54.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"DeepResearch","permalink":"/blog/tags/deep-research"},{"inline":true,"label":"Genmini.","permalink":"/blog/tags/genmini"}],"readingTime":1.0066666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"gemini-fullstack-langgraph-quickstart","title":"\u8c37\u6b4c\u5f00\u6e90 gemini-fullstack-langgraph-quickstart \u4f53\u9a8c","date":"2025-06-13T23:34:54.000Z","authors":"yuluo","tags":["AI","DeepResearch","Genmini."],"keywords":["AI"]},"unlisted":false,"prevItem":{"title":"spring ai alibaba graph quickstart","permalink":"/blog/spring-ai-alibaba-graph-quickstart"},"nextItem":{"title":"Spring AI Alibaba Playground","permalink":"/blog/spring-ai-alibaba-playground"}},"content":"\x3c!-- truncate --\x3e\\n\\n- Github \u5730\u5740\uff1ahttps://github.com/google-gemini/gemini-fullstack-langgraph-quickstart\\n\\n## 1. \u73af\u5883\u51c6\u5907\\n\\n1. Node.js and npm (or yarn/pnpm)\uff1b\\n2. Python 3.8+\uff1b\\n3. Genmini \u6a21\u578b APIKEY\uff0c\u5728 [Google AI Studio](https://aistudio.google.com/app/apikey) \u4e2d\u7533\u8bf7\u3002\\n\\n## 2. \u672c\u5730\u542f\u52a8\\n\\n\u5728\u7b2c\u4e00\u6b65\u73af\u5883\u51c6\u5907\u5b8c\u6210\u4e4b\u540e\uff0c\u5f00\u59cb\u6b64\u6b65\u9aa4\u3002\\n\\n### 2.1 Clone \u9879\u76ee\\n\\n```shell\\ngit clone https://github.com/google-gemini/gemini-fullstack-langgraph-quickstart.git\\n```\\n\\n### 2.2 \u6a21\u578b AK \u8bbe\u7f6e\\n\\n\u590d\u5236 backend \u76ee\u5f55\u4e0b\u7684 .env.example \u5e76\u91cd\u547d\u540d\u4e3a .env\\n\\n\u5199\u5165\u5728\u7b2c\u4e00\u6b65\u83b7\u5f97\u7684 Genmini AK\u3002\\n\\n### 2.3 \u9879\u76ee\u4f9d\u8d56\u5b89\u88c5\\n\\n\u5b89\u88c5\u524d\u7aef\u4f9d\u8d56\uff1a\\n\\n```shell\\ncd gemini-fullstack-langgraph-quickstart/frontend\\nnpm i\\n```\\n\\n\u5b89\u88c5\u540e\u7aef\u4f9d\u8d56\uff1a\\n\\n```shell\\ncd backend\\npip install .\\n```\\n\\n### 2.4 \u542f\u52a8\u8fd0\u884c\\n\\n\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u4f1a\u540c\u65f6\u542f\u52a8\u524d\u540e\u7aef\uff1a\\n\\n```shell\\nmake dev\\n```\\n\\n\u6216\u8005\u5206\u5f00\u8fd0\u884c\uff1a\\n\\n- \u540e\u7aef\uff1a`langgraph dev`\uff08\u9ed8\u8ba4\u5f00\u653e\u63a5\u53e3\u4e8e `http://127.0.0.1:2024`\uff09\\n- \u524d\u7aef\uff1a`npm run dev`\uff08\u9ed8\u8ba4\u5728 `http://localhost:5173`\uff09\\n\\n## 3. \u8bbf\u95ee\u6d4b\u8bd5\\n\\n\u5728\u8fd0\u884c `make dev` \u4e4b\u540e\uff0c\u6253\u5f00 `http://localhost:5173` \u5730\u5740\uff0c\\n\\n> PS\uff1a\u5982\u679c\u51fa\u73b0\u5982\u4e0b\u62a5\u9519\uff0c\u624b\u52a8\u5c06 @ \u6539\u4e3a ../ \u7684\u76f8\u5bf9\u8def\u5f84\uff0cemmm~ \u6ca1\u627e\u5230\u539f\u56e0\u3002\\n>\\n> ```text\\n> [vite] Internal server error: Failed to resolve import \\"@/components/WelcomeScreen\\" from \\"src/App.tsx\\". Does the file exist?\\n> ```\\n\\n\u5728\u6d4f\u89c8\u5668\u9875\u9762\u8f93\u5165\u95ee\u9898\uff1a`spring ai alibaba \u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u7528\u4ed6\u5f00\u53d1\u4e00\u4e2a ai \u5e94\u7528`\\n\\n\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u5c06\u4f1a\u770b\u5230\u7814\u7a76\u62a5\u544a\u8f93\u51fa\u3002\\n\\n## 4. \u53c2\u8003\u6587\u7ae0\\n\\n1. https://gist.github.com/JimLiu/ca25ba4e4fccac2b6a16270c8e82b11a\\n2. https://ai.google.dev/gemini-api/docs/api-key?hl=zh-cn"},{"id":"spring-ai-alibaba-playground","metadata":{"permalink":"/blog/spring-ai-alibaba-playground","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-playground.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-playground.md","title":"Spring AI Alibaba Playground","description":"Spring AI Alibaba Playground \u662f Spring AI Alibaba \u793e\u533a\u4ee5 Spring AI Alibaba \u548c Spring AI \u4e3a\u6846\u67b6\u642d\u5efa\u7684 AI \u5e94\u7528\u3002\u5305\u542b\u5b8c\u5584\u7684\u524d\u7aef UI + \u540e\u7aef\u5b9e\u73b0\uff0c\u5177\u5907\u5bf9\u8bdd\uff0c\u56fe\u7247\u751f\u6210\uff0c\u5de5\u5177\u8c03\u7528\uff0cRAG\uff0cMCP \u7b49\u4f17\u591a AI \u76f8\u5173\u529f\u80fd\u3002\u5728 playground \u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u590d\u523b\u51fa\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684 AI \u5e94\u7528\u3002\u5176\u4e2d\u5de5\u5177\u8c03\u7528\uff0cMCP \u96c6\u6210\uff0c\u804a\u5929\u6a21\u578b\u5207\u6362\u7b49\u529f\u80fd\u4ea6\u53ef\u4e3a\u60a8\u642d\u5efa\u81ea\u5df1\u7684 AI \u5e94\u7528\u63d0\u4f9b\u53c2\u8003\u3002","date":"2025-06-07T19:26:00.000Z","tags":[{"inline":true,"label":"Spring AI Alibaba Playground","permalink":"/blog/tags/spring-ai-alibaba-playground"}],"readingTime":16.686666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-ai-alibaba-playground","title":"Spring AI Alibaba Playground","date":"2025-06-07T19:26:00.000Z","authors":"yuluo","tags":["Spring AI Alibaba Playground"],"keywords":["Spring AI Alibaba Playground"],"image":"/img/ai/playground/image-20250607164742879.png"},"unlisted":false,"prevItem":{"title":"\u8c37\u6b4c\u5f00\u6e90 gemini-fullstack-langgraph-quickstart \u4f53\u9a8c","permalink":"/blog/gemini-fullstack-langgraph-quickstart"},"nextItem":{"title":"Spring AI Alibaba \u52a8\u6001 Prompt \u6700\u4f73\u5b9e\u8df5","permalink":"/blog/spring-ai-alibaba-nacos-prompt"}},"content":"\x3c!-- truncate --\x3e\\n\\nSpring AI Alibaba Playground \u662f Spring AI Alibaba \u793e\u533a\u4ee5 Spring AI Alibaba \u548c Spring AI \u4e3a\u6846\u67b6\u642d\u5efa\u7684 AI \u5e94\u7528\u3002\u5305\u542b\u5b8c\u5584\u7684\u524d\u7aef UI + \u540e\u7aef\u5b9e\u73b0\uff0c\u5177\u5907\u5bf9\u8bdd\uff0c\u56fe\u7247\u751f\u6210\uff0c\u5de5\u5177\u8c03\u7528\uff0cRAG\uff0cMCP \u7b49\u4f17\u591a AI \u76f8\u5173\u529f\u80fd\u3002\u5728 playground \u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u590d\u523b\u51fa\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684 AI \u5e94\u7528\u3002\u5176\u4e2d\u5de5\u5177\u8c03\u7528\uff0cMCP \u96c6\u6210\uff0c\u804a\u5929\u6a21\u578b\u5207\u6362\u7b49\u529f\u80fd\u4ea6\u53ef\u4e3a\u60a8\u642d\u5efa\u81ea\u5df1\u7684 AI \u5e94\u7528\u63d0\u4f9b\u53c2\u8003\u3002\\n\\nPlayground \u4ee3\u7801\u5730\u5740\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground\\n\\n\u9879\u76ee\u9996\u9875\u9884\u89c8\uff1a\\n\\n![image-20250607164742879](/img/ai/playground/image-20250607164742879.png)\\n\\n\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5185\u5bb9\u8f83\u591a\u3002\u6d89\u53ca\u8fd0\u884c\uff0c\u9879\u76ee\u4ecb\u7ecd\uff0c\u914d\u7f6e\u4ecb\u7ecd\u7b49\u3002\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u4ecb\u7ecd Spring AI Alibaba Playground\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8df3\u8f6c\u5230\u4e0d\u540c\u7ae0\u8282\u6d4f\u89c8\u3002\\n\\n---\\n\\n## \u76ee\u5f55\\n\\n1. [\u672c\u5730\u8fd0\u884c](#local_run)\\n2. [\u914d\u7f6e\u4ecb\u7ecd](#config)\\n3. [\u9879\u76ee\u4ecb\u7ecd](#project)\\n\\n---\\n\\n## <span id=\\"local_run\\">1. \u672c\u5730\u8fd0\u884c</span>\\n\\n> \u672c\u7ae0\u8282\u4e2d\uff0c\u5c06\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u5728\u672c\u5730\u542f\u52a8 Playground \u9879\u76ee\u3002\\n\\n### 1. 1 \u4e0b\u8f7d\u6e90\u7801\\n\\nPlayground \u4ee3\u7801\u5730\u5740\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground\\n\\nplayground \u9879\u76ee\u4f4d\u4e8e spring-ai-alibaba-example \u4ed3\u5e93\u4e0b\uff0c\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\uff0c\u4e0d\u4f9d\u8d56\u4e8e spring-ai-alibaba-example pom \u7ba1\u7406\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u4f7f\u7528 IDEA \u5355\u72ec\u6253\u5f00 playground \u9879\u76ee\u76ee\u5f55\u3002\u800c\u4e0d\u662f\u5728 example \u6839\u76ee\u5f55\u4e0b\u76f4\u63a5\u542f\u52a8\u3002\\n\\n> PS: \u5982\u679c\u76f4\u63a5\u542f\u52a8\u9700\u8981\u914d\u7f6e IDEA \u7684\u8fd0\u884c\u5de5\u4f5c\u76ee\u5f55\uff0c\u8bf7\u53c2\u8003 README \u63cf\u8ff0\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/blob/main/spring-ai-alibaba-playground/README.md\\n\\n### 1.2 \u914d\u7f6e\u53d8\u66f4\\n\\n#### 1.2.1 MCP \u914d\u7f6e\u53d8\u66f4\\n\\n\u56e0\u4e3a playground \u9879\u76ee\u5f15\u5165\u4e86 mcp stdio \u7684\u65b9\u5f0f\u6765\u6f14\u793a Spring AI \u5982\u4f55\u63a5\u5165 MCP \u670d\u52a1\u3002\u56e0\u6b64\u5f53\u60a8\u7684\u542f\u52a8\u73af\u5883\u4e3a windows \u65f6\uff0c\u9700\u8981\u5b89\u88c5\u5e76\u914d\u7f6e\u542f\u52a8 MCP Server \u9700\u8981\u7684\u73af\u5883\u3002\\n\\n\u4ee5\u4e0b\u9762\u7684 MCP Server json \u914d\u7f6e\u6587\u4ef6\u4e3a\u4f8b\uff1a\\n\\n```json\\n{\\n    \\"mcpServers\\": {\\n        \\"github\\": {\\n            \\"command\\": \\"npx\\",\\n            \\"args\\": [\\n                \\"/c\\",\\n                \\"npx\\",\\n                \\"-y\\",\\n                \\"@modelcontextprotocol/server-github\\"\\n            ],\\n            \\"env\\": {\\n                \\"GITHUB_PERSONAL_ACCESS_TOKEN\\": \\"your_github_token\\"\\n            }\\n        }\\n    }\\n}\\n```\\n\\n\u60a8\u9700\u8981\u5b89\u88c5 NPX \u5de5\u5177\uff0c\u5982\u679c\u5728 Windows \u7cfb\u7edf\u542f\u52a8\uff0c\u9700\u8981\u53d8\u66f4 command \u4e3a `npx.cmd`\u3002\u5426\u5219\u4f1a\u542f\u52a8\u5931\u8d25\u3002\\n\\n#### 1.2.2 \u6570\u636e\u5e93\u6587\u4ef6\u53d8\u66f4\\n\\nPlayground \u4f7f\u7528 SQLite \u4f5c\u4e3a Chat Memory \u7684\u5b58\u50a8\u6570\u636e\u5e93\u3002\u5728\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u4f1a\u81ea\u52a8\u5728 `src/main/resources` \u76ee\u5f55\u4e0b\u521b\u5efa saa.db \u7684\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5982\u679c\u542f\u52a8\u65f6\u6ca1\u6709\u81ea\u52a8\u521b\u5efa\uff0c\u51fa\u73b0\u542f\u52a8\u5931\u8d25\u9519\u8bef\u65f6\u3002\u60a8\u9700\u8981\u624b\u52a8\u521b\u5efa\u6b64\u6587\u4ef6\u3002\\n\\n#### 1.2.3 \u524d\u7aef\u6253\u5305\\n\\nplayground \u524d\u7aef\u9879\u76ee\u91c7\u7528\u6253\u5305\u7f16\u8bd1\u5230 jar \u5305\u4e2d\u4e00\u8d77\u542f\u52a8\u65b9\u5f0f\u8fd0\u884c\uff0c\u56e0\u6b64\u5728\u542f\u52a8\u540e\u7aef\u65f6\uff0c\u9700\u8981\u8fd0\u884c `mvn clean package`\u3002\u786e\u4fdd\u524d\u7aef\u9879\u76ee\u6b63\u786e\u6253\u5305\u7f16\u8bd1\uff0c\u60a8\u53ef\u4ee5\u5728 `target/classes/static` \u8def\u5f84\u4e0b\u770b\u5230\u524d\u7aef\u8d44\u6e90\u6587\u4ef6\u3002\\n\\n#### 1.2.4 \u53ef\u89c2\u6d4b\u96c6\u6210\\n\\nPlayground \u9879\u76ee\u4e2d\u96c6\u6210\u4e86 Spring AI \u7684\u53ef\u89c2\u6d4b\u529f\u80fd\uff0c\u5982\u679c\u60a8\u4e0d\u60f3\u89c2\u5bdf AI \u5e94\u7528\u8fd0\u884c\u4e2d\u7684\u4e00\u4e9b\u6307\u6807\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u5ffd\u7565\u6b64\u6b65\u9aa4\u3002\\n\\n> PS: \u56e0\u4e3a AI \u5927\u6a21\u578b\u5e94\u7528\u7684\u89c2\u6d4b\u6570\u636e\u4e2d\u5305\u542b\u7528\u6237\u7684\u8f93\u5165\u7b49\u4fe1\u606f\uff0c\u5728\u751f\u4ea7\u90e8\u7f72\u65f6\uff0c\u8bf7**\u786e\u4fdd\u654f\u611f\u4fe1\u606f\u9009\u9879\u5173\u95ed**\u3002\\n\\n\u5728 spring-ai-alibaba-example \u4ed3\u5e93 docker-compose \u76ee\u5f55\u51c6\u5907\u4e86 AI \u5e94\u7528\u5e38\u7528\u7684\u5de5\u5177 docker-compose \u542f\u52a8\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003\u542f\u52a8 [zipkin](https://github.com/springaialibaba/spring-ai-alibaba-examples/blob/main/docker-compose/zipkin/docker-compose.yml)\u3002\\n\\n\u53ef\u89c2\u6d4b\u5b9e\u73b0\u53c2\u8003\uff1ahttps://java2ai.com/blog/spring-ai-alibaba-observability-arms/?spm=5176.29160081.0.0.2856aa5cenvkmu\\n\\n#### 1.2.5 apiKey \u914d\u7f6e\\n\\nPlayground \u9879\u76ee\u96c6\u6210\u4e86 RAG\uff0c\u5411\u91cf\u6570\u636e\u5e93\u548c Function Call \u7b49\u529f\u80fd\uff0c\u56e0\u6b64\u5728\u542f\u52a8\u4e4b\u521d\u60a8\u5e94\u8be5\u914d\u7f6e\u5bf9\u5e94\u7684 ak\u3002\\n\\n> PS: playgrond \u4e2d\u6240\u6709\u7684 key \u90fd\u901a\u8fc7 env \u7684\u65b9\u5f0f\u6ce8\u5165\uff0c\u5982\u679c\u914d\u7f6e\u4e86 env \u4e4b\u540e\uff0c\u9879\u76ee\u4ecd\u7136\u83b7\u53d6\u4e0d\u5230 ak\uff0c\u8bf7**\u91cd\u542f IDEA**\\n\\n1. DashScope \u5927\u6a21\u578b ak\uff1aAI \u5e94\u7528\u4f7f\u7528\\n2. \u963f\u91cc\u4e91 IQS \u4fe1\u606f\u68c0\u7d22\u670d\u52a1 ak\uff1a\u6a21\u5757\u5316 RAG \u793a\u4f8b\uff0cweb search \u4f7f\u7528\\n3. \u963f\u91cc\u4e91 Analytic \u9879\u76ee\u6570\u636e\u5e93 ak\uff1aRAG \u4f7f\u7528\uff1b\\n4. \u767e\u5ea6\u7ffb\u8bd1\u548c\u767e\u5ea6\u5730\u56fe ak\uff1aFunction Call \u8c03\u7528\u4f7f\u7528\uff1b\\n5. Github \u4e2a\u4eba secret\uff1aMCP Server \u6f14\u793a\u4f7f\u7528\u3002\\n\\n\u5173\u4e8e AK \u7684\u83b7\u53d6\u65b9\u5f0f\u81ea\u884c\u641c\u7d22\uff0c\u8fd9\u91cc\u4e0d\u5728\u8fc7\u591a\u8d58\u8ff0\u3002\\n\\n### 1.3 \u542f\u52a8\u5e76\u8bbf\u95ee\\n\\n\u5982\u679c\u4e0a\u9762\u7684\u914d\u7f6e\u6b65\u9aa4\u5168\u90e8\u5b8c\u6210\uff0c\u5728 playground \u9879\u76ee\u542f\u52a8\u4e4b\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u8f93\u5165 `http://localhost:8080` \u60a8\u5c06\u4f1a\u770b\u5230\u6587\u7ae0\u5f00\u59cb\u65f6\u7684\u9996\u9875\u9875\u9762\u3002\\n\\n![image-20250607171739807](/img/ai/playground/image-20250607171739807.png)\\n\\n> PS: \u5982\u679c\u4f53\u9a8c\u5bf9\u5e94\u7684 Function Call \u6216\u8005 MCP \u529f\u80fd\u65f6\uff0c**\u8bf7\u786e\u4fdd\u914d\u7f6e\u4e86\u5bf9\u5e94\u7684\u670d\u52a1 AK \u4e14 AK \u6709\u6548**\u3002\\n>\\n> **\u6b64\u9879\u76ee\u4ec5\u4f5c\u4e3a\u6f14\u793a\u4f7f\u7528\uff0c\u4e00\u4e9b\u529f\u80fd\u521d\u5177\u5f62\u72b6\uff0c\u5c1a\u4e0d\u5b8c\u5584\u3002\u6b22\u8fce\u8d21\u732e\u4ee3\u7801\u5e76\u5b8c\u5584\u9879\u76ee\uff01\ud83d\ude80**\\n\\n---\\n\\n## <span id=\\"config\\">2. \u914d\u7f6e\u4ecb\u7ecd</span>\\n\\nplayground \u9879\u76ee\u4f5c\u4e3a\u4e00\u4e2a\u8f83\u5b8c\u5584\u7684 AI \u5e94\u7528\u9879\u76ee\uff0c\u6d89\u53ca\u8f83\u591a\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u6b64\u7ae0\u8282\u4e2d\u5c06\u4e00\u4e00\u8bf4\u660e\u3002\\n\\n### 2.1 resources \u914d\u7f6e\\n\\nresource \u76ee\u5f55\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a\\n\\n```text\\nresources\\n\u251c\u2500\u2500 application-dev.yml\\n\u251c\u2500\u2500 application-prod.yml\\n\u251c\u2500\u2500 application.yml\\n\u251c\u2500\u2500 banner.txt\\n\u251c\u2500\u2500 db\\n\u251c\u2500\u2500 logback-spring.xml\\n\u251c\u2500\u2500 mcp-config.yml\\n\u251c\u2500\u2500 mcp-libs\\n\u251c\u2500\u2500 models.yaml\\n\u2514\u2500\u2500 rag\\n```\\n\\n1. db \u4e3a saa.db \u76ee\u5f55\uff0c\u4e3b\u8981\u4e3a playground \u7684 chat memory \u63d0\u4f9b\u5b58\u50a8\u652f\u6301\uff1b\\n2. mcp-libs\uff1aMCP Stdio \u7684\u670d\u52a1 jar \u76ee\u5f55\uff1b\\n3. rag\uff1aRAG \u529f\u80fd\u7684\u77e5\u8bc6\u5e93\u6587\u6863\u76ee\u5f55\uff0c\u5728\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u5c06\u81ea\u52a8\u5411\u91cf\u5316\u6587\u6863\u5e76\u5b58\u5165\u5411\u91cf\u6570\u636e\u5e93\uff1b\\n4. mcp-config.yaml\uff1apalyground \u9879\u76ee\u589e\u5f3a\u7684 mcp-server \u914d\u7f6e\uff1b\\n5. application-*.yml\uff1a\u9879\u76ee\u542f\u52a8\u914d\u7f6e\u3002\\n\\n#### 2.1.1 MCP Config \u589e\u5f3a\\n\\n\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u5728 playground \u4e2d\u4f7f\u7528 MCP Stdio \u7684\u65b9\u5f0f\u6765\u96c6\u6210\u548c\u6f14\u793a MCP \u529f\u80fd\uff0c\u5728\u6d89\u53ca\u5230\u672c\u5730\u670d\u52a1\u65f6\uff0c\u4f8b\u5982\u4ee5\u4e0b\u914d\u7f6e\uff1a\\n\\n```json\\n{\\n    \\"mcpServers\\": {\\n        \\"weather\\": {\\n            \\"command\\": \\"java\\",\\n            \\"args\\": [\\n                \\"-Dspring.ai.mcp.server.stdio=true\\",\\n                \\"-Dspring.main.web-application-type=none\\",\\n                \\"-Dlogging.pattern.console=\\",\\n                \\"-jar\\",\\n                \\"D:\\\\\\\\open_sources\\\\\\\\spring-ai-alibaba-examples\\\\\\\\spring-ai-alibaba-mcp-example\\\\\\\\spring-ai-alibaba-mcp-build-example\\\\\\\\mcp-stdio-server-example\\\\\\\\target\\\\\\\\mcp-stdio-server-example-1.0.0.jar\\"\\n            ],\\n            \\"env\\": {}\\n        }\\n    }\\n}\\n```\\n\\n\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u914d\u7f6e\u65f6\uff0c\u5fc5\u987b\u8981\u6c42\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u914d\u7f6e\u4e14 json \u914d\u7f6e\u8f83\u96be\u7406\u89e3\u3002\u56e0\u6b64 playground \u5728\u914d\u7f6e\u505a\u4e86\u589e\u5f3a\uff0c\u5c06 json \u8f6c\u4e3a\u4e86\u8bed\u4e49\u6e05\u6670\u7684 yml \u65b9\u5f0f\u5b9a\u4e49\u3002\u7ec6\u8282\u8bf7\u53c2\u8003 [MCP](#mcp-config)\\n\\n### 2.2 pom.xml \u914d\u7f6e\\n\\n\u6b64\u7ae0\u8282\u90e8\u5206\u5c06\u4e3b\u8981\u4ecb\u7ecd\u6838\u5fc3\u4f9d\u8d56\uff0c\u5176\u4ed6\u4f9d\u8d56\u8bf7\u53c2\u8003\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/blob/main/spring-ai-alibaba-playground/pom.xml\\n\\n```xml\\n<dependencies>\\n\\n    \x3c!-- Chat Memory \u529f\u80fd\u5b9e\u73b0\u65f6\u9700\u8981\u6b64\u4f9d\u8d56\u9879 --\x3e\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\\n    </dependency>\\n\\n    \x3c!-- playground \u6587\u672c\u603b\u7ed3\u529f\u80fd\u4f9d\u8d56 tika \u5bf9\u8f93\u5165\u7684\u5404\u7c7b\u6587\u672c\u8fdb\u884c\u89e3\u6790 --\x3e\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-tika-document-reader</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI MCP client \u76f8\u5173\u4f9d\u8d56--\x3e\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-starter-mcp-client</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-autoconfigure-mcp-client</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n\\t\x3c!-- Spring AI OpenAI Starter --\x3e\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-starter-model-openai</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI RAG markdown \u6587\u672c\u8bfb\u5165\u89e3\u6790 --\x3e\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-markdown-document-reader</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI \u5411\u91cf\u6570\u636e\u5e93 Advisors --\x3e\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-advisors-vector-store</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI Alibaba DashScope starter --\x3e\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\\n        <version>${spring-ai-alibaba.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI Alibaba Memory \u5b9e\u73b0 --\x3e\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-memory</artifactId>\\n        <version>${spring-ai-alibaba.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Spring AI Alibaba analyticdb \u5411\u91cf\u6570\u636e\u5e93\u96c6\u6210 --\x3e\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-store-analyticdb</artifactId>\\n        <version>${spring-ai-alibaba.version}</version>\\n    </dependency>\\n\\n    \x3c!-- DB\uff0c\u4e3a ChatMemory \u548c playground \u63d0\u4f9b\u5b58\u50a8\u652f\u6301 --\x3e\\n    <dependency>\\n        <groupId>org.xerial</groupId>\\n        <artifactId>sqlite-jdbc</artifactId>\\n        <version>${sqlite-jdbc.version}</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>org.hibernate.orm</groupId>\\n        <artifactId>hibernate-community-dialects</artifactId>\\n        <version>${hibernate.version}</version>\\n    </dependency>\\n\\n    \x3c!-- Playground \u53ef\u89c2\u6d4b\u96c6\u6210 --\x3e\\n    <dependency>\\n        <groupId>io.micrometer</groupId>\\n        <artifactId>micrometer-tracing-bridge-brave</artifactId>\\n        <version>${micrometr.version}</version>\\n        <exclusions>\\n            <exclusion>\\n                <artifactId>slf4j-api</artifactId>\\n                <groupId>org.slf4j</groupId>\\n            </exclusion>\\n        </exclusions>\\n    </dependency>\\n    \\n</dependencies>\\n\\n\x3c!-- Spring AI \u548c Spring AI Alibaba \u4f9d\u8d56\u7ba1\u7406 --\x3e\\n<dependencyManagement>\\n    <dependencies>\\n        <dependency>\\n            <groupId>org.springframework.boot</groupId>\\n            <artifactId>spring-boot-dependencies</artifactId>\\n            <version>${spring-boot.version}</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n        <dependency>\\n            <groupId>com.alibaba.cloud.ai</groupId>\\n            <artifactId>spring-ai-alibaba-bom</artifactId>\\n            <version>${spring-ai-alibaba.version}</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n        <dependency>\\n            <groupId>org.springframework.ai</groupId>\\n            <artifactId>spring-ai-bom</artifactId>\\n            <version>${spring-ai.version}</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n    </dependencies>\\n</dependencyManagement>\\n```\\n\\n---\\n\\n## <span id=\\"project\\">3. \u9879\u76ee\u4ecb\u7ecd</span>\\n\\n\u5728 playground \u4e2d\u96c6\u6210\u4e86\u8f83\u591a\u529f\u80fd\uff0cRAG\uff0cMCP\uff0cFunction Call \u7b49\u3002\u6b64\u7ae0\u8282\u4e2d\u5c06\u4e3b\u8981\u5bf9 RAG Web Search\uff0cMCP \u8c03\u7528\uff0cFunction Call \u62c6\u5206\u4ecb\u7ecd\u3002\u4ee5\u4fbf\u80fd\u591f\u57fa\u4e8e\u6b64 playground \u642d\u5efa\u7b26\u5408\u81ea\u5df1\u9700\u6c42\u7684 AI \u5e94\u7528\u3002\\n\\n### 3.1 RAG \u5b9e\u73b0\\n\\nRAG \u4ecd\u7136\u662f\u5f53\u4eca\u6700\u6d41\u884c\u7684 AI \u5e94\u7528\u7ed3\u5408\u79c1\u6709\u77e5\u8bc6\u5e93\u7684\u65b9\u5f0f\u3002\u901a\u8fc7 RAG \u80fd\u591f\u6784\u5efa\u95ee\u7b54\u673a\u5668\u4eba\uff0c\u4e13\u4e1a\u9886\u57df\u52a9\u624b\u7b49\u3002\\n\\n\u5728 playground \u9879\u76ee\u4e2d\uff0c\u4f7f\u7528\u7684\u5411\u91cf\u6570\u636e\u5e93\u662f analyticdb \u548c\u57fa\u4e8e\u5185\u5b58\u7684 SimpleVectorStore\u3002**\u60a8\u53ef\u4ee5\u66ff\u6362\u4e3a\u4efb\u610f\u60a8\u60f3\u4f7f\u7528\u7684\u5411\u91cf\u6570\u636e\u5e93**\u3002\\n\\n#### 3.1.1 \u5411\u91cf\u6570\u636e\u5e93\u521d\u59cb\u5316\\n\\n\u521d\u59cb\u5316\u914d\u7f6e\u4ee3\u7801\u4f4d\u4e8e\uff1acom/alibaba/cloud/ai/application/config/rag\\n\\n```java\\n@Bean\\nCommandLineRunner ingestTermOfServiceToVectorStore(VectorStoreDelegate vectorStoreDelegate) {\\n    return args -> {\\n       String type = System.getenv(\\"VECTOR_STORE_TYPE\\");\\n       VectorStoreInitializer initializer = new VectorStoreInitializer();\\n       initializer.init(vectorStoreDelegate.getVectorStore(type));\\n    };\\n}\\n```\\n\\n\u901a\u8fc7 VECTOR_STORE_TYPE \u7684\u65b9\u5f0f\u6765\u9009\u62e9\u4f7f\u7528\u90a3\u79cd\u7c7b\u578b\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0cVectorStoreDelegate \u4ee3\u7801\u5982\u4e0b\uff1a\u5176\u4f5c\u7528\u662f\u901a\u8fc7 type \u7684\u503c\u8fd4\u56de\u5411\u91cf\u6570\u636e\u5e93\u7684\u5b9e\u4f8b bean\u3002\\n\\n> PS\uff1a\u5728\u8fd9\u91cc\u60a8\u53ef\u4ee5\u66ff\u6362\u4e3a\u60a8\u6240\u4f7f\u7528\u7684\u5411\u91cf\u6570\u636e\u5e93\u6765\u6784\u5efa RAG \u529f\u80fd\u3002\\n\\n```java\\npublic class VectorStoreDelegate {\\n\\n    private VectorStore simpleVectorStore;\\n\\n    private VectorStore analyticdbVectorStore;\\n\\n    public VectorStoreDelegate(VectorStore simpleVectorStore, VectorStore analyticdbVectorStore) {\\n       this.simpleVectorStore = simpleVectorStore;\\n       this.analyticdbVectorStore = analyticdbVectorStore;\\n    }\\n\\n    public VectorStore getVectorStore(String vectorStoreType) {\\n\\n       if (Objects.equals(vectorStoreType, \\"analyticdb\\") && analyticdbVectorStore != null) {\\n          return analyticdbVectorStore;\\n       }\\n\\n       return simpleVectorStore;\\n    }\\n}\\n```\\n\\n#### 3.1.2 RAG \u6587\u6863\u521d\u59cb\u5316\\n\\n\u5728 VectorStoreInitializer \u4e2d\u5c06 resources/rag \u4e0b\u7684 md \u6587\u6863\u5411\u91cf\u5316\u5e76\u52a0\u8f7d\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\uff1a\\n\\n```java\\npublic void init(VectorStore vectorStore) throws Exception {\\n    List<MarkdownDocumentReader> markdownDocumentReaderList = loadMarkdownDocuments();\\n\\n    int size = 0;\\n    if (markdownDocumentReaderList.isEmpty()) {\\n        logger.warn(\\"No markdown documents found in the directory.\\");\\n        return;\\n    }\\n\\n    logger.debug(\\"Start to load markdown documents into vector store......\\");\\n    for (MarkdownDocumentReader markdownDocumentReader : markdownDocumentReaderList) {\\n        List<Document> documents = new TokenTextSplitter(2000, 1024, 10, 10000, true).transform(markdownDocumentReader.get());\\n        size += documents.size();\\n\\n        // \u62c6\u5206 documents \u5217\u8868\u4e3a\u6700\u5927 25 \u4e2a\u5143\u7d20\u7684\u5b50\u5217\u8868\\n        for (int i = 0; i < documents.size(); i += 25) {\\n            int end = Math.min(i + 25, documents.size());\\n            List<Document> subList = documents.subList(i, end);\\n            vectorStore.add(subList);\\n        }\\n    }\\n    logger.debug(\\"Load markdown documents into vector store successfully. Load {} documents.\\", size);\\n}\\n```\\n\\n#### 3.1.3 \u6784\u5efa Service \\n\\n\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u6ce8\u5165\u5411\u91cf\u6570\u636e\u5e93 bean\uff0c\u5373\u53ef\u5b8c\u6210 RAG \u529f\u80fd\u7684\u5b9e\u73b0\u3002\\n\\n```java\\n@Service\\npublic class SAARAGService {\\n\\n    private final ChatClient client;\\n\\n    private final VectorStoreDelegate vectorStoreDelegate;\\n\\n    private String vectorStoreType;\\n\\n    public SAARAGService(\\n          VectorStoreDelegate vectorStoreDelegate,\\n          SimpleLoggerAdvisor simpleLoggerAdvisor,\\n          MessageChatMemoryAdvisor messageChatMemoryAdvisor,\\n          @Qualifier(\\"dashscopeChatModel\\") ChatModel chatModel,\\n          @Qualifier(\\"systemPromptTemplate\\") PromptTemplate systemPromptTemplate\\n    ) {\\n       this.vectorStoreType = System.getenv(\\"VECTOR_STORE_TYPE\\");\\n       this.vectorStoreDelegate = vectorStoreDelegate;\\n       this.client = ChatClient.builder(chatModel)\\n             .defaultSystem(\\n                   systemPromptTemplate.getTemplate()\\n             ).defaultAdvisors(\\n                   messageChatMemoryAdvisor,\\n                   simpleLoggerAdvisor\\n             ).build();\\n    }\\n\\n    public Flux<String> ragChat(String chatId, String prompt) {\\n\\n       return client.prompt()\\n             .user(prompt)\\n             .advisors(memoryAdvisor -> memoryAdvisor\\n                   .param(ChatMemory.CONVERSATION_ID, chatId)\\n             ).advisors(\\n                   QuestionAnswerAdvisor\\n                         .builder(vectorStoreDelegate.getVectorStore(vectorStoreType))\\n                         .searchRequest(\\n                               SearchRequest.builder()\\n                                     // TODO all documents retrieved from ADB are under 0.1\\n//                                   .similarityThreshold(0.6d)\\n                                     .topK(6)\\n                                     .build()\\n                         )\\n                         .build()\\n             ).stream()\\n             .content();\\n    }\\n\\n}\\n```\\n\\nRAG \u5b9e\u73b0\u6587\u7ae0\u53c2\u8003\uff1ahttps://java2ai.com/blog/spring-ai-alibaba-rag-ollama/?spm=5176.29160081.0.0.2856aa5cenvkmu\\n\\n### 3.2 Web Search  \u529f\u80fd\u5b9e\u73b0\\n\\n\u5728 Qwen \u6a21\u578b\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 `enable_search` \u5f00\u542f\u6a21\u578b\u7684\u8054\u7f51\u641c\u7d22\u80fd\u529b\u3002\u5728 playground \u901a\u8fc7 Module RAG \u7684\u65b9\u5f0f\u6765\u96c6\u6210\u8054\u7f51\u641c\u7d22\u529f\u80fd\u3002\\n\\n#### 3.2.1 Module RAG \u4ecb\u7ecd\\n\\n<img src=\\"https://java2ai.com/img/blog/module-rag/module-rag.png\\"/>\\n\\nSpring AI \u5b9e\u73b0\u4e86\u6a21\u5757\u5316 RAG \u67b6\u6784\uff0c\u67b6\u6784\u7684\u7075\u611f\u6765\u81ea\u4e8e\u8bba\u6587\u201c[\u6a21\u5757\u5316 RAG\uff1a\u5c06 RAG \u7cfb\u7edf\u8f6c\u53d8\u4e3a\u7c7b\u4f3c\u4e50\u9ad8\u7684\u53ef\u91cd\u6784\u6846\u67b6](https://arxiv.org/abs/2407.21059)\u201d\u4e2d\u8be6\u8ff0\u7684\u6a21\u5757\u5316\u6982\u5ff5\u3002\u5c06 RAG \u5206\u4e3a\u4e09\u6b65\uff1a\\n\\n**Pre-Retrieval**\\n\\n> \u589e\u5f3a\u548c\u8f6c\u6362\u7528\u6237\u8f93\u5165\uff0c\u4f7f\u5176\u66f4\u6709\u6548\u5730\u6267\u884c\u68c0\u7d22\u4efb\u52a1\uff0c\u89e3\u51b3\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u67e5\u8be2\u3001query \u8bed\u4e49\u4e0d\u6e05\u6670\u3001\u6216\u4e0d\u53d7\u652f\u6301\u7684\u8bed\u8a00\u7b49\u3002\\n\\n1. QueryAugmenter \u67e5\u8be2\u589e\u5f3a\uff1a\u4f7f\u7528\u9644\u52a0\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u4fe1\u606f\u589e\u5f3a\u7528\u6237 query\uff0c\u63d0\u4f9b\u5927\u6a21\u578b\u56de\u7b54\u95ee\u9898\u65f6\u7684\u5fc5\u8981\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1b\\n2. QueryTransformer \u67e5\u8be2\u6539\u5199\uff1a\u56e0\u4e3a\u7528\u6237\u7684\u8f93\u5165\u901a\u5e38\u662f\u7247\u9762\u7684\uff0c\u5173\u952e\u4fe1\u606f\u8f83\u5c11\uff0c\u4e0d\u4fbf\u4e8e\u5927\u6a21\u578b\u7406\u89e3\u548c\u56de\u7b54\u95ee\u9898\u3002\u56e0\u6b64\u9700\u8981\u4f7f\u7528 prompt \u8c03\u4f18\u624b\u6bb5\u6216\u8005\u5927\u6a21\u578b\u6539\u5199\u7528\u6237 query\uff1b\\n3. QueryExpander \u67e5\u8be2\u6269\u5c55\uff1a\u5c06\u7528\u6237 query \u6269\u5c55\u4e3a\u591a\u4e2a\u8bed\u4e49\u4e0d\u540c\u7684\u53d8\u4f53\u4ee5\u83b7\u5f97\u4e0d\u540c\u89c6\u89d2\uff0c\u6709\u52a9\u4e8e\u68c0\u7d22\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u5e76\u589e\u52a0\u627e\u5230\u76f8\u5173\u7ed3\u679c\u7684\u673a\u4f1a\u3002\\n\\n**Retrieval**\\n\\n> \u8d1f\u8d23\u67e5\u8be2\u5411\u91cf\u5b58\u50a8\u7b49\u6570\u636e\u7cfb\u7edf\u5e76\u68c0\u7d22\u548c\u7528\u6237 query \u76f8\u5173\u6027\u6700\u9ad8\u7684 Document\u3002\\n\\n1. DocumentRetriever\uff1a\u68c0\u7d22\u5668\uff0c\u6839\u636e QueryExpander \u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u6e90\u8fdb\u884c\u68c0\u7d22\uff0c\u4f8b\u5982 \u641c\u7d22\u5f15\u64ce\u3001\u5411\u91cf\u5b58\u50a8\u3001\u6570\u636e\u5e93\u6216\u77e5\u8bc6\u56fe\u7b49\uff1b\\n2. DocumentJoiner\uff1a\u5c06\u4ece\u591a\u4e2a query \u548c\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u68c0\u7d22\u5230\u7684 Document \u5408\u5e76\u4e3a\u4e00\u4e2a Document \u96c6\u5408\uff1b\\n\\n**Post-Retrieval**\\n\\n> \u8d1f\u8d23\u5904\u7406\u68c0\u7d22\u5230\u7684 Document \u4ee5\u83b7\u5f97\u6700\u4f73\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u89e3\u51b3\u6a21\u578b\u4e2d\u7684*\u4e2d\u95f4\u4e22\u5931*\u548c\u4e0a\u4e0b\u6587\u957f\u5ea6\u9650\u5236\u7b49\u3002\\n>\\n> **PS\uff1aSpring AI \u5728 1.0.0 \u4e2d\u5f03\u7528\u4e86 DocumentRanker\u3002\u60a8\u53ef\u4ee5\u5b9e\u73b0 DocumentPostProcessor \u63a5\u53e3\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\u3002Playground \u5f85\u8865\u5145\u3002**\\n\\n**\u751f\u6210**\\n\\n\u751f\u6210\u7528\u6237 Query \u5bf9\u5e94\u7684\u5927\u6a21\u578b\u8f93\u51fa\u3002\\n\\n#### 3.2.2 \u6570\u636e\u6765\u6e90\\n\\n\u8054\u7f51\u641c\u7d22\uff0c\u987e\u540d\u601d\u4e49\u3002\u5c31\u662f\u5c06\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u901a\u8fc7\u5b9e\u65f6\u641c\u7d22\u7684\u65b9\u5f0f\u83b7\u53d6\u5230\u5e76\u4ea4\u7ed9\u5927\u6a21\u578b\u6765\u83b7\u5f97\u6700\u65b0\u5f97\u6d88\u606f\u54a8\u8be2\u3002playground \u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u963f\u91cc\u4e91\u7684 IQS\uff0c\u4fe1\u606f\u68c0\u7d22\u670d\u52a1\u4f5c\u4e3a\u8054\u7f51\u641c\u7d22\u7684\u6570\u636e\u6e90\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u670d\u52a1\u66ff\u6362 IQS\u3002\\n\\nIIQS \u641c\u7d22\u5b9e\u73b0\u5982\u4e0b\uff1a\u5176\u672c\u8d28\u4e3a\u8bf7\u6c42\u670d\u52a1\u63a5\u53e3\u6216\u8c03\u7528 SDK\u3002\\n\\n```java\\npublic GenericSearchResult search(String query) {\\n\\n    // String encodeQ = URLEncoder.encode(query, StandardCharsets.UTF_8);\\n    ResponseEntity<GenericSearchResult> resultResponseEntity = run(query);\\n\\n    return genericSearchResult(resultResponseEntity);\\n}\\n\\nprivate ResponseEntity<GenericSearchResult> run(String query) {\\n\\n    return this.restClient.get()\\n        .uri(\\n        \\"/search/genericSearch?query={query}&timeRange={timeRange}\\",\\n        query,\\n        TIME_RANGE\\n    ).retrieve()\\n        .toEntity(GenericSearchResult.class);\\n}\\n\\n}\\n```\\n\\n#### 3.2.3 \u6570\u636e\u52a0\u5de5\\n\\n\u5728\u8fd9\u4e00\u6b65\u4e2d\uff0c\u5c06\u641c\u7d22\u5f15\u64ce\u83b7\u53d6\u5230\u7684\u6570\u636e\u8fdb\u884c\u6e05\u6d17\u5e76\u8f6c\u4e3a Spring AI \u7684 Document \u6587\u6863\u3002\\n\\n```java\\npublic List<Document> getData(GenericSearchResult respData) throws URISyntaxException {\\n\\n\\t\\tList<Document> documents = new ArrayList<>();\\n\\n\\t\\tMap<String, Object> metadata = getQueryMetadata(respData);\\n\\n\\t\\tfor (ScorePageItem pageItem : respData.getPageItems()) {\\n\\n\\t\\t\\tMap<String, Object> pageItemMetadata = getPageItemMetadata(pageItem);\\n\\t\\t\\tDouble score = getScore(pageItem);\\n\\t\\t\\tString text = getText(pageItem);\\n\\n\\t\\t\\tif (Objects.equals(\\"\\", text)) {\\n\\n\\t\\t\\t\\tMedia media = getMedia(pageItem);\\n\\t\\t\\t\\tDocument document = new Document.Builder()\\n\\t\\t\\t\\t\\t\\t.metadata(metadata)\\n\\t\\t\\t\\t\\t\\t.metadata(pageItemMetadata)\\n\\t\\t\\t\\t\\t\\t.media(media)\\n\\t\\t\\t\\t\\t\\t.score(score)\\n\\t\\t\\t\\t\\t\\t.build();\\n\\n\\t\\t\\t\\tdocuments.add(document);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tDocument document = new Document.Builder()\\n\\t\\t\\t\\t\\t.metadata(metadata)\\n\\t\\t\\t\\t\\t.metadata(pageItemMetadata)\\n\\t\\t\\t\\t\\t.text(text)\\n\\t\\t\\t\\t\\t.score(score)\\n\\t\\t\\t\\t\\t.build();\\n\\n\\t\\t\\tdocuments.add(document);\\n\\t\\t}\\n\\n\\t\\treturn documents;\\n\\t}\\n\\n\\tprivate Double getScore(ScorePageItem pageItem) {\\n\\n\\t\\treturn pageItem.getScore();\\n\\t}\\n\\n\\t// .... \u7701\u7565\u6570\u636e\u6e05\u6d17\u4ee3\u7801\\n\\n\\t// \u9650\u5236\u8054\u7f51\u641c\u7d22\u7684\u6587\u6863\u6570\uff0c\u63d0\u9ad8\u8054\u7f51\u641c\u7d22\u54cd\u5e94\u901f\u5ea6\\n\\tpublic List<Document> limitResults(List<Document> documents, int minResults) {\\n\\n\\t\\tint limit = Math.min(documents.size(), minResults);\\n\\n\\t\\treturn documents.subList(0, limit);\\n\\t}\\n\\n}\\n```\\n\\n#### 3.2.4 Module RAG \u6d41\u7a0b\\n\\n\u63a5\u4e0b\u6765\uff0c\u4fbf\u662f\u4f7f\u7528 Module RAG API \u5904\u7406\u7528\u6237 Prompt\u3002\u4f7f\u5176\u66f4\u7b26\u5408\u5927\u6a21\u578b\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\\n\\n\u5177\u4f53\u4ee3\u7801\u53c2\u8003\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground/src/main/java/com/alibaba/cloud/ai/application/rag\\n\\n#### 3.2.5 Web Search \u670d\u52a1\u7c7b\\n\\n1. \u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u6ce8\u5165\u76f8\u5173 Bean\uff1b\\n2. \u5728 ChatClient \u4e2d\u901a\u8fc7 RetrievalAugmentationAdvisor \u5f15\u5165 advisor \u5b9e\u73b0\u6a21\u5757\u5316 RAG \u7684\u8054\u7f51\u641c\u7d22\u529f\u80fd\u3002\\n\\n```java\\npublic SAAWebSearchService(\\n       DataClean dataCleaner,\\n       QueryExpander queryExpander,\\n       IQSSearchEngine searchEngine,\\n       QueryTransformer queryTransformer,\\n       SimpleLoggerAdvisor simpleLoggerAdvisor,\\n       @Qualifier(\\"dashscopeChatModel\\") ChatModel chatModel,\\n       @Qualifier(\\"queryArgumentPromptTemplate\\") PromptTemplate queryArgumentPromptTemplate\\n) {\\n\\n    this.queryTransformer = queryTransformer;\\n    this.queryExpander = queryExpander;\\n    this.queryArgumentPromptTemplate = queryArgumentPromptTemplate;\\n\\n    // reasoning content for DeepSeek-r1 is integrated into the output\\n    this.reasoningContentAdvisor = new ReasoningContentAdvisor(1);\\n\\n    // Build chatClient\\n    this.chatClient = ChatClient.builder(chatModel)\\n          .defaultOptions(\\n                DashScopeChatOptions.builder()\\n                      .withModel(DEFAULT_WEB_SEARCH_MODEL)\\n                      // stream \u6a21\u5f0f\u4e0b\u662f\u5426\u5f00\u542f\u589e\u91cf\u8f93\u51fa\\n                      .withIncrementalOutput(true)\\n                      .build())\\n          .build();\\n\\n    // \u65e5\u5fd7\\n    this.simpleLoggerAdvisor = simpleLoggerAdvisor;\\n\\n    this.webSearchRetriever = WebSearchRetriever.builder()\\n          .searchEngine(searchEngine)\\n          .dataCleaner(dataCleaner)\\n          .maxResults(2)\\n          .build();\\n}\\n\\n//Handle user input\\npublic Flux<String> chat(String prompt) {\\n\\n    return chatClient.prompt()\\n          .advisors(\\n             createRetrievalAugmentationAdvisor(),\\n             reasoningContentAdvisor,\\n             simpleLoggerAdvisor\\n          ).user(prompt)\\n          .stream()\\n          .content();\\n}\\n\\nprivate RetrievalAugmentationAdvisor createRetrievalAugmentationAdvisor() {\\n\\n    return RetrievalAugmentationAdvisor.builder()\\n          .documentRetriever(webSearchRetriever)\\n          .queryTransformers(queryTransformer)\\n          .queryAugmenter(\\n                new CustomContextQueryAugmenter(\\n                      queryArgumentPromptTemplate,\\n                      null,\\n                      true)\\n          ).queryExpander(queryExpander)\\n          .documentJoiner(new ConcatenationDocumentJoiner())\\n          .build();\\n}\\n```\\n\\nWeb Search \u5b9e\u73b0\u6587\u7ae0\u53c2\u8003\uff1ahttps://java2ai.com/blog/spring-ai-alibaba-module-rag/?spm=5176.29160081.0.0.2856aa5cenvkmu&source=blog/\\n\\nSpring AI RAG\uff1ahttps://docs.spring.io/spring-ai/reference/api/retrieval-augmented-generation.html#_advisors\\n\\n### <span id=\\"mcp-config\\">3.3 MCP\xa0 \u96c6\u6210</span>\\n\\n#### 3.3.1 MCP Config \u589e\u5f3a\\n\\n\u4e3a\u4e86\u89e3\u51b3 MCP Stdio json \u914d\u7f6e\u6587\u4ef6\u96be\u4ee5\u7406\u89e3\u548c\u672c\u5730 MCP Server \u4e8c\u8fdb\u5236\u6587\u4ef6\u9700\u8981\u7edd\u5bf9\u8def\u5f84\u7684\u95ee\u9898\u3002\u5728 playground \u4e2d\u5bf9 MCP Stdio \u914d\u7f6e\u505a\u4e86\u589e\u5f3a\u5904\u7406\u3002\\n\\n\u5176\u4e3b\u8981\u6b65\u9aa4\u662f\u5c06 McpStdioClientProperties \u5c5e\u6027\u914d\u7f6e\u91cd\u5199\uff0c\u4ee5\u4fbf\u5728\u540e\u7eed MCP Client \u521d\u59cb\u5316\u4f7f\u7528\u589e\u5f3a\u7684 MCP \u914d\u7f6e\u3002\\n\\n```java\\n@Component\\npublic class CustomMcpStdioTransportConfigurationBeanPostProcessor implements BeanPostProcessor {\\n\\n\\tprivate static final Logger logger = LoggerFactory.getLogger(CustomMcpStdioTransportConfigurationBeanPostProcessor.class);\\n\\n\\tprivate final ObjectMapper objectMapper;\\n\\n\\tprivate final McpStdioClientProperties mcpStdioClientProperties;\\n\\n\\tpublic CustomMcpStdioTransportConfigurationBeanPostProcessor(\\n\\t\\t\\tObjectMapper objectMapper,\\n\\t\\t\\tMcpStdioClientProperties mcpStdioClientProperties\\n\\t) {\\n\\t\\tthis.objectMapper = objectMapper;\\n\\t\\tthis.mcpStdioClientProperties = mcpStdioClientProperties;\\n\\t}\\n\\n\\t@NotNull\\n\\t@Override\\n\\tpublic Object postProcessAfterInitialization(@NotNull Object bean, @NotNull String beanName) throws BeansException {\\n\\n\\t\\tif (bean instanceof StdioTransportAutoConfiguration) {\\n\\n\\t\\t\\tlogger.debug(\\"\u589e\u5f3a McpStdioTransportConfiguration bean start: {}\\", beanName);\\n\\n\\t\\t\\tMcpServerConfig mcpServerConfig;\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tmcpServerConfig = McpServerUtils.getMcpServerConfig();\\n\\n\\t\\t\\t\\t// Handle the jar relative path issue in the configuration file.\\n\\t\\t\\t\\tfor (Map.Entry<String, McpStdioClientProperties.Parameters> entry : mcpServerConfig.getMcpServers()\\n\\t\\t\\t\\t\\t\\t.entrySet()) {\\n\\n\\t\\t\\t\\t\\tif (entry.getValue() != null && entry.getValue().command().startsWith(\\"java\\")) {\\n\\n\\t\\t\\t\\t\\t\\tMcpStdioClientProperties.Parameters serverConfig = entry.getValue();\\n\\t\\t\\t\\t\\t\\tString oldMcpLibsPath = McpServerUtils.getLibsPath(serverConfig.args());\\n\\t\\t\\t\\t\\t\\tString rewriteMcpLibsAbsPath = getMcpLibsAbsPath(McpServerUtils.getLibsPath(serverConfig.args()));\\n\\t\\t\\t\\t\\t\\tif (rewriteMcpLibsAbsPath != null) {\\n\\t\\t\\t\\t\\t\\t\\tserverConfig.args().remove(oldMcpLibsPath);\\n\\t\\t\\t\\t\\t\\t\\tserverConfig.args().add(rewriteMcpLibsAbsPath);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tString msc = objectMapper.writeValueAsString(mcpServerConfig);\\n\\t\\t\\t\\tlogger.debug(\\"Registry McpServer config: {}\\", msc);\\n\\n\\t\\t\\t\\t// write mcp client\\n\\t\\t\\t\\tmcpStdioClientProperties.setServersConfiguration(new ByteArrayResource(msc.getBytes()));\\n\\t\\t\\t\\t((StdioTransportAutoConfiguration) bean).stdioTransports(this.mcpStdioClientProperties);\\n\\t\\t\\t}\\n\\t\\t\\tcatch (IOException e) {\\n\\t\\t\\t\\tthrow new SAAAppException(e.getMessage());\\n\\t\\t\\t}\\n\\n\\t\\t\\tlogger.debug(\\"\u589e\u5f3a McpStdioTransportConfiguration bean end: {}\\", beanName);\\n\\t\\t}\\n\\n\\t\\treturn bean;\\n\\t}\\n\\n}\\n```\\n\\n\u5728 MCPServerUtils \u4e2d\u8bfb\u53d6 mcp-config.yaml \u914d\u7f6e\u5e76\u8f6c\u4e3a McpServerConfig\u3002\\n\\n```java\\npublic static McpServerConfig getMcpServerConfig() throws IOException {\\n\\n    ObjectMapper mapper = new ObjectMapper(new YAMLFactory());\\n    InputStream resourceAsStream = ModelsUtils.class.getClassLoader().getResourceAsStream(MCP_CONFIG_FILE_PATH);\\n\\n    McpServerConfig mcpServerConfig = mapper.readValue(resourceAsStream, McpServerConfig.class);\\n    mcpServerConfig.getMcpServers().forEach((key, parameters) -> {\\n       Map<String, String> env = parameters.env();\\n       if (Objects.nonNull(env)) {\\n          env.entrySet().stream()\\n                .filter(entry -> entry.getValue() != null && !entry.getValue().isEmpty() &&\\n                      entry.getValue().startsWith(\\"${\\") && entry.getValue().endsWith(\\"}\\"))\\n                .forEach(entry -> {\\n                   String envKey = entry.getValue().substring(2, entry.getValue().length() - 1);\\n                   String envValue = System.getenv(envKey);\\n                   // allow env is null.\\n                   if (envValue != null && !envValue.isEmpty()) {\\n                      env.put(entry.getKey(), envValue);\\n                   }\\n                });\\n       }\\n    });\\n\\n\\n    return mcpServerConfig;\\n}\\n```\\n\\n#### 3.3.2 MCP Server \u5de5\u5177\u56de\u663e\\n\\n\u4e3a\u4e86\u4fbf\u4e8e\u5c55\u793a MCP Client \u5982\u4f55\u8c03\u7528 MCP Server \u7684 tools \u548c\u5c55\u793a MCP Server \u4e2d\u6709\u54ea\u4e9b Tools\uff0cplayground \u4e2d\u505a\u4e86\u7279\u6b8a\u5904\u7406\u3002\\n\\n\u81ea\u5b9a\u4e49 MCP Server \u5b58\u653e MCP Server \u7684 tools \u4fe1\u606f\u7528\u4e8e\u6d4f\u89c8\u5668\u663e\u793a\uff1a\\n\\n```java\\npublic class McpServer {\\n\\n\\tprivate String id;\\n\\n\\tprivate String name;\\n\\n\\tprivate String desc;\\n\\n\\tprivate Map<String, String> env;\\n\\n\\tprivate List<Tools> toolList;\\n}\\n```\\n\\n\u56e0\u4e3a Spring AI \u7684 SyncMcpToolCallback \u4e2d\u7684 MCPClient \u6ca1\u6709\u5bf9\u5916\u66b4\u9732\u83b7\u53d6 MCP Server \u7684\u76f8\u5173\u5c5e\u6027\uff0c\u53ea\u6709 Tools \u5b9a\u4e49\u3002playground \u5bf9 SyncMcpToolCallback \u505a\u4e86\u5305\u88c5\u5904\u7406\uff1a\\n\\n```java\\npublic class SyncMcpToolCallbackWrapper {\\n\\n\\tprivate final SyncMcpToolCallback callback;\\n\\n\\tpublic SyncMcpToolCallbackWrapper(SyncMcpToolCallback callback) {\\n\\t\\tthis.callback = callback;\\n\\t}\\n\\n\\tpublic McpSyncClient getMcpClient() {\\n\\n\\t\\ttry {\\n\\t\\t\\tField field = SyncMcpToolCallback.class.getDeclaredField(\\"mcpClient\\");\\n\\t\\t\\tfield.setAccessible(true);\\n\\t\\t\\treturn (McpSyncClient) field.get(callback);\\n\\t\\t} catch (NoSuchFieldException | IllegalAccessException e) {\\n\\t\\t\\tthrow new RuntimeException(e);\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\n\u5728 MCPServerUtils \u4e2d\u505a\u4e86 MCP Server \u5bb9\u5668\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff1a\\n\\n```java\\npublic static void initMcpServerContainer(ToolCallbackProvider toolCallbackProvider) throws IOException {\\n\\n    McpServerConfig mcpServerConfig = McpServerUtils.getMcpServerConfig();\\n    Map<String, String> mcpServerDescMap = initMcpServerDescMap();\\n\\n    mcpServerConfig.getMcpServers().forEach((key, parameters) -> {\\n\\n        List<McpServer.Tools> toolsList = new ArrayList<>();\\n        for (ToolCallback toolCallback : toolCallbackProvider.getToolCallbacks()) {\\n\\n            // todo: \u62ff\u4e0d\u5230 mcp client, \u5148\u7528\u5305\u88c5\u5668\u62ff\u5427\\n            SyncMcpToolCallback mcpToolCallback = (SyncMcpToolCallback) toolCallback;\\n            SyncMcpToolCallbackWrapper syncMcpToolCallbackWrapper = new SyncMcpToolCallbackWrapper(mcpToolCallback);\\n            String currentMcpServerName = syncMcpToolCallbackWrapper.getMcpClient().getServerInfo().name();\\n\\n            // \u6309\u7167 mcp server name \u805a\u5408 mcp server tools\\n            if (Objects.equals(key, currentMcpServerName)) {\\n                McpServer.Tools tool = new McpServer.Tools();\\n                tool.setDesc(toolCallback.getToolDefinition().description());\\n                tool.setName(toolCallback.getToolDefinition().name());\\n                tool.setParams(toolCallback.getToolDefinition().inputSchema());\\n\\n                toolsList.add(tool);\\n            }\\n        }\\n\\n        McpServerContainer.addServer(McpServer.builder()\\n                                     .id(getId())\\n                                     .name(key)\\n                                     .env(parameters.env())\\n                                     .desc(mcpServerDescMap.get(key))\\n                                     .toolList(toolsList)\\n                                     .build()\\n                                    );\\n    });\\n\\n}\\n```\\n\\nMCP Server \u5de5\u5177\u56de\u663e\u6548\u679c\u5982\u4e0b\uff1a\u60a8\u53ef\u4ee5\u5728 resource \u4e0b\u7684 mcp-config.yaml \u4e2d\u6dfb\u52a0\u66f4\u591a MCP Server\u3002\\n\\n![image-20250607190058038](/img/ai/playground/image-20250607190058038.png)\\n\\n#### 3.3.3 MCP \u5de5\u5177\u8c03\u7528\\n\\n\u5b8c\u6210\u4e0a\u9762\u4e00\u7cfb\u5217\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u4fbf\u662f\u7f16\u5199 MCP Service \u7c7b\uff1a\u4e3a\u4e86\u80fd\u591f\u83b7\u53d6 MCP Server Tools \u7684\u6267\u884c\u4fe1\u606f\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86 Spring AI Tools \u7684 internalToolExecutionEnabled API\u3002\u6765\u6536\u96c6\u5927\u6a21\u578b\u7684\u5de5\u5177\u5165\u53c2\u548c\u6267\u884c\u7ed3\u679c\u7b49\uff0c\u5728\u524d\u7aef\u505a\u8c03\u7528\u5c55\u793a\u3002\\n\\n\u4e3a\u4e86\u6536\u96c6 MCP Tools \u8c03\u7528\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u3002Playground \u9879\u76ee\u7f16\u5199\u4e86 ToolCallResp \u7c7b\u6765\u6536\u96c6\u4e00\u4e9b\u4fe1\u606f\uff1a\\n\\n```java\\npublic class ToolCallResp {\\n\\n    /**\\n     * Tool \u7684\u6267\u884c\u72b6\u6001\\n     */\\n    private ToolState status;\\n\\n    /**\\n     * Tool Name\\n     */\\n    private String toolName;\\n\\n    /**\\n     * Tool \u6267\u884c\u53c2\u6570\\n     */\\n    private String toolParameters;\\n\\n    /**\\n     * Tool \u6267\u884c\u7ed3\u679c\\n     */\\n    private String toolResult;\\n\\n    /**\\n     * \u5de5\u5177\u6267\u884c\u5f00\u59cb\u7684\u65f6\u95f4\u6233\\n     */\\n    private LocalDateTime toolStartTime;\\n\\n    /**\\n     * \u5de5\u5177\u6267\u884c\u5b8c\u6210\u7684\u65f6\u95f4\u6233\\n     */\\n    private LocalDateTime toolEndTime;\\n\\n    /**\\n     * \u5de5\u5177\u6267\u884c\u7684\u9519\u8bef\u4fe1\u606f\\n     */\\n    private String errorMessage;\\n\\n    /**\\n     * \u5de5\u5177\u6267\u884c\u8f93\u5165\\n     */\\n    private String toolInput;\\n\\n    /**\\n     * \u5de5\u5177\u6267\u884c\u8017\u65f6\\n     */\\n    private Long toolCostTime;\\n    /**\\n     * Tool \u8bb0\u5f55tool\u8fd4\u56de\u7684\u4e2d\u95f4\u7ed3\u679c\\n     */\\n    private String toolResponse;\\n}\\n```\\n\\nMCP Service \u5b9e\u73b0\uff1a\\n\\n```java\\n@Service\\npublic class SAAMcpService {\\n\\n\\tprivate final ChatClient chatClient;\\n\\n\\tprivate final ObjectMapper objectMapper;\\n\\n\\tprivate final ToolCallbackProvider tools;\\n\\n\\tprivate final ToolCallingManager toolCallingManager;\\n\\n\\tprivate final McpStdioClientProperties mcpStdioClientProperties;\\n\\n\\tprivate static final Logger logger = LoggerFactory.getLogger(SAAMcpService.class);\\n\\n\\tpublic SAAMcpService(\\n\\t\\t\\tObjectMapper objectMapper,\\n\\t\\t\\tToolCallbackProvider tools,\\n\\t\\t\\tSimpleLoggerAdvisor simpleLoggerAdvisor,\\n\\t\\t\\tToolCallingManager toolCallingManager,\\n\\t\\t\\tMcpStdioClientProperties mcpStdioClientProperties,\\n\\t\\t\\t@Qualifier(\\"openAiChatModel\\") ChatModel chatModel\\n\\t) throws IOException {\\n\\n\\t\\tthis.objectMapper = objectMapper;\\n\\t\\tthis.mcpStdioClientProperties = mcpStdioClientProperties;\\n\\n\\t\\t// Initialize chat client with non-blocking configuration\\n\\t\\tthis.chatClient = ChatClient.builder(chatModel)\\n\\t\\t\\t\\t.defaultAdvisors(\\n\\t\\t\\t\\t\\t\\tsimpleLoggerAdvisor\\n\\t\\t\\t\\t).defaultToolCallbacks(tools)\\n\\t\\t\\t\\t.build();\\n\\t\\tthis.tools = tools;\\n\\t\\tthis.toolCallingManager = toolCallingManager;\\n\\n\\t\\tMcpServerUtils.initMcpServerContainer(tools);\\n\\t}\\n\\n\\tpublic ToolCallResp chat(String prompt) {\\n\\n\\t\\t// manual run tools flag\\n\\t\\tChatOptions chatOptions = ToolCallingChatOptions.builder()\\n\\t\\t\\t\\t.toolCallbacks(tools.getToolCallbacks())\\n\\t\\t\\t\\t.internalToolExecutionEnabled(false)\\n\\t\\t\\t\\t.build();\\n\\n\\t\\tChatResponse response = chatClient.prompt(new Prompt(prompt, chatOptions))\\n\\t\\t\\t\\t.call().chatResponse();\\n\\n\\t\\tlogger.debug(\\"ChatResponse: {}\\", response);\\n\\t\\tassert response != null;\\n\\t\\tList<AssistantMessage.ToolCall> toolCalls = response.getResult().getOutput().getToolCalls();\\n\\t\\tlogger.debug(\\"ToolCalls: {}\\", toolCalls);\\n\\t\\tString responseByLLm = response.getResult().getOutput().getText();\\n\\t\\tlogger.debug(\\"Response by LLM: {}\\", responseByLLm);\\n\\n\\t\\t// execute tools with no chat memory messages.\\n\\t\\tvar tcr = ToolCallResp.TCR();\\n\\t\\tif (!toolCalls.isEmpty()) {\\n\\n\\t\\t\\ttcr = ToolCallResp.startExecute(\\n\\t\\t\\t\\t\\tresponseByLLm,\\n\\t\\t\\t\\t\\ttoolCalls.get(0).name(),\\n\\t\\t\\t\\t\\ttoolCalls.get(0).arguments()\\n\\t\\t\\t);\\n\\t\\t\\ttcr.setToolParameters(toolCalls.get(0).arguments());\\n\\t\\t\\tlogger.debug(\\"Start ToolCallResp: {}\\", tcr);\\n\\t\\t\\tToolExecutionResult toolExecutionResult = null;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\ttoolExecutionResult = toolCallingManager.executeToolCalls(new Prompt(prompt, chatOptions), response);\\n\\n\\t\\t\\t\\ttcr.setToolEndTime(LocalDateTime.now());\\n\\t\\t\\t}\\n\\t\\t\\tcatch (Exception e) {\\n\\n\\t\\t\\t\\ttcr.setStatus(ToolCallResp.ToolState.FAILURE);\\n\\t\\t\\t\\ttcr.setErrorMessage(e.getMessage());\\n\\t\\t\\t\\ttcr.setToolEndTime(LocalDateTime.now());\\n\\t\\t\\t\\ttcr.setToolCostTime((long) (tcr.getToolEndTime().getNano() - tcr.getToolStartTime().getNano()));\\n\\t\\t\\t\\tlogger.error(\\"Error ToolCallResp: {}, msg: {}\\", tcr, e.getMessage());\\n\\t\\t\\t\\t// throw new RuntimeException(\\"Tool execution failed, please check the logs for details.\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\tString llmCallResponse = \\"\\";\\n\\t\\t\\tif (Objects.nonNull(toolExecutionResult)) {\\n\\t\\t\\t\\tChatResponse finalResponse = chatClient.prompt().messages(toolExecutionResult.conversationHistory())\\n\\t\\t\\t\\t\\t\\t.call().chatResponse();\\n\\t\\t\\t\\tif (finalResponse != null) {\\n\\t\\t\\t\\t\\tllmCallResponse = finalResponse.getResult().getOutput().getText();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tStringBuilder sb = new StringBuilder();\\n\\t\\t\\t\\ttoolExecutionResult.conversationHistory().stream()\\n\\t\\t\\t\\t\\t\\t.filter(message -> message instanceof ToolResponseMessage)\\n\\t\\t\\t\\t\\t\\t.forEach(message -> {\\n\\t\\t\\t\\t\\t\\t\\tToolResponseMessage toolResponseMessage = (ToolResponseMessage) message;\\n\\t\\t\\t\\t\\t\\t\\ttoolResponseMessage.getResponses().forEach(tooResponse -> {\\n\\t\\t\\t\\t\\t\\t\\t\\tsb.append(tooResponse.responseData());\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\ttcr.setToolResponse(sb.toString());\\n\\t\\t\\t}\\n\\n\\t\\t\\ttcr.setStatus(ToolCallResp.ToolState.SUCCESS);\\n\\t\\t\\ttcr.setToolResult(llmCallResponse);\\n\\t\\t\\ttcr.setToolCostTime((long) (tcr.getToolEndTime().getNano() - tcr.getToolStartTime().getNano()));\\n\\t\\t\\tlogger.debug(\\"End ToolCallResp: {}\\", tcr);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tlogger.debug(\\"ToolCalls is empty, no tool execution needed.\\");\\n\\t\\t\\ttcr.setToolResult(responseByLLm);\\n\\t\\t}\\n\\n\\t\\treturn tcr;\\n\\t}\\n\\n\\tpublic ToolCallResp run(String id, Map<String, String> envs, String prompt) throws IOException {\\n\\n\\t\\tOptional<McpServer> runMcpServer = McpServerContainer.getServerById(id);\\n\\t\\tif (runMcpServer.isEmpty()) {\\n\\t\\t\\tlogger.error(\\"McpServer not found, id: {}\\", id);\\n\\t\\t\\treturn ToolCallResp.TCR();\\n\\t\\t}\\n\\n\\t\\tString runMcpServerName = runMcpServer.get().getName();\\n\\t\\tvar mcpServerConfig = McpServerUtils.getMcpServerConfig();\\n\\t\\tMcpStdioClientProperties.Parameters parameters = new McpStdioClientProperties.Parameters(\\n\\t\\t\\t\\tmcpServerConfig.getMcpServers().get(runMcpServerName).command(),\\n\\t\\t\\t\\tmcpServerConfig.getMcpServers().get(runMcpServerName).args(),\\n\\t\\t\\t\\tenvs\\n\\t\\t);\\n\\n\\t\\tif (parameters.command().startsWith(\\"java\\")) {\\n\\t\\t\\tString oldMcpLibsPath = McpServerUtils.getLibsPath(parameters.args());\\n\\t\\t\\tString rewriteMcpLibsAbsPath = getMcpLibsAbsPath(McpServerUtils.getLibsPath(parameters.args()));\\n\\n\\t\\t\\tparameters.args().remove(oldMcpLibsPath);\\n\\t\\t\\tparameters.args().add(rewriteMcpLibsAbsPath);\\n\\t\\t}\\n\\n\\t\\tString mcpServerConfigJSON = objectMapper.writeValueAsString(mcpServerConfig);\\n\\t\\tmcpStdioClientProperties.setServersConfiguration(new ByteArrayResource(mcpServerConfigJSON.getBytes()));\\n\\n\\t\\treturn chat(prompt);\\n\\t}\\n\\n}\\n```\\n\\nFunction Call \u53c2\u8003\uff1ahttps://docs.spring.io/spring-ai/reference/api/tools.html\\n\\nMCP Server \u6587\u7ae0\u53c2\u8003\uff1ahttps://java2ai.com/blog/spring-ai-alibaba-mcp/?spm=5176.29160081.0.0.2856aa5cenvkmu\\n\\n### 3.4 Function Call \u96c6\u6210\\n\\nplayground \u4e2d\u5b9e\u73b0\u4e86 Function Call \u7684\u529f\u80fd\uff0c\u548c MCP \u4e00\u6837\uff0c\u652f\u6301\u8c03\u7528\u72b6\u6001\u663e\u793a\u3002\u5de5\u5177\u6d4f\u89c8\u5668\u56de\u663e\u540c\u7406\u3002\\n\\n#### 3.4.1 Function Tools \u521d\u59cb\u5316\\n\\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Spring AI Alibaba \u7684\u63d0\u4f9b\u7684 Tool Calling Starter \u6765\u5f15\u5165\u5de5\u5177\uff0c\u4e5f\u53ef\u4ee5\u50cf Playground \u4e00\u6837\uff0c\u901a\u8fc7 FunctionToolCallback \u6765\u81ea\u5b9a\u4e49\u5de5\u5177\u3002\\n\\nPlayground Tools: https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground/src/main/java/com/alibaba/cloud/ai/application/tools\\n\\nTools \u521d\u59cb\u5316\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\npublic List<ToolCallback> getTools() {\\n\\n    return List.of(buildBaiduTranslateTools(), buildBaiduMapTools());\\n}\\n\\nprivate ToolCallback buildBaiduTranslateTools() {\\n\\n    return FunctionToolCallback\\n          .builder(\\n                \\"BaiduTranslateService\\",\\n                new BaiduTranslateTools(ak, sk, restClientbuilder, responseErrorHandler)\\n          ).description(\\"Baidu translation function for general text translation.\\")\\n          .inputSchema(\\n                \\"\\"\\"\\n                      {\\n                         \\"type\\": \\"object\\",\\n                         \\"properties\\": {\\n                            \\"Request\\": {\\n                               \\"type\\": \\"object\\",\\n                               \\"properties\\": {\\n                                  \\"q\\": {\\n                                     \\"type\\": \\"string\\",\\n                                     \\"description\\": \\"Content that needs to be translated.\\"\\n                                  },\\n                                  \\"from\\": {\\n                                     \\"type\\": \\"string\\",\\n                                     \\"description\\": \\"Source language that needs to be translated.\\"\\n                                  },\\n                                  \\"to\\": {\\n                                     \\"type\\": \\"string\\",\\n                                     \\"description\\": \\"Target language to translate into.\\"\\n                                  }\\n                               },\\n                               \\"required\\": [\\"q\\", \\"from\\", \\"to\\"],\\n                               \\"description\\": \\"Request object to translate text to a target language.\\"\\n                            },\\n                            \\"Response\\": {\\n                               \\"type\\": \\"object\\",\\n                               \\"properties\\": {\\n                                  \\"translatedText\\": {\\n                                     \\"type\\": \\"string\\",\\n                                     \\"description\\": \\"The translated text.\\"\\n                                  }\\n                               },\\n                               \\"required\\": [\\"translatedText\\"],\\n                               \\"description\\": \\"Response object for the translation function, containing the translated text.\\"\\n                            }\\n                         },\\n                         \\"required\\": [\\"Request\\", \\"Response\\"]\\n                      }\\n                      \\"\\"\\"\\n          ).inputType(BaiduTranslateTools.BaiduTranslateToolRequest.class)\\n          .toolMetadata(ToolMetadata.builder().returnDirect(false).build())\\n          .build();\\n}\\n```\\n\\n#### 3.4.2 Function Tools \u8c03\u7528\\n\\n\u5b8c\u6210\u4e86\u5de5\u5177\u5f15\u5165\u6216\u5b9a\u4e49\u4e4b\u540e\u3002\u63a5\u4e0b\u6765\uff0c\u4fbf\u53ef\u4ee5\u5728 service \u4e2d\u4f7f\u7528\u8fd9\u4e9b Tools \u6765\u589e\u5f3a\u5927\u6a21\u578b\u7684\u80fd\u529b\u3002\u5de5\u5177\u8c03\u7528\u4ee3\u7801\u548c MCP Server Tools \u7c7b\u4f3c\u3002\\n\\n```java\\npublic class SAAToolsService {\\n\\n\\tprivate static final Logger logger = LoggerFactory.getLogger(SAAToolsService.class);\\n\\n\\tprivate final ChatClient chatClient;\\n\\n\\tprivate final ToolCallingManager toolCallingManager;\\n\\n\\tprivate final ToolsInit toolsInit;\\n\\n\\tpublic SAAToolsService(\\n\\t\\t\\tToolsInit toolsInit,\\n\\t\\t\\tToolCallingManager toolCallingManager,\\n\\t\\t\\tSimpleLoggerAdvisor simpleLoggerAdvisor,\\n\\t\\t\\tMessageChatMemoryAdvisor messageChatMemoryAdvisor,\\n\\t\\t\\t@Qualifier(\\"openAiChatModel\\") ChatModel chatModel\\n\\t) {\\n\\n\\t\\tthis.toolsInit = toolsInit;\\n\\t\\tthis.toolCallingManager = toolCallingManager;\\n\\n\\t\\tthis.chatClient = ChatClient.builder(chatModel)\\n\\t\\t\\t\\t.defaultAdvisors(\\n\\t\\t\\t\\t\\t\\tsimpleLoggerAdvisor\\n//\\t\\t\\t\\t\\t\\tmessageChatMemoryAdvisor\\n\\t\\t\\t\\t).build();\\n\\t}\\n\\n\\tpublic ToolCallResp chat(String prompt) {\\n\\n\\t\\t// manual run tools flag\\n\\t\\tChatOptions chatOptions = ToolCallingChatOptions.builder()\\n\\t\\t\\t\\t.toolCallbacks(toolsInit.getTools())\\n\\t\\t\\t\\t.internalToolExecutionEnabled(false)\\n\\t\\t\\t\\t.build();\\n\\t\\tPrompt userPrompt = new Prompt(prompt, chatOptions);\\n\\n\\t\\tChatResponse response = chatClient.prompt(userPrompt)\\n\\t\\t\\t\\t.call().chatResponse();\\n\\n\\t\\tlogger.debug(\\"ChatResponse: {}\\", response);\\n\\t\\tassert response != null;\\n\\t\\tList<AssistantMessage.ToolCall> toolCalls = response.getResult().getOutput().getToolCalls();\\n\\t\\tlogger.debug(\\"ToolCalls: {}\\", toolCalls);\\n\\t\\tString responseByLLm = response.getResult().getOutput().getText();\\n\\t\\tlogger.debug(\\"Response by LLM: {}\\", responseByLLm);\\n\\n\\t\\t// execute tools with no chat memory messages.\\n\\t\\tvar tcr = ToolCallResp.TCR();\\n\\t\\tif (!toolCalls.isEmpty()) {\\n\\n\\t\\t\\ttcr = ToolCallResp.startExecute(\\n\\t\\t\\t\\t\\tresponseByLLm,\\n\\t\\t\\t\\t\\ttoolCalls.get(0).name(),\\n\\t\\t\\t\\t\\ttoolCalls.get(0).arguments()\\n\\t\\t\\t);\\n\\t\\t\\tlogger.debug(\\"Start ToolCallResp: {}\\", tcr);\\n\\t\\t\\tToolExecutionResult toolExecutionResult = null;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\ttoolExecutionResult = toolCallingManager.executeToolCalls(new Prompt(prompt, chatOptions), response);\\n\\n\\t\\t\\t\\ttcr.setToolEndTime(LocalDateTime.now());\\n\\t\\t\\t}\\n\\t\\t\\tcatch (Exception e) {\\n\\n\\t\\t\\t\\ttcr.setStatus(ToolCallResp.ToolState.FAILURE);\\n\\t\\t\\t\\ttcr.setErrorMessage(e.getMessage());\\n\\t\\t\\t\\ttcr.setToolEndTime(LocalDateTime.now());\\n\\t\\t\\t\\ttcr.setToolCostTime((long) (tcr.getToolEndTime().getNano() - tcr.getToolStartTime().getNano()));\\n\\t\\t\\t\\tlogger.error(\\"Error ToolCallResp: {}, msg: {}\\", tcr, e.getMessage());\\n\\t\\t\\t\\t// throw new RuntimeException(\\"Tool execution failed, please check the logs for details.\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\tString llmCallResponse = \\"\\";\\n\\t\\t\\tif (Objects.nonNull(toolExecutionResult)) {\\n//\\t\\t\\t\\tToolResponseMessage toolResponseMessage = (ToolResponseMessage) toolExecutionResult.conversationHistory()\\n//\\t\\t\\t\\t\\t\\t.get(toolExecutionResult.conversationHistory().size() - 1);\\n//\\t\\t\\t\\tllmCallResponse = toolResponseMessage.getResponses().get(0).responseData();\\n\\t\\t\\t\\tChatResponse finalResponse = chatClient.prompt().messages(toolExecutionResult.conversationHistory()).call().chatResponse();\\n\\t\\t\\t\\tllmCallResponse = finalResponse.getResult().getOutput().getText();\\n\\t\\t\\t}\\n\\n\\t\\t\\ttcr.setStatus(ToolCallResp.ToolState.SUCCESS);\\n\\t\\t\\ttcr.setToolResult(llmCallResponse);\\n\\t\\t\\ttcr.setToolCostTime((long) (tcr.getToolEndTime().getNano() - tcr.getToolStartTime().getNano()));\\n\\t\\t\\tlogger.debug(\\"End ToolCallResp: {}\\", tcr);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tlogger.debug(\\"ToolCalls is empty, no tool execution needed.\\");\\n\\t\\t\\ttcr.setToolResult(responseByLLm);\\n\\t\\t}\\n\\n\\t\\treturn tcr;\\n\\t}\\n\\n}\\n```\\n\\nFunction Tools \u96c6\u6210\u6587\u7ae0\u53c2\u8003\uff1ahttps://java2ai.com/blog/spring-ai-toolcalling/?spm=5176.29160081.0.0.2856aa5cenvkmu\\n\\n## 4. \u603b\u7ed3\\n\\nSpring AI Alibaba \u5b98\u65b9\u793e\u533a\u5f00\u53d1\u4e86\u4e00\u4e2a**\u5305\u542b\u5b8c\u6574 `\u524d\u7aefUI+\u540e\u7aef\u5b9e\u73b0` \u7684\u667a\u80fd\u4f53 Playground \u793a\u4f8b**\u3002\u672a\u6765\u793e\u533a\u4f1a\u6301\u7eed\u66f4\u65b0\u7ef4\u62a4\u3002\u4ee5\u6b64\u6765\u6f14\u793a Spring AI \u548c Spring AI Alibaba \u7684\u6700\u65b0\u529f\u80fd\u3002"},{"id":"spring-ai-alibaba-nacos-prompt","metadata":{"permalink":"/blog/spring-ai-alibaba-nacos-prompt","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-nacos-prompt.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-nacos-prompt.md","title":"Spring AI Alibaba \u52a8\u6001 Prompt \u6700\u4f73\u5b9e\u8df5","description":"Spring AI Alibaba \u4f7f\u7528 Nacos \u7684\u914d\u7f6e\u4e2d\u5fc3\u80fd\u529b\u6765\u52a8\u6001\u7ba1\u7406 AI \u5e94\u7528\u7684 Prompt\u3002\u4ee5\u6b64\u6765\u5b9e\u73b0\u52a8\u6001\u66f4\u65b0 Prompt \u7684\u529f\u80fd\u3002","date":"2025-06-05T23:00:00.000Z","tags":[{"inline":true,"label":"Spring AI Alibaba","permalink":"/blog/tags/spring-ai-alibaba"},{"inline":true,"label":"Nacos","permalink":"/blog/tags/nacos"},{"inline":true,"label":"Dunamic Prompt","permalink":"/blog/tags/dunamic-prompt"}],"readingTime":5.783333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-ai-alibaba-nacos-prompt","title":"Spring AI Alibaba \u52a8\u6001 Prompt \u6700\u4f73\u5b9e\u8df5","date":"2025-06-05T23:00:00.000Z","authors":"yuluo","tags":["Spring AI Alibaba","Nacos","Dunamic Prompt"],"keywords":["Spring AI Alibaba","Nacos","Dynamic Prompt"]},"unlisted":false,"prevItem":{"title":"Spring AI Alibaba Playground","permalink":"/blog/spring-ai-alibaba-playground"},"nextItem":{"title":"Opentelemetry \u9879\u76ee\u89e3\u8bfb","permalink":"/blog/opentelemetry-project"}},"content":"\x3c!-- truncate --\x3e\\n\\nSpring AI Alibaba \u4f7f\u7528 Nacos \u7684\u914d\u7f6e\u4e2d\u5fc3\u80fd\u529b\u6765\u52a8\u6001\u7ba1\u7406 AI \u5e94\u7528\u7684 Prompt\u3002\u4ee5\u6b64\u6765\u5b9e\u73b0\u52a8\u6001\u66f4\u65b0 Prompt \u7684\u529f\u80fd\u3002\\n\\n## \u73af\u5883\u51c6\u5907\\n\\nNacos: \u5177\u5907\u914d\u7f6e\u4e2d\u5fc3\u80fd\u529b\u7684 Nacos\uff0c\u672c\u4f8b\u4e2d\u4f7f\u7528 Nacos 2.3.0\u3002\u6700\u65b0\u7248\u672c\u7684 Nacos 3.X \u4ea6\u53ef\uff0c\\n\\n## AI \u5de5\u7a0b\u521b\u5efa\\n\\nExample \u5de5\u7a0b\u5730\u5740\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-nacos-prompt-example\\n\\n### Pom.xml\\n\\n> Tips: \u9879\u76ee\u4e2d\u5df2\u7ecf\u5f15\u5165\u4e86 Spring AI Alibaba Bom \u548c Spring Boot Bom\u3002\u56e0\u6b64\u8fd9\u91cc\u7701\u7565\u4e86\u7248\u672c\u53f7\u3002\u6709\u5173 bom \u5b9a\u4e49\u53c2\u8003\u5982\u4e0a\u7684 Github \u4ed3\u5e93\u5730\u5740\u3002\\n\\n```xml\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n</dependency>\\n\\n<dependency>\\n    <groupId>com.alibaba.cloud.ai</groupId>\\n    <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\\n</dependency>\\n\\n<dependency>\\n    <groupId>com.alibaba.cloud.ai</groupId>\\n    <artifactId>spring-ai-alibaba-starter-nacos-prompt</artifactId>\\n</dependency>\\n```\\n\\n### Application.yml\\n\\n\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165 Nacos \u76d1\u542c\u7684 DataID \u4ee5\u53ca Nacos Server \u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u7b49\u4fe1\u606f\u3002\\n\\n```yml\\nserver:\\n  port: 10010\\n\\nspring:\\n  application:\\n    name: spring-ai-alibaba-nacos-prompt-example\\n\\n  # \u6307\u5b9a\u76d1\u542c\u7684 prompt \u914d\u7f6e\\n  config:\\n    import:\\n      - \\"optional:nacos:prompt-config.json\\"\\n  nacos:\\n    username: nacos\\n    password: nacos\\n\\n  ai:\\n    # \u5f00\u542f nacos \u7684 prompt tmpl \u76d1\u542c\u529f\u80fd\\n    nacos:\\n      prompt:\\n        template:\\n          enabled: true\\n\\n```\\n\\n### Controller\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/nacos\\")\\npublic class PromptController {\\n\\n    private static final Logger logger = org.slf4j.LoggerFactory.getLogger(PromptController.class);\\n\\n    private final ChatClient client;\\n\\n    private final ConfigurablePromptTemplateFactory promptTemplateFactory;\\n\\n    public PromptController(\\n            ChatModel chatModel,\\n            ConfigurablePromptTemplateFactory promptTemplateFactory\\n    ) {\\n\\n        this.client = ChatClient.builder(chatModel).build();\\n        this.promptTemplateFactory = promptTemplateFactory;\\n    }\\n\\n    @GetMapping(\\"/books\\")\\n    public Flux<String> generateJoke(\\n            @RequestParam(value = \\"author\\", required = false, defaultValue = \\"\u9c81\u8fc5\\") String authorName\\n    ) {\\n\\n        // \u4f7f\u7528 nacos \u7684 prompt tmpl \u521b\u5efa prompt\\n        ConfigurablePromptTemplate template = promptTemplateFactory.create(\\n                \\"author\\",\\n                \\"please list the three most famous books by this {author}.\\"\\n        );\\n        Prompt prompt = template.create(Map.of(\\"author\\", authorName));\\n        logger.info(\\"\u6700\u7ec8\u6784\u5efa\u7684 prompt \u4e3a\uff1a{}\\", prompt.getContents());\\n\\n        return client.prompt(prompt)\\n                .stream()\\n                .content();\\n    }\\n\\n}\\n```\\n\\n## Nacos \u914d\u7f6e\u6dfb\u52a0\\n\\n1. \u542f\u52a8 Nacos \u670d\u52a1\uff1b\\n2. \u5199\u5165\u914d\u7f6e\uff0cdataId \u4e3a\uff1aspring.ai.alibaba.configurable.prompt\\n3. \u5728\u914d\u7f6e\u4e2d\u5199\u5165\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n    ```json\\n    [\\n      {\\n        \\"name\\": \\"author\\",\\n        \\"template\\": \\"\u5217\u51fa {author} \u6709\u540d\u7684\u8457\u4f5c\\",\\n        \\"model\\": {\\n          \\"key\\": \\"\u4f59\u534e\\"\\n        }\\n      }\\n    ]\\n    ```\\n\\n## \u529f\u80fd\u6f14\u793a\\n\\n\u5b8c\u6210\u4e0a\u8ff0\u914d\u7f6e\u4e4b\u540e\uff0c\u542f\u52a8\u9879\u76ee\uff1a\\n\\n1. \u5728\u542f\u52a8\u65e5\u5fd7\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff0c\u8868\u660e\u5df2\u7ecf\u5f00\u59cb\u76d1\u542c\u6b64 DataID \u7684\u914d\u7f6e\uff1a\\n\\n   ```shell\\n   OnPromptTemplateConfigChange,templateName:author,template:\u5217\u51fa {author} \u6709\u540d\u7684\u8457\u4f5c\uff0c\u53ea\u9700\u8981\u4e66\u540d\u6e05\u5355,model:{key=\u4f59\u534e}\\n   ```\\n\\n2. \u53d1\u9001\u8bf7\u6c42\u67e5\u770b\u8f93\u51fa\uff1a\\n\\n   > Tips: \u8fd9\u91cc\u8f93\u51fa\u4e86\u9c81\u8fc5\u7684\u4f5c\u54c1\u96c6\u662f\u56e0\u4e3a\u5728 controller \u4e2d\u8bbe\u7f6e\u4e86 defaultValue \u4e3a\u9c81\u8fc5.\\n\\n   ```java\\n   GET http://127.0.0.1:10010/nacos/books\\n   \\n   1. \u300a\u5450\u558a\u300b  \\n   2. \u300a\u5f77\u5fa8\u300b  \\n   3. \u300a\u671d\u82b1\u5915\u62fe\u300b  \\n   4. \u300a\u963fQ\u6b63\u4f20\u300b  \\n   5. \u300a\u91ce\u8349\u300b  \\n   6. \u300a\u575f\u300b  \\n   7. \u300a\u70ed\u98ce\u300b  \\n   8. \u300a\u534e\u76d6\u96c6\u300b  \\n   9. \u300a\u534e\u76d6\u96c6\u7eed\u7f16\u300b  \\n   10. \u300a\u6545\u4e8b\u65b0\u7f16\u300b  \\n   11. \u300a\u4e09\u95f2\u96c6\u300b  \\n   12. \u300a\u4e8c\u5fc3\u96c6\u300b  \\n   13. \u300a\u5357\u8154\u5317\u8c03\u96c6\u300b  \\n   14. \u300a\u4f2a\u81ea\u7531\u4e66\u300b  \\n   15. \u300a\u51c6\u98ce\u6708\u8c08\u300b  \\n   16. \u300a\u82b1\u8fb9\u6587\u5b66\u300b  \\n   17. \u300a\u4e14\u4ecb\u4ead\u6742\u6587\u300b  \\n   18. \u300a\u4e14\u4ecb\u4ead\u6742\u6587\u4e8c\u96c6\u300b  \\n   19. \u300a\u4e14\u4ecb\u4ead\u6742\u6587\u672b\u7f16\u300b\\n   ```\\n\\n   \u67e5\u770b\u63a7\u5236\u53f0\u8f93\u51fa\uff1a\\n\\n   ```shell\\n   \u5217\u51fa \u9c81\u8fc5 \u6709\u540d\u7684\u8457\u4f5c\uff0c\u53ea\u9700\u8981\u4e66\u540d\u6e05\u5355\\n   ```\\n\\n3. \u52a8\u6001\u66f4\u65b0 Nacos \u7684 Prompt \u914d\u7f6e\uff0c\u518d\u6b21\u67e5\u770b\u8bf7\u6c42\u67e5\u770b\u6548\u679c\\n\\n   > Tips: \u56e0\u4e3a controller \u4e2d\u8bbe\u7f6e\u4e86 defaultValue \u4e3a\u9c81\u8fc5\uff0c\u56e0\u6b64 Prompt \u53d8\u66f4\u4ecd\u7136\u548c\u6587\u5b66\u4f5c\u5bb6\u76f8\u5173\u3002\\n\\n   \u53d8\u66f4 Prompt \u4e3a\uff1a\\n\\n   ```json\\n   [\\n     {\\n       \\"name\\":\\"author\\",\\n       \\"template\\":\\"\u4ecb\u7ecd {author}\uff0c\u5217\u51fa\u5176\u751f\u5e73\u7ecf\u5386\u548c\u6587\u5b66\u6210\u5c31\\",\\n       \\"model\\":{\\n         \\"key\\":\\"\u4f59\u534e\\"\\n       }\\n     }\\n   ]\\n   ```\\n\\n   **\u70b9\u51fb\u53d1\u5e03**\u4e4b\u540e\uff0c\u770b\u5230\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\uff0c\u8bc1\u660e\u53d8\u66f4\u6210\u529f\uff1a\\n\\n   ```text\\n   OnPromptTemplateConfigChange,templateName:author,template:\u4ecb\u7ecd {author}\uff0c\u5217\u51fa\u5176\u751f\u5e73\u7ecf\u5386\u548c\u6587\u5b66\u6210\u5c31,model:{key=\u4f59\u534e\\n   ```\\n\\n4. \u518d\u6b21\u53d1\u9001\u8bf7\u6c42\uff1a\\n\\n   ```shell\\n   GET http://127.0.0.1:10010/nacos/books\\n   \\n   \u9c81\u8fc5\uff081881\u5e749\u670825\u65e5\uff0d1936\u5e7410\u670819\u65e5\uff09\uff0c\u539f\u540d\u5468\u6811\u4eba\uff0c\u5b57\u8c6b\u624d\uff0c\u6d59\u6c5f\u7ecd\u5174\u4eba\uff0c\u662f\u4e2d\u56fd\u73b0\u4ee3\u6587\u5b66\u53f2\u4e0a\u6700\u91cd\u8981\u7684\u4f5c\u5bb6\u4e4b\u4e00\uff0c\u540c\u65f6\u4e5f\u662f\u601d\u60f3\u5bb6\u3001\u9769\u547d\u5bb6\u548c\u6559\u80b2\u5bb6\u3002\u4ed6\u4ee5\u5176\u7280\u5229\u7684\u7b14\u950b\u548c\u6df1\u523b\u7684\u793e\u4f1a\u6279\u5224\u7cbe\u795e\uff0c\u6210\u4e3a\u4e2d\u56fd\u65b0\u6587\u5316\u8fd0\u52a8\u7684\u65d7\u624b\u548c\u5960\u57fa\u4eba\u4e4b\u4e00\u3002\\n   \\n   ---\\n   \\n   ### **\u751f\u5e73\u7ecf\u5386**\\n   \\n   1. **\u65e9\u5e74\u751f\u6d3b\u4e0e\u6c42\u5b66**  \\n      - 1881\u5e74\u51fa\u751f\u4e8e\u6d59\u6c5f\u7ecd\u5174\u7684\u4e00\u4e2a\u4e66\u9999\u95e8\u7b2c\u5bb6\u5ead\uff0c\u7236\u4eb2\u5468\u4f2f\u5b9c\u662f\u79c0\u624d\u3002\\n      - \u5c11\u5e74\u65f6\u56e0\u5bb6\u5ead\u53d8\u6545\u800c\u7ecf\u5386\u4e86\u4ece\u5bcc\u5230\u8d2b\u7684\u751f\u6d3b\u53d8\u5316\uff0c\u8fd9\u5bf9\u4ed6\u540e\u6765\u7684\u601d\u60f3\u5f62\u6210\u4ea7\u751f\u4e86\u6df1\u8fdc\u5f71\u54cd\u3002\\n      - 1898\u5e74\uff0c\u8003\u5165\u5357\u4eac\u6c34\u5e08\u5b66\u5802\uff0c\u540e\u8f6c\u5165\u6c5f\u5357\u9646\u5e08\u5b66\u5802\u9644\u8bbe\u77ff\u52a1\u94c1\u8def\u5b66\u5802\u5b66\u4e60\u3002\\n   \\n   2. **\u7559\u5b66\u65e5\u672c**  \\n      - 1902\u5e74\u8d74\u65e5\u672c\u7559\u5b66\uff0c\u5148\u5728\u4e1c\u4eac\u5f18\u6587\u5b66\u9662\u5b66\u4e60\u65e5\u8bed\uff0c\u540e\u8fdb\u5165\u4ed9\u53f0\u533b\u5b66\u4e13\u95e8\u5b66\u6821\uff08\u4eca\u4e1c\u5317\u5927\u5b66\u533b\u5b66\u90e8\uff09\u5b66\u4e60\u533b\u5b66\u3002\\n      - \u5728\u65e5\u672c\u671f\u95f4\uff0c\u9010\u6e10\u8ba4\u8bc6\u5230\u201c\u533b\u5176\u5fc3\u201d\u6bd4\u201c\u533b\u5176\u8eab\u201d\u66f4\u91cd\u8981\uff0c\u51b3\u5b9a\u5f03\u533b\u4ece\u6587\uff0c\u4ee5\u6587\u5b66\u5524\u9192\u56fd\u6c11\u7684\u7cbe\u795e\u3002\\n   \\n   3. **\u56de\u56fd\u4e0e\u6559\u4e66\u751f\u6daf**  \\n      - 1909\u5e74\u56de\u56fd\u540e\uff0c\u5148\u540e\u5728\u5317\u4eac\u5927\u5b66\u3001\u5317\u4eac\u5e08\u8303\u5927\u5b66\u7b49\u9ad8\u6821\u4efb\u6559\u3002\\n      - \u4ece\u4e8b\u6587\u5b66\u521b\u4f5c\u7684\u540c\u65f6\uff0c\u79ef\u6781\u53c2\u4e0e\u65b0\u6587\u5316\u8fd0\u52a8\uff0c\u63a8\u52a8\u767d\u8bdd\u6587\u548c\u65b0\u6587\u5b66\u7684\u53d1\u5c55\u3002\\n   \\n   4. **\u521b\u4f5c\u9ad8\u5cf0**  \\n      - 1918\u5e74\u53d1\u8868\u7b2c\u4e00\u7bc7\u767d\u8bdd\u5c0f\u8bf4\u300a\u72c2\u4eba\u65e5\u8bb0\u300b\uff0c\u6807\u5fd7\u7740\u4e2d\u56fd\u73b0\u4ee3\u5c0f\u8bf4\u7684\u5f00\u7aef\u3002\\n      - \u6b64\u540e\uff0c\u9c81\u8fc5\u7684\u521b\u4f5c\u8fdb\u5165\u9ad8\u5cf0\u671f\uff0c\u53d1\u8868\u4e86\u5927\u91cf\u6742\u6587\u3001\u5c0f\u8bf4\u3001\u6563\u6587\u7b49\u4f5c\u54c1\u3002\\n   \\n   5. **\u665a\u5e74\u751f\u6d3b**  \\n      - 1927\u5e74\u540e\u5b9a\u5c45\u4e0a\u6d77\uff0c\u7ee7\u7eed\u5199\u4f5c\u5e76\u53c2\u4e0e\u5de6\u7ffc\u6587\u5316\u6d3b\u52a8\u3002\\n      - 1936\u5e74\u56e0\u80ba\u75c5\u5728\u4e0a\u6d77\u901d\u4e16\uff0c\u4eab\u5e7455\u5c81\u3002\\n   \\n   ---\\n   \\n   ### **\u6587\u5b66\u6210\u5c31**\\n   \\n   \u9c81\u8fc5\u7684\u4f5c\u54c1\u6db5\u76d6\u4e86\u5c0f\u8bf4\u3001\u6563\u6587\u3001\u6742\u6587\u3001\u8bd7\u6b4c\u7b49\u591a\u4e2a\u9886\u57df\uff0c\u5177\u6709\u6781\u9ad8\u7684\u827a\u672f\u4ef7\u503c\u548c\u793e\u4f1a\u610f\u4e49\u3002\\n   \\n   #### 1. **\u5c0f\u8bf4**\\n      - \u9c81\u8fc5\u7684\u5c0f\u8bf4\u4ee5\u6df1\u523b\u63ed\u793a\u793e\u4f1a\u95ee\u9898\u548c\u4eba\u6027\u5f31\u70b9\u8457\u79f0\u3002\\n      - \u4ee3\u8868\u4f5c\uff1a\\n        - \u300a\u5450\u558a\u300b\uff1a\u5305\u62ec\u300a\u72c2\u4eba\u65e5\u8bb0\u300b\u300a\u963fQ\u6b63\u4f20\u300b\u300a\u6545\u4e61\u300b\u7b49\uff0c\u63ed\u9732\u5c01\u5efa\u5236\u5ea6\u5bf9\u4eba\u7684\u538b\u8feb\u3002\\n        - \u300a\u5f77\u5fa8\u300b\uff1a\u5305\u62ec\u300a\u795d\u798f\u300b\u300a\u4f24\u901d\u300b\u7b49\uff0c\u63cf\u5199\u77e5\u8bc6\u5206\u5b50\u7684\u8ff7\u832b\u4e0e\u6323\u624e\u3002\\n      - \u88ab\u8a89\u4e3a\u201c\u4e2d\u56fd\u73b0\u4ee3\u5c0f\u8bf4\u4e4b\u7236\u201d\u3002\\n   \\n   #### 2. **\u6563\u6587**\\n      - \u6563\u6587\u96c6\u300a\u671d\u82b1\u5915\u62fe\u300b\u662f\u9c81\u8fc5\u56de\u5fc6\u7ae5\u5e74\u548c\u9752\u5c11\u5e74\u751f\u6d3b\u7684\u4f5c\u54c1\uff0c\u8bed\u8a00\u4f18\u7f8e\uff0c\u60c5\u611f\u771f\u631a\u3002\\n      - \u4ee3\u8868\u4f5c\uff1a\u300a\u4ece\u767e\u8349\u56ed\u5230\u4e09\u5473\u4e66\u5c4b\u300b\u300a\u85e4\u91ce\u5148\u751f\u300b\u3002\\n   \\n   #### 3. **\u6742\u6587**\\n      - \u9c81\u8fc5\u7684\u6742\u6587\u4ee5\u7280\u5229\u7684\u7b14\u89e6\u6279\u5224\u793e\u4f1a\u73b0\u5b9e\uff0c\u88ab\u8a89\u4e3a\u201c\u5315\u9996\u4e0e\u6295\u67aa\u201d\u3002\\n      - \u6742\u6587\u96c6\uff1a\u300a\u70ed\u98ce\u300b\u300a\u534e\u76d6\u96c6\u300b\u300a\u575f\u300b\u300a\u4e14\u4ecb\u4ead\u6742\u6587\u300b\u7b49\u3002\\n      - \u4e3b\u8981\u9488\u5bf9\u5c01\u5efa\u793c\u6559\u3001\u519b\u9600\u7edf\u6cbb\u3001\u6587\u5316\u4fdd\u5b88\u4e3b\u4e49\u7b49\u8fdb\u884c\u6279\u5224\u3002\\n   \\n   #### 4. **\u7ffb\u8bd1\u4e0e\u7814\u7a76**\\n      - \u9c81\u8fc5\u8fd8\u7ffb\u8bd1\u4e86\u8bb8\u591a\u5916\u56fd\u6587\u5b66\u4f5c\u54c1\uff0c\u5982\u4fc4\u56fd\u679c\u6208\u91cc\u7684\u300a\u6b7b\u9b42\u7075\u300b\u3002\\n      - \u540c\u65f6\u81f4\u529b\u4e8e\u4e2d\u56fd\u53e4\u4ee3\u6587\u5316\u7684\u6574\u7406\u4e0e\u7814\u7a76\uff0c\u51fa\u7248\u4e86\u300a\u4e2d\u56fd\u5c0f\u8bf4\u53f2\u7565\u300b\u300a\u6c49\u6587\u5b66\u53f2\u7eb2\u8981\u300b\u7b49\u5b66\u672f\u8457\u4f5c\u3002\\n   \\n   ---\\n   \\n   ### **\u5386\u53f2\u5730\u4f4d\u4e0e\u5f71\u54cd**\\n   \\n   1. **\u5bf9\u4e2d\u56fd\u6587\u5b66\u7684\u8d21\u732e**  \\n      - \u9c81\u8fc5\u5f00\u521b\u4e86\u4e2d\u56fd\u73b0\u4ee3\u6587\u5b66\u7684\u65b0\u5c40\u9762\uff0c\u4ed6\u7684\u4f5c\u54c1\u5960\u5b9a\u4e86\u4e2d\u56fd\u73b0\u4ee3\u6587\u5b66\u7684\u57fa\u7840\u3002\\n      - \u63d0\u5021\u767d\u8bdd\u6587\uff0c\u63a8\u52a8\u6587\u5b66\u8bed\u8a00\u7684\u73b0\u4ee3\u5316\u3002\\n   \\n   2. **\u5bf9\u793e\u4f1a\u601d\u60f3\u7684\u5f71\u54cd**  \\n      - \u9c81\u8fc5\u7684\u601d\u60f3\u6df1\u523b\u5f71\u54cd\u4e86\u51e0\u4ee3\u4e2d\u56fd\u4eba\uff0c\u7279\u522b\u662f\u5728\u53cd\u5bf9\u5c01\u5efa\u793c\u6559\u3001\u5021\u5bfc\u601d\u60f3\u89e3\u653e\u65b9\u9762\u3002\\n      - \u4ed6\u7684\u6742\u6587\u6210\u4e3a\u6279\u8bc4\u793e\u4f1a\u4e0d\u516c\u548c\u63ed\u9732\u9ed1\u6697\u7684\u5178\u8303\u3002\\n   \\n   3. **\u56fd\u9645\u58f0\u8a89**  \\n      - \u9c81\u8fc5\u7684\u4f5c\u54c1\u88ab\u7ffb\u8bd1\u6210\u591a\u79cd\u8bed\u8a00\uff0c\u5728\u4e16\u754c\u8303\u56f4\u5185\u4eab\u6709\u76db\u8a89\u3002\\n      - \u88ab\u8a89\u4e3a\u201c\u4e2d\u56fd\u7684\u826f\u5fc3\u201d\u548c\u201c\u6c11\u65cf\u9b42\u201d\u3002\\n   \\n   \u9c81\u8fc5\u7684\u4e00\u751f\uff0c\u65e2\u662f\u5bf9\u4f20\u7edf\u6587\u5316\u7684\u53cd\u601d\uff0c\u4e5f\u662f\u5bf9\u73b0\u4ee3\u793e\u4f1a\u7684\u63a2\u7d22\u3002\u4ed6\u7684\u4f5c\u54c1\u81f3\u4eca\u4ecd\u5177\u6709\u5f3a\u5927\u7684\u751f\u547d\u529b\u548c\u73b0\u5b9e\u610f\u4e49\u3002\\n   ```\\n\\n   \u6700\u7ec8\u6784\u5efa\u7684 Prompt \u4e3a\uff1a\\n\\n   ```text\\n   \u4ecb\u7ecd \u9c81\u8fc5\uff0c\u5217\u51fa\u5176\u751f\u5e73\u7ecf\u5386\u548c\u6587\u5b66\u6210\u5c31\\n   ```"},{"id":"opentelemetry-project","metadata":{"permalink":"/blog/opentelemetry-project","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/otel/Opentelemetry-java-instrumentation \u89e3\u8bfb.md","source":"@site/blog/otel/Opentelemetry-java-instrumentation \u89e3\u8bfb.md","title":"Opentelemetry \u9879\u76ee\u89e3\u8bfb","description":"1. \u4ec0\u4e48\u662f Opentelmetry","date":"2025-04-19T17:44:00.000Z","tags":[{"inline":true,"label":"Opentelemetry-java-instrumentation","permalink":"/blog/tags/opentelemetry-java-instrumentation"},{"inline":true,"label":"OT","permalink":"/blog/tags/ot"},{"inline":true,"label":"Java","permalink":"/blog/tags/java"},{"inline":true,"label":"OTEL","permalink":"/blog/tags/otel"}],"readingTime":3.44,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"opentelemetry-project","title":"Opentelemetry \u9879\u76ee\u89e3\u8bfb","date":"2025-04-19T17:44:00.000Z","authors":"yuluo","tags":["Opentelemetry-java-instrumentation","OT","Java","OTEL"],"keywords":["OT","Java","OTEL"],"image":"/img/otel/ot-1.png"},"unlisted":false,"prevItem":{"title":"Spring AI Alibaba \u52a8\u6001 Prompt \u6700\u4f73\u5b9e\u8df5","permalink":"/blog/spring-ai-alibaba-nacos-prompt"},"nextItem":{"title":"Spring AI \u53ef\u89c2\u6d4b\u6027","permalink":"/blog/spring-ai-alibaba-observations"}},"content":"\x3c!-- truncate --\x3e\\n\\n# Opentelemetry-java-instrumentation \u89e3\u8bfb\\n\\n## 1. \u4ec0\u4e48\u662f Opentelmetry \\n\\nOt \u7edf\u4e00\u4e86\u53ef\u89c2\u6d4b\u7684\u4e09\u4e2a\u91cd\u8981\u7ef4\u5ea6\uff1a\u5206\u522b\u662f Trace\uff0cLog\uff0cMetrics\u3002\\n\\n\u5728\u6ca1\u6709 ot \u4e4b\u524d\uff0c\u4e0d\u540c\u7ef4\u5ea6\u7684\u53ef\u89c2\u6d4b\u7ec4\u4ef6\u90fd\u662f\u4e0d\u540c\u7684\uff1a\\n\\n1. \u5728 Trace \u9886\u57df\uff1askywalking \u4e00\u76f4\u5f88\u53d7\u6b22\u8fce\uff1b\\n2. \u5728 Metrics \u9886\u57df\uff1a\u4e3b\u8981\u4ee5 Prometheus \u4e3a\u4e3b\uff0cVictoriaMetric \u4e5f\u5f88\u53d7\u6b22\u8fce\uff0c\u5360\u7528\u8d44\u6e90\u66f4\u5c11\uff1b\\n3. \u5728 Log \u9886\u57df\uff1aELK \u7ecf\u4e45\u4e0d\u8870\u3002\\n\\n\u4e0d\u8fc7\u4e3a\u4e86\u89e3\u51b3\u53ef\u89c2\u6d4b\u8fd9\u4e00\u95ee\u9898\uff0c\u540c\u65f6\u5f15\u5165\u4e09\u4e2a\u7ec4\u4ef6\uff0c\u5bfc\u81f4\u6280\u672f\u6808\u4f17\u591a\uff0c\u7ef4\u62a4\u9ebb\u70e6\u3002ot \u4fbf\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u82b1\u8d39\u5c11\u91cf\u7cbe\u529b\u5b8c\u6210\u53ef\u89c2\u6d4b\u5efa\u8bbe\u3002\\n\\n\u7531  OpenTracing\uff0cOpenCensus \u5408\u5e76\u5171\u540c\u53d1\u5c55\u800c\u6765\u3002\u73b0\u5728\u5df2\u7ecf\u662f CNCF \u7684\u9876\u7ea7\u9879\u76ee\u4e86\uff0c\u5e76\u4e14\u53d7\u5230\u4e86\u5f88\u591a\u5927\u5382\u7684\u652f\u6301\u3002\\n\\n### 1.1 OpenTelmetry \u67b6\u6784\\n\\n![ot \u67b6\u6784](/img/otel/ot-1.png)\\n\\n\u4ece\u4e0a\u56fe\u4e2d\u770b\u5230\uff0c\u6574\u4e2a Oentelmetry \u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\\n\\n### 1.1.1 \u5ba2\u6237\u7aef\\n\\n\u5ba2\u6237\u7aef\u5c31\u662f\u6211\u4eec\u7f16\u5199\u5f97\u4e1a\u52a1\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u7528 Go \u6216\u8005 Java \u7f16\u5199\u3002\u5982\u679c\u662f Java \u5e94\u7528\uff0c\u5728 ot \u4e2d\uff0c\u53ea\u9700\u8981\u6302\u8f7d\u4e00\u4e2a agent \u5c31\u53ef\u4ee5\u91c7\u96c6\u5230\u7cfb\u7edf\u7684\u6307\u6807\uff0c\u94fe\u8def\u548c\u65e5\u5fd7\u6570\u636e\u4e0a\u4f20\u5230 Collector \u4e2d\u3002\u65e2\u67b6\u6784\u56fe\u4e2d\u7684\u5de6\u8fb9\u90e8\u5206\u3002\\n\\n#### 1.1.2 Otel Collector\\n\\n![ot collector](/img/otel/ot-2.png)\\n\\not \u5728\u8bbe\u8ba1\u6700\u521d\u7684\u76ee\u7684\u662f\u8981\u505a\u5230\u5382\u5546\u65e0\u5173\u6027\uff0c\u4e0d\u548c\u4efb\u610f\u4e00\u4e2a\u5382\u5546\u6216\u8005\u4ea7\u54c1\u7ed1\u5b9a\u3002\u56e0\u6b64\u5728 collector \u505a\u4e86\u66f4\u9ad8\u5c42\u7684\u62bd\u8c61\u8bbe\u8ba1\u3002\\n\\n\u5982\u56fe\u4e2d\u7684\u6570\u636e\u63a5\u53d7\u548c\u5bfc\u51fa\u7ec4\u4ef6\uff0cReceiver\u548c Exporter\u3002\u90fd\u91c7\u7528\u53ef\u63d2\u62d4\u7684\u8bbe\u8ba1\u65b9\u5f0f\u3002\u7b2c\u4e09\u65b9\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u57fa\u4e8e ot \u7684\u6807\u51c6\u534f\u8bae\u5f00\u53d1\u4e0d\u540c\u7684 Receiver\u548c Exporter \u7ec4\u4ef6\u6765\u517c\u5bb9\u4e0d\u540c\u7684\u4ea7\u54c1\uff0c\u4ece\u800c\u505a\u5230\u5382\u5546\u65e0\u5173\u6027\u3002\\n\\nReceiver\uff1a\u7528\u4e8e\u63a5\u53d7\u5ba2\u6237\u7aef\u4e0a\u62a5\u7684\u6570\u636e\uff0c\u4e0d\u6b62\u662f\u6765\u81ea agent \u7684\u6570\u636e\uff0c\u4e5f\u6709\u53ef\u80fd\u6765\u81ea\u4e0d\u540c\u7684\u670d\u52a1\u4ea7\u54c1\u3002\u4f8b\u5982 k8s\uff0ckafka \u7b49\u3002\\n\\nExporter\uff1a\u5728\u63a5\u6536\u5230 Receiver\u7684\u6570\u636e\uff0c\u7531 collector \u5904\u7406\u4e4b\u540e\u53ef\u4ee5\u5c06\u5176\u8f93\u51fa\u5230\u4e0d\u540c\u7684\u7ec4\u4ef6\u4e2d\uff0c\u6bd4\u5982\uff1aKafka\uff0cJaeger \u7b49\u3002\\n\\n\u5728\u4f7f\u7528 ot \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Nginx Receiver\u63a5\u53d7\u6765\u81ea nginx \u7684\u6570\u636e\uff0c\u4f7f\u7528 MySQL Receiver\u63a5\u53d7\u6765\u81ea MySQL \u7684\u6570\u636e\u7b49\u3002\u901a\u5e38\u4f7f\u7528\u6700\u591a\u7684\u662f otel Receiver\uff0cot \u5b98\u65b9\u7684 OTLP \u534f\u8bae\u7684\u6570\u636e\u63a5\u6536\u5668\uff0c\u63a5\u53d7\u6765\u81ea ot \u7684\u4e00\u4e9b\u6307\u6807\u3002\u4f8b\u5982\u53ea\u4f7f\u7528\u4e86 Java agent \u4e0a\u62a5\u53ef\u89c2\u6d4b\u6570\u636e\u65f6\u3002\\n\\nExporter \u4e3b\u8981\u8d1f\u8d23\u5c06\u4e0d\u540c\u7684\u6307\u6807\u6570\u636e\u5199\u5165\u5230\u4e0d\u540c\u7684\u7ec4\u4ef6\u4e2d\uff0c\u4f8b\u5982\u5c06\u6307\u6807\u76f8\u5173\u6570\u636e\u5199\u5165\u5230 Prometheus\uff0c\u65e5\u5fd7\u5199\u5165\u5230 es \u7b49\u3002\\n\\n\u5bf9\u6bd4\u4e4b\u4e0b\uff0cot collector \u7684 Receiver \u548c Exporter \u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u642d\u914d\uff0c\u6570\u636e\u5b58\u50a8\u7684\u53d8\u66f4\uff0c\u4e0d\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u4e1a\u52a1\u7cfb\u7edf\u3002\u4e1a\u52a1\u7cfb\u7edf\u53ea\u9700\u8981\u6309\u7167 OTLP \u534f\u8bae\u7684\u683c\u5f0f\u4e0a\u62a5\u6570\u636e\u5373\u53ef\u3002\\n\\n## 2. Opentelmetry \u9879\u76ee\\n\\n\u4ece\u4e0a\u9762\u7684\u67b6\u6784\u56fe\u4e86\u89e3\u5230\uff1aot \u7684\u6574\u4e2a\u9879\u76ee\u4e3b\u8981\u5206\u4e3a\u5ba2\u6237\u7aef\u548c collector \u7aef\u3002\u9664\u4e86 java \u4e4b\u5916\uff0cot \u8fd8\u652f\u6301\u5176\u4ed6\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u3002\u5927\u90e8\u5206\u90fd\u8fbe\u5230\u4e86\u751f\u4ea7\u53ef\u7528\u7684\u7a0b\u5ea6\u3002\\n\\n\u63a5\u4e0b\u6765\uff0c\u6df1\u5165\u4e86\u89e3\u4e0b opentelemetry-java \u548c opentelemetry-java-instrumentation\u3002\\n\\n\u5728\u65e5\u5e38\u4f7f\u7528\u4e2d\uff0c\u7528\u5230\u6700\u591a\u7684\u9879\u76ee\u662f\uff1aopentelemetry-java-instrumentation\u3002\u63d0\u4f9b\u4e86 ot \u7684 java agent \u3002\\n\\n\u5728\u542f\u52a8\u9879\u76ee\u65f6\uff0c\u53ea\u9700\u8981\u52a0\u4e0a java agent \u5c31\u53ef\u4ee5\u81ea\u52a8\u5b9e\u73b0\u53ef\u89c2\u6d4b\u6570\u636e\u7684\u4e0a\u62a5\uff1a\\n\\n```shell\\njava -javaagent:path/to/opentelemetry-javaagent.jar -jar myapp.jar\\n```\\n\\n### 2.1 opentelemetry-java\\n\\nopentelemetry-java-instrumentation \u57fa\u4e8e opentelemetry-java \u521b\u5efa\u3002\u662f ot Java \u7248\u672c\u7684\u6838\u5fc3\u57fa\u7840\u5e93\u3002\\n\\n### 2.2 opentelemetry-java-instrumentation\\n\\n\u96c6\u6210\u4e86\u5e38\u7528\u7684 Java \u7684\u4e0d\u540c\u6846\u67b6\uff0c\u5e93\u7684\u53ef\u89c2\u6d4b\u6570\u636e\u3002\\n\\n\u5176\u4ed6\u9879\u76ee\u5927\u81f4\u7ed3\u6784\u7c7b\u4f3c\u3002\u4f8b\u5982 collector \u5206\u4e3a\uff1a**OpenTelemetry Collector** \u548c **OpenTelemetry Collector Contrib**\\n\\nopentelemetry-collector\uff1a\u7531 ot \u5b98\u65b9\u7ef4\u62a4\uff0c\u63d0\u4f9b\u6700\u57fa\u7840\u7684\u6838\u5fc3\u80fd\u529b\uff1b\u6bd4\u5982\u53ea\u5305\u542b\u4e86\u6700\u57fa\u672c\u7684 otlp \u7684 receiver \u548c exporter\u3002\\n\\nopentelemetry-collector-contrib\uff1a\u5305\u542b\u4e86\u5b98\u65b9\u7684 collector\uff0c\u540c\u65f6\u7ef4\u62a4\u4e86\u793e\u533a\u63d0\u4f9b\u7684\u5404\u79cd receiver \u548c exporter\uff1b\u5c31\u5982\u4e0a\u6587\u63d0\u5230\u7684\uff0c\u4e00\u4e9b\u793e\u533a\u7ec4\u4ef6\uff08pulsar\u3001MySQL\u3001Kafka\uff09\u7b49\u90fd\u7ef4\u62a4\u5728\u8fd9\u4e2a\u4ed3\u5e93\u3002\\n\\n## 3. \u603b\u7ed3\\n\\n OpenTelemetry \u60f3\u8981\u89e3\u51b3\u7684\u662f\u6574\u4e2a\u53ef\u89c2\u6d4b\u9886\u57df\u7684\u6240\u6709\u9700\u6c42\uff0c\u505a\u5230\u771f\u6b63\u7684\u5382\u5546\u65e0\u5173\u6027\uff0c\u56e0\u6b64\u81ea\u8eab\u6709\u975e\u5e38\u591a\u7684 Receiver \u548c Exporter\u3002\\n\\n\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4f55\u5728 opentelemetry-java-instrumentation \u4ed3\u5e93\u4e2d\u4e3a Java \u5e93\u548c\u6846\u67b6\u63d0\u4f9b\u53ef\u89c2\u6d4b\u652f\u6301\u3002\\n\\n### 3.1 \u53c2\u8003\u94fe\u63a5\uff1a\\n\\nhttps://juejin.cn/post/7358450927110357026?from=search-suggest\\n\\nhttps://opentelemetry.io/ecosystem/registry/\\n\\n[open-telemetry/opentelemetry-java-instrumentation: OpenTelemetry auto-instrumentation and instrumentation libraries for Java](https://github.com/open-telemetry/opentelemetry-java-instrumentation)\\n\\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md#libraries--frameworks"},{"id":"spring-ai-alibaba-observations","metadata":{"permalink":"/blog/spring-ai-alibaba-observations","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-\u53ef\u89c2\u6d4b\u6027.md","source":"@site/blog/AI-large-models/spring-ai-\u53ef\u89c2\u6d4b\u6027.md","title":"Spring AI \u53ef\u89c2\u6d4b\u6027","description":"\u4ee5\u4e0b\u6700\u4f73\u5b9e\u8df5\u57fa\u4e8e Spring AI 1.0.0 \u548c Spring AI Alibaba 1.0.0.2 \u7248\u672c\u3002","date":"2025-03-30T13:07:00.000Z","tags":[{"inline":true,"label":"Spring AI observations","permalink":"/blog/tags/spring-ai-observations"},{"inline":true,"label":"ZipKin","permalink":"/blog/tags/zip-kin"}],"readingTime":2.62,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-ai-alibaba-observations","title":"Spring AI \u53ef\u89c2\u6d4b\u6027","date":"2025-03-30T13:07:00.000Z","authors":"yuluo","tags":["Spring AI observations","ZipKin"],"keywords":["Spring AI observations","grafana","prometheus"],"image":"/img/ai/observations/image-20250604212605930.png"},"unlisted":false,"prevItem":{"title":"Opentelemetry \u9879\u76ee\u89e3\u8bfb","permalink":"/blog/opentelemetry-project"},"nextItem":{"title":"MCP \u4ecb\u7ecd\u548c\u57fa\u672c\u4f7f\u7528","permalink":"/blog/mcp"}},"content":"\x3c!-- truncate --\x3e\\n\\n> \u4ee5\u4e0b\u6700\u4f73\u5b9e\u8df5\u57fa\u4e8e Spring AI 1.0.0 \u548c Spring AI Alibaba 1.0.0.2 \u7248\u672c\u3002\\n\\n## \u53ef\u89c2\u6d4b\u80cc\u666f\\n\\n\u8f6f\u4ef6\u7684\u53ef\u89c2\u6d4b\u6027\uff08Observability\uff09\u662f\u6307\u901a\u8fc7\u7cfb\u7edf\u8f93\u51fa\uff08\u5982\u65e5\u5fd7\u3001\u6307\u6807\u3001\u8ddf\u8e2a\u7b49\uff09\u6765\u63a8\u65ad\u5176\u5185\u90e8\u72b6\u6001\u7684\u80fd\u529b\u3002\u5728 Spring AI \u4e2d\u57fa\u4e8e Spring \u751f\u6001\u96c6\u6210\u53ef\u89c2\u6d4b\u6027\u529f\u80fd\u3002\u5305\u62ec `ChatClient\uff08\u5305\u542b ChatModel \u548c Advisor\uff0cToolCall \u7b49\uff09` \u3001`EmbeddingModel`\u3001`ImageModel` \u548c VectorStore \u3002 \\n\\n## Spring AI Alibaba \u53ef\u89c2\u6d4b\u6027\\n\\n> Tips: Spring AI \u4e00\u4e9b\u8f93\u51fa\u5185\u5bb9\u8f83\u5927\u4e14\u4e3a\u4e86\u6570\u636e\u5b89\u5168\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6ca1\u6709\u5f00\u542f\u6253\u5370\u5f00\u5173\uff0c\u9700\u8981\u624b\u52a8\u5f00\u542f\u3002\\n>\\n> \u53c2\u8003\uff1ahttps://docs.spring.io/spring-ai/reference/observability/index.html#_prompt_content\\n\\n### \u521b\u5efa Spring AI Alibaba \u9879\u76ee\\n\\n\u4e0b\u6587\u4e2d\u7684\u6240\u6709\u9879\u76ee\u4ee3\u7801\u90fd\u5728\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-observability-example/observability-example\\n\\n####  \u5f15\u5165\u4f9d\u8d56\\n\\n\u9879\u76ee\u4e2d\u5728\u8ddf pom \u4e2d\u63d0\u524d\u5f15\u5165\u4e86 `spring-ai-alibaba-bom`\uff0c\u4e0b\u6587\u4e2d\u6ca1\u6709\u5217\u51fa\u3002\\n\\n1. spring-ai-alibaba-starter-dashscope\uff1a dashscope starter\\n2. spring-ai-alibaba-starter-tool-calling-weather\uff1aspring ai alibaba \u5de5\u5177 starter\\n3. micrometer-tracing-bridge-brave zipkin-reporter-brave\uff1a\u89c2\u6d4b\u4f9d\u8d56\\n\\n```xml\\n<dependencies>\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-web</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-actuator</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-tool-calling-weather</artifactId>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>io.micrometer</groupId>\\n        <artifactId>micrometer-tracing-bridge-brave</artifactId>\\n        <version>1.5.0-M2</version>\\n        <exclusions>\\n            <exclusion>\\n                <artifactId>slf4j-api</artifactId>\\n                <groupId>org.slf4j</groupId>\\n            </exclusion>\\n        </exclusions>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>io.zipkin.reporter2</groupId>\\n        <artifactId>zipkin-reporter-brave</artifactId>\\n        <version>3.4.3</version>\\n    </dependency>\\n</dependencies>\\n```\\n\\n#### application.yml \u914d\u7f6e\\n\\n1. \u5f00\u542f spring ai \u7684\u89c2\u6d4b\u6027\u529f\u80fd\\n2. \u5f00\u542f spring ai alibaba weather tool \u529f\u80fd\\n\\n```yml\\nspring:\\n  application:\\n    name: observability-models-dashscope\\n\\n  ai:\\n    dashscope:\\n      api-key: ${AI_DASHSCOPE_API_KEY}\\n      observations:\\n        log-completion: true\\n        log-prompt: true\\n\\n    # spring ai alibaba weather tool calling config\\n    alibaba:\\n      toolcalling:\\n        weather:\\n          api-key: ${WEATHER_API_KEY}\\n          enabled: true\\n\\n    # Chat config items\\n    chat:\\n      client:\\n        observations:\\n          # default value is false.\\n          log-prompt: true\\n          log-completion: true\\n          include-error-logging: true\\n\\n  # tools config items\\n  tools:\\n    observability:\\n      # default value is false.\\n      include-content: true\\n\\n    # Image observation is only support openai for spring ai.\\n    # image:\\n    #   observations:\\n    #     log-prompt: true\\n\\n  http:\\n    client:\\n      read-timeout: 60s\\n\\nmanagement:\\n  endpoints:\\n    web:\\n      exposure:\\n        include: \\"*\\"\\n  endpoint:\\n    health:\\n      # \u5e94\u7528\u5065\u5eb7\u72b6\u6001\u68c0\u67e5\uff0c\u643a\u5e26\u8be6\u7ec6\u65b0\u5b66\u5e74\\n      show-details: always\\n  tracing:\\n    sampling:\\n      # trace \u91c7\u6837\u4fe1\u606f\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8bf7\u6c42\\n      probability: 1.0\\n```\\n\\n#### Controller\\n\\n\u6b64\u90e8\u5206\u4e3a ai \u670d\u52a1\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4ee5 ChatClient \u4e3a\u4f8b\uff0cEmbedding \u548c Image \u7c7b\u4f3c\uff1a\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/observability/chat\\")\\npublic class ChatModelController {\\n\\n\\tprivate final ChatClient chatClient;\\n\\n\\tpublic ChatModelController(ChatClient.Builder builder) {\\n\\t\\tthis.chatClient = builder.build();\\n\\t}\\n\\n\\t@GetMapping\\n\\tpublic Flux<String> chat(@RequestParam(defaultValue = \\"hi\\") String prompt) {\\n\\n\\t\\treturn chatClient.prompt(prompt).stream().content();\\n\\t}\\n\\n}\\n```\\n\\n### \u542f\u52a8\u4f9d\u8d56\u9879\\n\\n\u6b64 demo \u4e2d\u5c06\u6570\u636e\u5bfc\u5165\u5230 zipkin \u5c55\u793a\uff0c\u56e0\u6b64\u9700\u8981\u542f\u52a8\u4e00\u4e2a zipkin\uff1a\\n\\n```yml\\nservices:\\n  zipkin:\\n    image: \'openzipkin/zipkin:latest\'\\n    ports:\\n      - \'9411:9411\'\\n```\\n\\n### \u53ef\u89c2\u6d4b\u8f93\u51fa\\n\\n#### ChatClient \\n\\n\u6307\u6807\u4ecb\u7ecd\uff1ahttps://docs.spring.io/spring-ai/reference/observability/index.html#_chat_client\\n\\n\u5728\u4e0b\u6587\u4e2d\u5373\u53ef\u770b\u5230 chatClient \u76f8\u5173\u7684\u4fe1\u606f\uff1a\\n\\n![image-20250604212605930](/img/ai/observations/image-20250604212605930.png)\\n\\n#### ToolCalling\\n\\n\u6307\u6807\u4ecb\u7ecd\uff1ahttps://docs.spring.io/spring-ai/reference/observability/index.html#_tool_calling\\n\\n![image-20250604212858047](/img/ai/observations/image-20250604212858047.png)\\n\\n\u5728\u4e0b\u9762\u7684 tool \u6a21\u5757\u53ef\u4ee5\u770b\u5230 tools \u7684\u5165\u53c2\u548c\u51fa\u53c2\u4fe1\u606f\uff1a\\n\\n![image-20250604213730393](/img/ai/observations/image-20250604213730393.png)\\n\\n#### Embedding Client\\n\\n\u6307\u6807\u53c2\u8003\uff1ahttps://docs.spring.io/spring-ai/reference/observability/index.html#_embeddingmodel\\n\\n![image-20250604213822311](/img/ai/observations/image-20250604213822311.png)\\n\\n![image-20250604213913992](/img/ai/observations/image-20250604213913992.png)\\n\\n### \u6269\u5c55 Spring AI \u6307\u6807\\n\\nSpring AI \u63d0\u4f9b\u4e86 `ObservationHandler<ChatModelObservationContext>` \u673a\u5236\u6765\u6269\u5c55\u53ef\u89c2\u6d4b\u4fe1\u606f\uff0c\u60a8\u53ef\u4ee5\u52a0\u5165\u6216\u8005\u6539\u53d8\u89c2\u6d4b\u6570\u636e\u3002\\n\\n#### pom\\n\\npom \u4e2d\u53ea\u9700\u5f15\u5165\u5bf9\u5e94\u7684 starter \u5373\u53ef\u3002\\n\\n```xml\\n<dependencies>\\n    <dependency>\\n        <groupId>com.alibaba.cloud.ai</groupId>\\n        <artifactId>spring-ai-alibaba-starter-dashscope</artifactId>\\n    </dependency>\\n</dependencies>\\n```\\n\\n#### application.yml\\n\\n```yml\\nspring:\\n  application:\\n    name: observationhandler-example\\n```\\n\\n#### CustomerObservationHandler\\n\\n\u6269\u5c55\u5b9e\u73b0\\n\\n```java\\npublic class CustomerObservationHandler implements ObservationHandler<ChatModelObservationContext> {\\n\\n    @Override\\n    public void onStart(ChatModelObservationContext context) {\\n        System.out.println(\\"exec CustomerObservationHandler onStart function! ChatModelObservationContext: \\" + context.toString() );\\n    }\\n\\n    @Override\\n    public void onStop(ChatModelObservationContext context) {\\n        System.out.println(\\"exec CustomerObservationHandler onStop function! ChatModelObservationContext: \\" + context.toString() );\\n    }\\n\\n    @Override\\n    public boolean supportsContext(Observation.Context context) {\\n        return true;\\n    }\\n}\\n```\\n\\n#### Chat Controller\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/custom/observation/chat\\")\\npublic class ChatModelController {\\n\\n    @GetMapping\\n    public String chat(@RequestParam(defaultValue = \\"hi\\") String message) {\\n\\n       ObservationRegistry registry = ObservationRegistry.create();\\n       registry.observationConfig().observationHandler(new CustomerObservationHandler());\\n\\n       // Need to set the API key in the environment variable \\"AI_DASHSCOPE_API_KEY\\"\\n       // Spring Boot Autoconfiguration is injected use ChatClient.\\n       return DashScopeChatModel.builder()\\n             .dashScopeApi(DashScopeApi.builder().apiKey(System.getenv(\\"AI_DASHSCOPE_API_KEY\\")).build())\\n             .observationRegistry(registry)\\n             .build()\\n             .call(message);\\n    }\\n\\n}\\n```\\n\\n\u5f53\u5728\u8bf7\u6c42 chat \u63a5\u53e3\u65f6\uff0c\u4f1a\u6267\u884c custom handler \u4e2d\u7684\u4ee3\u7801\u8bed\u53e5\uff1a\\n\\n```text\\nexec CustomerObservationHandler onStart function! ChatModelObservationContext: name=\'gen_ai.client.operation\', contextualName=\'null\', error=\'null\', lowCardinalityKeyValues=[gen_ai.operation.name=\'chat\', gen_ai.request.model=\'qwen-plus\', gen_ai.response.model=\'none\', gen_ai.system=\'dashscope\'], highCardinalityKeyValues=[gen_ai.request.temperature=\'0.7\'], map=[], parentObservation=null\\n\\nexec CustomerObservationHandler onStop function! ChatModelObservationContext: name=\'gen_ai.client.operation\', contextualName=\'chat qwen-plus\', error=\'null\', lowCardinalityKeyValues=[gen_ai.operation.name=\'chat\', gen_ai.request.model=\'qwen-plus\', gen_ai.response.model=\'none\', gen_ai.system=\'dashscope\'], highCardinalityKeyValues=[gen_ai.request.temperature=\'0.7\', gen_ai.response.finish_reasons=\'[\\"STOP\\"]\', gen_ai.response.id=\'9582b50a-4056-9b7e-b2ca-e52368406b5e\', gen_ai.usage.input_tokens=\'9\', gen_ai.usage.output_tokens=\'7\', gen_ai.usage.total_tokens=\'16\'], map=[], parentObservation=null\\n```\\n\\n## \u53c2\u8003\u6587\u6863\\n\\n- https://docs.spring.io/spring-ai/reference/observability/index.html"},{"id":"mcp","metadata":{"permalink":"/blog/mcp","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/MCP.md","source":"@site/blog/AI-large-models/MCP.md","title":"MCP \u4ecb\u7ecd\u548c\u57fa\u672c\u4f7f\u7528","description":"\u5927\u6a21\u578b\u4e13\u680f -- MCP\uff08Model Context Protocol\uff09","date":"2025-03-11T21:01:08.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"Spring AI Alibaba","permalink":"/blog/tags/spring-ai-alibaba"},{"inline":true,"label":"MCP","permalink":"/blog/tags/mcp"}],"readingTime":4.516666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"mcp","title":"MCP \u4ecb\u7ecd\u548c\u57fa\u672c\u4f7f\u7528","date":"2025-03-11T21:01:08.000Z","authors":"yuluo","tags":["AI","Spring AI Alibaba","MCP"],"keywords":["AI","Spring AI Alibaba","MCP"],"image":"/img/ai/mcp/img.png"},"unlisted":false,"prevItem":{"title":"Spring AI \u53ef\u89c2\u6d4b\u6027","permalink":"/blog/spring-ai-alibaba-observations"},"nextItem":{"title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","permalink":"/blog/spring-cloud-alibaba-module-rag"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u5927\u6a21\u578b\u4e13\u680f -- MCP\uff08Model Context Protocol\uff09\\n\\n\u672c\u6587\u7ae0\u4e2d\uff0c\u5c06\u4ecb\u7ecd\u4ec0\u4e48\u662f\u5927\u6a21\u578b\u7684 MCP\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 MCP\u3002\\n\\n## 1. MCP \u4ecb\u7ecd\\n\\n### 1.1 \u4ec0\u4e48\u662f MCP \\n\\nMCP\uff08Model Context Protocol\uff1a\u6a21\u578b\u4e0a\u4e0b\u6587\u534f\u8bae\uff09 \u662f\u4e00\u79cd\u5f00\u653e\u534f\u8bae\uff0c\u5236\u5b9a\u4e86\u5e94\u7528\u7a0b\u5e8f\u5411 LLM \u63d0\u4f9b\u4e0a\u4e0b\u6587\u7684\u6807\u51c6\u3002\u53ef\u4ee5\u5c06 MCP \u89c6\u4e3a AI \u5e94\u7528\u7a0b\u5e8f\u7684 USB-C \u7aef\u53e3\u3002\u6b63\u5982 USB-C \u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u8bbe\u5907\u8fde\u63a5\u5230\u5404\u79cd\u5916\u56f4\u8bbe\u5907\u548c\u914d\u4ef6\u7684\u6807\u51c6\u5316\u65b9\u5f0f\u4e00\u6837\uff0cMCP \u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06 AI \u6a21\u578b\u8fde\u63a5\u5230\u4e0d\u540c\u6570\u636e\u6e90\u548c\u5de5\u5177\u7684\u6807\u51c6\u5316\u65b9\u5f0f\u3002\\n\\n### 1.2 MCP \u7ec4\u6210\\n\\nMCP \u7684\u6838\u5fc3\u662f\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\uff0c\u5176\u4e2d\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8fde\u63a5\u5230\u591a\u4e2a\u670d\u52a1\u5668\uff1a\\n\\n![MCP \u67b6\u6784\u56fe](/img/ai/mcp/img.png)\\n\\n- **MCP \u4e3b\u673a**\uff1a\u5e0c\u671b\u901a\u8fc7 MCP \u8bbf\u95ee\u6570\u636e\u7684\u7a0b\u5e8f\uff0c\u4f8b\u5982 Claude Desktop\u3001IDE \u6216 AI \u5de5\u5177\\n- **MCP \u5ba2\u6237\u7aef**\uff1a\u4e0e\u670d\u52a1\u5668\u4fdd\u6301 1:1 \u8fde\u63a5\u7684\u534f\u8bae\u5ba2\u6237\u7aef\\n- **MCP \u670d\u52a1\u5668**\uff1a\u8f7b\u91cf\u7ea7\u7a0b\u5e8f\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u901a\u8fc7\u6807\u51c6\u5316\u6a21\u578b\u4e0a\u4e0b\u6587\u534f\u8bae\u516c\u5f00\u7279\u5b9a\u529f\u80fd\\n- **\u672c\u5730\u6570\u636e\u6e90**\uff1aMCP \u670d\u52a1\u5668\u53ef\u4ee5\u5b89\u5168\u8bbf\u95ee\u7684\u60a8\u7684\u8ba1\u7b97\u673a\u6587\u4ef6\u3001\u6570\u636e\u5e93\u548c\u670d\u52a1\\n- **\u8fdc\u7a0b\u670d\u52a1**\uff1aMCP \u670d\u52a1\u5668\u53ef\u901a\u8fc7\u4e92\u8054\u7f51\uff08\u4f8b\u5982\u901a\u8fc7 API\uff09\u8fde\u63a5\u5230\u7684\u5916\u90e8\u7cfb\u7edf\\n\\n### 1.3 MCP \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\\n\\n\u5927\u6a21\u578b\u5f80\u5f80\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u4e2a\u4f53\u8fd0\u884c\uff0c\u96be\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b9e\u65f6\u6570\u636e\u6e90\uff08\u5982\u4f01\u4e1a\u5185\u90e8\u6570\u636e\u5e93\u3001\u5b9e\u65f6\u6587\u6863\u3001\u5728\u7ebf\u670d\u52a1\u7b49\uff09\u3002\\n\\n\u5f00\u53d1\u8005\u901a\u5e38\u9700\u8981\u4e3a\u6bcf\u4e2a\u5e94\u7528\u573a\u666f\u5b9a\u5236\u4e13\u7528\u7684\u9002\u914d\u5668\u6216\u63d2\u4ef6\uff0c\u8fd9\u65e2\u8017\u65f6\u8d39\u529b\uff0c\u53c8\u7f3a\u4e4f\u53ef\u6269\u5c55\u6027\u3002MCP \u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u75db\u70b9\u3002\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u534f\u8bae\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u65e0\u9700\u91cd\u590d\u5f00\u53d1\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8fde\u63a5\u6a21\u578b\u4e0e\u6570\u636e\u6e90\uff0c\u63d0\u5347\u6a21\u578b\u7684\u901a\u7528\u6027\u548c\u843d\u5730\u6548\u7387\u3002\u4e30\u5bcc\u5927\u6a21\u578b\u77e5\u8bc6\uff0c\u63d0\u4f9b\u66f4\u4e13\u4e1a\u6709\u6548\u7684\u56de\u7b54\u3002\\n\\n## 2. MCP \u5f00\u53d1\\n\\n\u4ecb\u7ecd\u5b8c\u4e86 MCP \u4e4b\u540e\uff0c\u73b0\u5728\u6765\u4f7f\u7528 MCP \u7684 java SDK \u548c Spring AI Alibaba \u5f00\u53d1\u4e00\u4e2a MCP \u670d\u52a1\u793a\u4f8b\uff0c\u4f7f\u7528 mcp \u7684 STDIO \u65b9\u5f0f\u3002\\n\\n### 2.1 \u73af\u5883\u51c6\u5907\\n\\nMCP Java SDK repo\uff1ahttps://github.com/modelcontextprotocol/java-sdk\\n\\nMCP Java SDK Docs\uff1ahttps://modelcontextprotocol.io/sdk/java/mcp-overview\\n\\nSpring AI MCP Integration\uff1ahttps://docs.spring.io/spring-ai/reference/api/mcp/mcp-client-boot-starter-docs.html\\n\\nSpring AI Alibaba\uff1a[alibaba/spring-ai-alibaba: An Application Framework for Java Developers](https://github.com/alibaba/spring-ai-alibaba)\\n\\n### 2.2 \u4ee3\u7801\u5f00\u53d1\\n\\n> \u8fd9\u91cc\u4f7f\u7528 spring ai \u96c6\u6210\u7684 MCP starter\u3002\\n>\\n> server\uff1a`spring-ai-mcp-server-spring-boot-starter`\\n>\\n> client\uff1a`spring-ai-mcp-client-spring-boot-starter`\\n\\n#### 2.2.1 MCP \u670d\u52a1\u7aef\u5f00\u53d1\\n\\napplication.yml \u6587\u4ef6\u5b9a\u4e49\\n\\n```yml\\nspring:\\n  main:\\n    web-application-type: none\\n    banner-mode: off\\n\\n  # mcp \u914d\u7f6e\\n  ai:\\n    mcp:\\n      server:\\n        name: my-mcp-example-server\\n        version: 0.0.1\\n\\n  # \u4e1a\u52a1\u6570\u636e\u5e93\u7cfb\u7edf\u914d\u7f6e\\n  datasource:\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    url: jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\\n    username: root\\n    password: root\\n\\nlogging:\\n  pattern:\\n    console:\\n\\n# \u5173\u95ed mybatis-plus \u7684 banner \u8f93\u51fa\\nmybatis-plus:\\n  global-config:\\n    banner: off\\n```\\n\\npom.xml\\n\\n```xml\\n<dependencies>\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-web</artifactId>\\n        <version>3.4.2</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>org.springframework.ai</groupId>\\n        <artifactId>spring-ai-mcp-server-spring-boot-starter</artifactId>\\n        <version>${spring-ai.version}</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.mysql</groupId>\\n        <artifactId>mysql-connector-j</artifactId>\\n        <version>8.0.33</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.baomidou</groupId>\\n        <artifactId>mybatis-plus-spring-boot3-starter</artifactId>\\n        <version>3.5.10.1</version>\\n    </dependency>\\n\\n    <dependency>\\n        <groupId>com.google.code.gson</groupId>\\n        <artifactId>gson</artifactId>\\n        <version>2.12.1</version>\\n    </dependency>\\n</dependencies>\\n\\n\x3c!-- spring boot \u5de5\u7a0b\u5fc5\u987b\u8981\uff0c\u4e0d\u7136 mcp-serve \u65e0\u6cd5\u542f\u52a8 jar \u5305\uff0c\u4f1a\u5931\u8d25 --\x3e\\n<build>\\n    <plugins>\\n        <plugin>\\n            <groupId>org.springframework.boot</groupId>\\n            <artifactId>spring-boot-maven-plugin</artifactId>\\n            <executions>\\n                <execution>\\n                    <goals>\\n                        <goal>repackage</goal>\\n                    </goals>\\n                </execution>\\n            </executions>\\n        </plugin>\\n    </plugins>\\n</build>\\n```\\n\\nSpring Boot \u542f\u52a8\u7c7b\uff1a\\n\\n```java\\n@SpringBootApplication\\n@MapperScan(\\"indi.yuluo.repository\\")\\npublic class MCPServerApplication {\\n\\n\\tpublic static void main(String[] args) {\\n\\n\\t\\tSpringApplication.run(MCPServerApplication.class, args);\\n\\t}\\n\\n  // mcp Tool \u5b9a\u4e49\\n\\t@Bean\\n\\tpublic ToolCallbackProvider dataTools(ToolsDefinitionService dataService) {\\n\\n\\t\\treturn MethodToolCallbackProvider.builder().toolObjects(dataService).build();\\n\\t}\\n\\n\\t/**\\n\\t * \u8f93\u51fa\u6570\u636e\u5e93\u67e5\u8be2\u786e\u8ba4\u670d\u52a1\u7aef\u542f\u52a8\u6210\u529f\\n\\t */\\n\\t// @Resource\\n\\t// private MySQLDataService mySQLDataServiceImpl;\\n\\t//\\n\\t// @Bean\\n\\t// public Void run() {\\n\\t//\\n\\t// \\tSystem.out.println(mySQLDataServiceImpl.getContextData(\\"zhangsan\\"));\\n\\t// \\treturn null;\\n\\t// }\\n\\n}\\n```\\n\\nToolsDefinitionService.java\\n\\n```java\\n// \u5b9a\u4e49 tool service \u5728\u542f\u52a8\u7c7b\u4e2d\u6ce8\u5165 bean\\n@Service\\npublic class ToolsDefinitionService {\\n\\n  // \u4e00\u4e2a\u666e\u901a\u7684 mysql \u6570\u636e\u5e93\u670d\u52a1\\n\\t@Resource\\n\\tprivate MySQLDataService dataService;\\n\\n\\t@Tool(description = \\"\u8c03\u7528\u6b64\u5de5\u5177\u51fd\u6570\uff0c\u5c06\u53c2\u6570\u8f6c\u4e3a\u5168\u5927\u5199\u5e76\u8fd4\u56de\\")\\n\\tpublic String test(String test) {\\n\\n\\t\\treturn test.toLowerCase();\\n\\t}\\n\\n\\t@Tool(description = \\"\u8c03\u7528\u6b64\u5de5\u5177\u51fd\u6570\uff0c\u4ece mysql \u6570\u636e\u67e5\u8be2\u6307\u5b9a\u59d3\u540d\u7684\u8054\u7cfb\u4eba\u4fe1\u606f\\")\\n\\tpublic String queryContact(String name) {\\n\\n    // \u6839\u636e\u7528\u6237\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\n\\t\\treturn dataService.getContextData(name);\\n\\t}\\n\\n}\\n```\\n\\n\u81f3\u6b64\uff0cMCP server \u5f00\u53d1\u5b8c\u6210\u3002\\n\\n#### 2.2.2 MCP \u5ba2\u6237\u7aef\u5f00\u53d1\\n\\n\u73b0\u5728\uff0c\u6784\u5efa MCP client \u7aef\uff0c\u8c03\u7528 server \u7aef MCP Tool\u3002\\n\\n> \u6b64\u4f8b\u4e2d\u4f7f\u7528 web api \u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 CommandLineRunner \u7684\u65b9\u5f0f\u3002\\n\\n```yml\\nspring:\\n  application:\\n    name: mcp-client-example\\n\\n  mandatory-file-encoding: UTF-8\\n\\n  ai:\\n    dashscope:\\n      api-key: ${AI_DASHSCOPE_API_KEY}\\n\\n    mcp:\\n      client:\\n        stdio:\\n          servers-configuration: classpath:mcp-servers-config.json\\n\\n\\nserver:\\n  servlet:\\n    encoding:\\n      charset: UTF-8\\n      enabled: true\\n      force: true\\n\\nlogging:\\n  charset:\\n    file: UTF-8\\n\\n  # \u6253\u5370 mcp \u65e5\u5fd7\u4fe1\u606f\uff0c\u65b9\u4fbf\u67e5\u770b MCP Serve \u7684\u65e5\u5fd7\u4fe1\u606f\\n  level:\\n    io.modelcontextprotocol.client: debug\\n    io.modelcontextprotocol.spec: debug\\n\\n    org.springframework.ai: debug\\n```\\n\\nmcp-servers-config.json\\n\\n> MCP Server \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u653e\u5728 resources \u76ee\u5f55\u4e0b\u3002\\n\\n```json\\n{\\n  \\"mcpServers\\": {\\n    \\"my-mcp-example-server\\": {\\n      \\"command\\": \\"java\\",\\n      \\"args\\": [\\n        \\"-jar\\",\\n        \\"-Dspring.ai.mcp.server.stdio=true\\",\\n        \\"-Dspring.main.web-application-type=none\\",\\n        \\"-Dlogging.pattern.console=\\",\\n        \\"-Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\\",\\n        \\"-Dspring.datasource.url=jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\\",\\n        \\"-Dspring.datasource.username=root\\",\\n        \\"-Dspring.datasource.password=root\\",\\n        \\"D:\\\\\\\\AI\\\\\\\\examples\\\\\\\\mcp-example\\\\\\\\mcp-server-example\\\\\\\\target\\\\\\\\mcp-server-example-1.0-SNAPSHOT.jar\\"\\n      ],\\n      \\"env\\": {}\\n    }\\n  }\\n}\\n\\n```\\n\\n\u542f\u52a8\u7c7b\uff1a\\n\\n```java\\n@SpringBootApplication\\npublic class MCPClientApplication {\\n\\n\\tpublic static void main(String[] args) {\\n\\n\\t\\tSpringApplication.run(MCPClientApplication.class, args);\\n\\t}\\n\\n\\t// @Bean\\n\\t// public CommandLineRunner predefinedQuestions(ChatClient.Builder chatClientBuilder, ToolCallbackProvider tools,\\n\\t// \\t\\tConfigurableApplicationContext context) {\\n\\t//\\n\\t// \\treturn args -> {\\n\\t//\\n\\t// \\t\\tvar chatClient = chatClientBuilder\\n\\t// \\t\\t\\t\\t.defaultTools(tools)\\n\\t// \\t\\t\\t\\t.build();\\n\\t//\\n\\t// \\t\\tSystem.out.println(\\"\\\\n>>> QUESTION: \\" + \\"\u5e2e\u6211\u67e5\u8be2\u4e00\u4e0b wangwu \u7684\u4fe1\u606f\\");\\n\\t// \\t\\tSystem.out.println(\\"\\\\n>>> ASSISTANT: \\" + chatClient.prompt(\\"\u5e2e\u6211\u67e5\u8be2\u4e00\u4e0b wangwu \u7684\u4fe1\u606f\\").call().content());\\n\\t//\\n\\t// \\t\\tcontext.close();\\n\\t// \\t};\\n\\t// }\\n\\n}\\n```\\n\\ncontroller\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/mcp\\")\\npublic class MCPClientController {\\n\\n\\tprivate final ChatClient client;\\n\\n\\tpublic MCPClientController(\\n\\t\\t\\tChatModel chatModel,\\n\\t\\t\\tToolCallbackProvider tools\\n\\t) {\\n    // \u8f93\u51fa MCP server \u7684\u4e24\u4e2a tools\\n\\t\\tArrays.stream(tools.getToolCallbacks()).map(FunctionCallback::getName).forEach(System.out::println);\\n\\n\\t\\tthis.client = ChatClient.builder(chatModel)\\n\\t\\t\\t\\t.defaultTools(tools)\\n\\t\\t\\t\\t.build();\\n\\t}\\n\\n\\t@GetMapping(\\"/chat\\")\\n\\tpublic Flux<String> chat(\\n\\t\\t\\t@RequestParam(\\"prompt\\") String prompt,\\n\\t\\t\\tHttpServletResponse response\\n\\t) {\\n\\n\\t\\tresponse.setCharacterEncoding(\\"UTF-8\\");\\n\\n    // \u8f93\u51fa\u54cd\u5e94\\n\\t\\treturn client.prompt().user(prompt).stream().content();\\n\\t}\\n\\n}\\n```\\n\\n### 2.3 \u8bf7\u6c42\u6d4b\u8bd5\\n\\n```http\\n### Test API\\nGET http://127.0.0.1:8080/mcp/chat?prompt=\\"\u5c06 user \u8f6c\u4e3a\u5927\u5199\\"\\n\\n\u8f6c\u4e3a\u5927\u5199\u7684\u7ed3\u679c\u662f\uff1aUSER\\n\\n### MySQL API\\nGET http://127.0.0.1:8080/mcp/chat?prompt=\\"\u5e2e\u6211\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u4e00\u4e0b wangwu \u7684\u8054\u7cfb\u4fe1\u606f\\"\\n\\n\u67e5\u8be2\u7ed3\u679c\u663e\u793a\uff0c\u8054\u7cfb\u4eba wangwu \u7684\u4fe1\u606f\u5982\u4e0b\uff1a\\n\\n- ID: 3\\n- \u5e74\u9f84: 24\\n- \u7535\u5b50\u90ae\u4ef6: 789@gmail.com\\n\\n\u8fd9\u662f\u5173\u4e8e wangwu \u7684\u8be6\u7ec6\u8054\u7cfb\u4fe1\u606f\u3002\\n```\\n\\n## 3. \u603b\u7ed3\\n\\nExample Code\uff1ahttps://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/mcp-example\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u4ec0\u4e48\u662f MCP \u4ee5\u53ca MCP \u7684\u4f5c\u7528\u548c\u89e3\u51b3\u7684\u95ee\u9898\u3002\u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u4f53\u9a8c MCP \u7684\u80fd\u529b\u3002\\n\\n\u5728 MCP \u4e2d\uff0c\u9664\u4e86 STDIO \u7684\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u652f\u6301 SSE \u7684\u65b9\u5f0f\u3002\u66f4\u597d\u7684\u6ee1\u8db3\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u3002"},{"id":"spring-cloud-alibaba-module-rag","metadata":{"permalink":"/blog/spring-cloud-alibaba-module-rag","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-module-rag.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-module-rag.md","title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","description":"\u672c\u6587\u540c\u6b65\u53d1\u5e03\u5728 spring ai alibaba blog \u548c\u963f\u91cc\u4e91\u516c\u4f17\u53f7","date":"2025-03-11T21:01:08.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"Spring AI Alibaba","permalink":"/blog/tags/spring-ai-alibaba"},{"inline":true,"label":"Module RAG","permalink":"/blog/tags/module-rag"},{"inline":true,"label":"DeepSeek","permalink":"/blog/tags/deep-seek"}],"readingTime":9.206666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-cloud-alibaba-module-rag","title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","date":"2025-03-11T21:01:08.000Z","authors":"yuluo","tags":["AI","Spring AI Alibaba","Module RAG","DeepSeek"],"keywords":["AI","Spring AI Alibaba","Module RAG","DeepSeek"],"image":"/img/ai/module-rag/bgc.png"},"unlisted":false,"prevItem":{"title":"MCP \u4ecb\u7ecd\u548c\u57fa\u672c\u4f7f\u7528","permalink":"/blog/mcp"},"nextItem":{"title":"\u4f18\u96c5\u4ee3\u7801\u5b9e\u73b0\uff1aSpring Boot \u7684 7 \u4e2a\u6269\u5c55\u63a5\u53e3","permalink":"/blog/spring-boot-extension-interface.md"}},"content":"\x3c!-- truncate --\x3e\\n\\n> \u672c\u6587\u540c\u6b65\u53d1\u5e03\u5728 spring ai alibaba blog \u548c\u963f\u91cc\u4e91\u516c\u4f17\u53f7\\n\\n# \u4f7f\u7528 Spring AI Alibaba \u6784\u5efa\u5927\u6a21\u578b\u8054\u7f51\u641c\u7d22\u5e94\u7528\\n\\nSpring AI \u5b9e\u73b0\u4e86\u6a21\u5757\u5316 RAG \u67b6\u6784\uff0c\u67b6\u6784\u7684\u7075\u611f\u6765\u81ea\u4e8e\u8bba\u6587\u201c[\u6a21\u5757\u5316 RAG\uff1a\u5c06 RAG \u7cfb\u7edf\u8f6c\u53d8\u4e3a\u7c7b\u4f3c\u4e50\u9ad8\u7684\u53ef\u91cd\u6784\u6846\u67b6](https://arxiv.org/abs/2407.21059)\u201d\u4e2d\u8be6\u8ff0\u7684\u6a21\u5757\u5316\u6982\u5ff5\u3002\\n\\n## Spring AI \u6a21\u5757\u5316 RAG \u4f53\u7cfb\\n\\n![module-rag](/img/ai/module-rag/module-rag.png)\\n\\n\u603b\u4f53\u4e0a\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a\\n\\n###  Pre-Retrieval\\n\\n> \u589e\u5f3a\u548c\u8f6c\u6362\u7528\u6237\u8f93\u5165\uff0c\u4f7f\u5176\u66f4\u6709\u6548\u5730\u6267\u884c\u68c0\u7d22\u4efb\u52a1\uff0c\u89e3\u51b3\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u67e5\u8be2\u3001query \u8bed\u4e49\u4e0d\u6e05\u6670\u3001\u6216\u4e0d\u53d7\u652f\u6301\u7684\u8bed\u8a00\u7b49\u3002\\n\\n1. QueryAugmenter \u67e5\u8be2\u589e\u5f3a\uff1a\u4f7f\u7528\u9644\u52a0\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u4fe1\u606f\u589e\u5f3a\u7528\u6237 query\uff0c\u63d0\u4f9b\u5927\u6a21\u578b\u56de\u7b54\u95ee\u9898\u65f6\u7684\u5fc5\u8981\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1b\\n2. QueryTransformer \u67e5\u8be2\u6539\u5199\uff1a\u56e0\u4e3a\u7528\u6237\u7684\u8f93\u5165\u901a\u5e38\u662f\u7247\u9762\u7684\uff0c\u5173\u952e\u4fe1\u606f\u8f83\u5c11\uff0c\u4e0d\u4fbf\u4e8e\u5927\u6a21\u578b\u7406\u89e3\u548c\u56de\u7b54\u95ee\u9898\u3002\u56e0\u6b64\u9700\u8981\u4f7f\u7528 prompt \u8c03\u4f18\u624b\u6bb5\u6216\u8005\u5927\u6a21\u578b\u6539\u5199\u7528\u6237 query\uff1b\\n3. QueryExpander \u67e5\u8be2\u6269\u5c55\uff1a\u5c06\u7528\u6237 query \u6269\u5c55\u4e3a\u591a\u4e2a\u8bed\u4e49\u4e0d\u540c\u7684\u53d8\u4f53\u4ee5\u83b7\u5f97\u4e0d\u540c\u89c6\u89d2\uff0c\u6709\u52a9\u4e8e\u68c0\u7d22\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u5e76\u589e\u52a0\u627e\u5230\u76f8\u5173\u7ed3\u679c\u7684\u673a\u4f1a\u3002\\n\\n### Retrieval\\n\\n> \u8d1f\u8d23\u67e5\u8be2\u5411\u91cf\u5b58\u50a8\u7b49\u6570\u636e\u7cfb\u7edf\u5e76\u68c0\u7d22\u548c\u7528\u6237 query \u76f8\u5173\u6027\u6700\u9ad8\u7684 Document\u3002\\n\\n1. DocumentRetriever\uff1a\u68c0\u7d22\u5668\uff0c\u6839\u636e QueryExpander \u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u6e90\u8fdb\u884c\u68c0\u7d22\uff0c\u4f8b\u5982 \u641c\u7d22\u5f15\u64ce\u3001\u5411\u91cf\u5b58\u50a8\u3001\u6570\u636e\u5e93\u6216\u77e5\u8bc6\u56fe\u7b49\uff1b\\n2. DocumentJoiner\uff1a\u5c06\u4ece\u591a\u4e2a query \u548c\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u68c0\u7d22\u5230\u7684 Document \u5408\u5e76\u4e3a\u4e00\u4e2a Document \u96c6\u5408\uff1b\\n\\n### Post-Retrieval\\n\\n> \u8d1f\u8d23\u5904\u7406\u68c0\u7d22\u5230\u7684 Document \u4ee5\u83b7\u5f97\u6700\u4f73\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u89e3\u51b3\u6a21\u578b\u4e2d\u7684*\u4e2d\u95f4\u4e22\u5931*\u548c\u4e0a\u4e0b\u6587\u957f\u5ea6\u9650\u5236\u7b49\u3002\\n\\n1. DocumentRanker\uff1a\u6839\u636e Document \u548c\u7528\u6237 query \u7684\u76f8\u5173\u6027\u5bf9 Document \u8fdb\u884c\u6392\u5e8f\u548c\u6392\u540d\uff1b\\n2. DocumentSelector\uff1a\u7528\u4e8e\u4ece\u68c0\u7d22\u5230\u7684 Document \u5217\u8868\u4e2d\u5220\u9664\u4e0d\u76f8\u5173\u6216\u5197\u4f59\u6587\u6863\uff1b\\n3. DocumentCompressor\uff1a\u7528\u4e8e\u538b\u7f29\u6bcf\u4e2a Document\uff0c\u51cf\u5c11\u68c0\u7d22\u5230\u7684\u4fe1\u606f\u4e2d\u7684\u566a\u97f3\u548c\u5197\u4f59\u3002\\n\\n### \u751f\u6210\\n\\n\u751f\u6210\u7528\u6237 Query \u5bf9\u5e94\u7684\u5927\u6a21\u578b\u8f93\u51fa\u3002\\n\\n## Web Search \u5b9e\u8df5\\n\\n\u63a5\u4e0b\u6765\uff0c\u5c06\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Spring AI Alibaba \u548c\u963f\u91cc\u4e91 IQS \u670d\u52a1\u642d\u5efa\u8054\u7f51\u641c\u7d22 RAG \u7684\u5b9e\u73b0\u3002\\n\\n### \u8d44\u6e90\u51c6\u5907\\n\\nDashScope apiKey\uff1ahttps://help.aliyun.com/zh/model-studio/developer-reference/get-api-key\\n\\n\u963f\u91cc\u4e91 IQS \u670d\u52a1 apiKey\uff1ahttps://help.aliyun.com/product/2837261.html\\n\\n###  Pre-Retrieval\\n\\n> \u5c06\u7528\u6237 Query \u4f7f\u7528  qwen-plus \u5927\u6a21\u578b\u8fdb\u884c\u589e\u5f3a\u6539\u5199\u3002\\n\\nCustomContextQueryAugmenter.java\\n\\n```java\\npublic class CustomContextQueryAugmenter implements QueryAugmenter {\\n    // \u5b9a\u4e49 prompt tmpl\u3002\\n\\tprivate static final PromptTemplate DEFAULT_PROMPT_TEMPLATE = new PromptTemplate(\\n\\t\\t\\t// ......\\n\\t);\\n\\n\\tprivate static final PromptTemplate DEFAULT_EMPTY_PROMPT_TEMPLATE = new PromptTemplate(\\n\\t\\t// ...\\n    );\\n\\n\\t@NotNull\\n\\t@Override\\n\\tpublic Query augment(\\n\\t\\t\\t@Nullable Query query,\\n\\t\\t\\t@Nullable List<Document> documents\\n\\t) {\\n\\t\\t// 1. collect content from documents.\\n\\t\\tAtomicInteger idCounter = new AtomicInteger(1);\\n\\t\\tString documentContext = documents.stream()\\n\\t\\t\\t\\t.map(document -> {\\n\\t\\t\\t\\t\\tString text = document.getText();\\n\\t\\t\\t\\t\\treturn \\"[[\\" + (idCounter.getAndIncrement()) + \\"]]\\" + text;\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\t.collect(Collectors.joining(\\"\\\\n-----------------------------------------------\\\\n\\"));\\n\\n\\t\\t// 2. Define prompt parameters.\\n\\t\\tMap<String, Object> promptParameters = Map.of(\\n\\t\\t\\t\\t\\"query\\", query.text(),\\n\\t\\t\\t\\t\\"context\\", documentContext\\n\\t\\t);\\n\\n\\t\\t// 3. Augment user prompt with document context.\\n\\t\\treturn new Query(this.promptTemplate.render(promptParameters));\\n\\t}\\n\\n    // \u5f53\u4e0a\u4e0b\u6587\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de DEFAULT_EMPTY_PROMPT_TEMPLATE\\n\\tprivate Query augmentQueryWhenEmptyContext(Query query) {\\n\\n\\t\\tif (this.allowEmptyContext) {\\n\\t\\t\\tlogger.debug(\\"Empty context is allowed. Returning the original query.\\");\\n\\t\\t\\treturn query;\\n\\t\\t}\\n\\n\\t\\tlogger.debug(\\"Empty context is not allowed. Returning a specific query for empty context.\\");\\n\\t\\treturn new Query(this.emptyPromptTemplate.render());\\n\\t}\\n\\n\\tpublic static final class Builder {\\n\\t\\t// ......\\n\\t}\\n}\\n```\\n\\nQueryTransformer \u914d\u7f6e bean\uff0c\u7528\u4e8e rewrite \u7528\u6237 query\uff1a\\n\\n```java\\n@Bean\\npublic QueryTransformer queryTransformer(\\n    ChatClient.Builder chatClientBuilder,\\n    @Qualifier(\\"transformerPromptTemplate\\") PromptTemplate transformerPromptTemplate\\n) {\\n\\n    ChatClient chatClient = chatClientBuilder.defaultOptions(\\n        DashScopeChatOptions.builder()\\n        .withModel(\\"qwen-plus\\")\\n        .build()\\n    ).build();\\n\\n    return RewriteQueryTransformer.builder()\\n        .chatClientBuilder(chatClient.mutate())\\n        .promptTemplate(transformerPromptTemplate)\\n        .targetSearchSystem(\\"\u8054\u7f51\u641c\u7d22\\")\\n        .build();\\n}\\n```\\n\\nQueryExpander.java \u67e5\u8be2\u53d8\u4f53\\n\\n```java\\npublic class MultiQueryExpander implements QueryExpander {\\n\\n    private static final Logger logger = LoggerFactory.getLogger(MultiQueryExpander.class);\\n\\n    private static final PromptTemplate DEFAULT_PROMPT_TEMPLATE = new PromptTemplate(\\n\\t\\t// ...\\n    );\\n\\n    @NotNull\\n    @Override\\n    public List<Query> expand(@Nullable Query query) {\\n\\n\\t\\t// ...\\n\\n       String resp = this.chatClient.prompt()\\n             .user(user -> user.text(this.promptTemplate.getTemplate())\\n                   .param(\\"number\\", this.numberOfQueries)\\n                   .param(\\"query\\", query.text()))\\n             .call()\\n             .content();\\n\\n        // ...\\n\\n       List<String> queryVariants = Arrays.stream(resp.split(\\"\\\\n\\")).filter(StringUtils::hasText).toList();\\n\\n       if (CollectionUtils.isEmpty(queryVariants) || this.numberOfQueries != queryVariants.size()) {\\n          return List.of(query);\\n       }\\n\\n       List<Query> queries = queryVariants.stream()\\n             .filter(StringUtils::hasText)\\n             .map(queryText -> query.mutate().text(queryText).build())\\n             .collect(Collectors.toList());\\n\\n        // \u662f\u5426\u5f15\u5165\u539f\u67e5\u8be2\\n       if (this.includeOriginal) {\\n\\n          logger.debug(\\"Including original query in the expanded queries for query: {}\\", query.text());\\n          queries.add(0, query);\\n       }\\n\\n       return queries;\\n    }\\n\\n    public static final class Builder {\\n\\t\\t// ......\\n    }\\n\\n}\\n```\\n\\n### Retrieval\\n\\n>  \u4ece\u4e0d\u540c\u6570\u636e\u6e90\u67e5\u8be2\u548c\u7528\u6237 query \u76f8\u4f3c\u5ea6\u6700\u9ad8\u7684\u6570\u636e\u3002\uff08\u8fd9\u91cc\u4f7f\u7528 Web Search\uff09\\n\\nWebSearchRetriever.java\\n\\n```java\\npublic class WebSearchRetriever implements DocumentRetriever {\\n\\t\\n    // \u6ce8\u5165 IQS \u641c\u7d22\u5f15\u64ce\\n    private final IQSSearchEngine searchEngine;\\n\\n    @NotNull\\n    @Override\\n    public List<Document> retrieve(\\n          @Nullable Query query\\n    ) {\\n\\n       // \u641c\u7d22\\n       GenericSearchResult searchResp = searchEngine.search(query.text());\\n\\n       // \u6e05\u6d17\u6570\u636e\uff0c\u5c06\u6570\u636e\u8f6c\u6362\u4e3a Spring AI \u7684 Document \u5bf9\u8c61\\n       List<Document> cleanerData = dataCleaner.getData(searchResp);\\n       logger.debug(\\"cleaner data: {}\\", cleanerData);\\n\\n       // \u8fd4\u56de\u7ed3\u679c\\n       List<Document> documents = dataCleaner.limitResults(cleanerData, maxResults);\\n\\n       logger.debug(\\"WebSearchRetriever#retrieve() document size: {}, raw documents: {}\\",\\n             documents.size(),\\n             documents.stream().map(Document::getId).toArray()\\n       );\\n\\n       return enableRanker ? ranking(query, documents) : documents;\\n    }\\n\\n    private List<Document> ranking(Query query, List<Document> documents) {\\n\\n       if (documents.size() == 1) {\\n          // \u53ea\u6709\u4e00\u4e2a\u65f6\uff0c\u4e0d\u9700\u8981 rank\\n          return documents;\\n       }\\n\\n       try {\\n          List<Document> rankedDocuments = documentRanker.rank(query, documents);\\n          logger.debug(\\"WebSearchRetriever#ranking() Ranked documents: {}\\", rankedDocuments.stream().map(Document::getId).toArray());\\n          return rankedDocuments;\\n       } catch (Exception e) {\\n          // \u964d\u7ea7\u8fd4\u56de\u539f\u59cb\u7ed3\u679c\\n          logger.error(\\"ranking error\\", e);\\n          return documents;\\n       }\\n    }\\n\\n\\n    public static final class Builder {\\n\\t\\t// ...\\n    }\\n}\\n```\\n\\nDocumentJoiner.java \u5408\u5e76 Document\\n\\n```java\\npublic class ConcatenationDocumentJoiner implements DocumentJoiner {\\n\\n    @NotNull\\n    @Override\\n    public List<Document> join(\\n          @Nullable Map<Query, List<List<Document>>> documentsForQuery\\n    ) {\\n\\t\\t// ...\\n       Map<Query, List<List<Document>>> selectDocuments = selectDocuments(documentsForQuery, 10);\\n\\n       Set<String> seen = new HashSet<>();\\n\\n       return selectDocuments.values().stream()\\n             // Flatten List<List<Documents>> to Stream<List<Documents>.\\n             .flatMap(List::stream)\\n             // Flatten Stream<List<Documents> to Stream<Documents>.\\n             .flatMap(List::stream)\\n             .filter(doc -> {\\n                List<String> keys = extractKeys(doc);\\n                for (String key : keys) {\\n                   if (!seen.add(key)) {\\n                      logger.info(\\"Duplicate document metadata: {}\\",doc.getMetadata());\\n                      // Duplicate keys found.\\n                      return false;\\n                   }\\n                }\\n                // All keys are unique.\\n                return true;\\n             })\\n             .collect(Collectors.toList());\\n    }\\n\\n    private Map<Query, List<List<Document>>> selectDocuments(\\n          Map<Query, List<List<Document>>> documentsForQuery,\\n          int totalDocuments\\n    ) {\\n\\n       Map<Query, List<List<Document>>> selectDocumentsForQuery = new HashMap<>();\\n\\n       int numberOfQueries = documentsForQuery.size();\\n\\n       if (Objects.equals(0, numberOfQueries)) {\\n\\n          return selectDocumentsForQuery;\\n       }\\n\\n       int baseCount = totalDocuments / numberOfQueries;\\n       int remainder = totalDocuments % numberOfQueries;\\n\\n       // To ensure consistent distribution. sort the keys (optional)\\n       List<Query> sortedQueries = new ArrayList<>(documentsForQuery.keySet());\\n       // Other sort\\n       // sortedQueries.sort(Comparator.comparing(Query::getSomeProperty));\\n       Iterator<Query> iterator = sortedQueries.iterator();\\n\\n       for (int i = 0; i < numberOfQueries; i ++) {\\n          Query query = sortedQueries.get(i);\\n          int documentToSelect = baseCount + (i < remainder ? 1 : 0);\\n          List<List<Document>> originalDocuments = documentsForQuery.get(query);\\n          List<List<Document>> selectedNestLists = new ArrayList<>();\\n           \\n          int remainingDocuments = documentToSelect;\\n          for (List<Document> documentList : originalDocuments) {\\n             if (remainingDocuments <= 0) {\\n                break;\\n             }\\n             List<Document> selectSubList = new ArrayList<>();\\n             for (Document docs : documentList) {\\n                if (remainingDocuments <= 0) {\\n                   break;\\n                }\\n                selectSubList.add(docs);\\n                remainingDocuments --;\\n             }\\n             if (!selectSubList.isEmpty()) {\\n                selectedNestLists.add(selectSubList);\\n             }\\n          }\\n          selectDocumentsForQuery.put(query, selectedNestLists);\\n       }\\n       return selectDocumentsForQuery;\\n    }\\n\\n    private List<String> extractKeys(Document document) {\\n\\t\\t// \u63d0\u53d6 key\\n       return keys;\\n    }\\n}\\n```\\n\\n### Post-Retrieval\\n\\n> \u5904\u7406\u4ece\u8054\u7f51\u641c\u7d22\u79cd\u83b7\u5f97\u7684 Document\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u8f93\u51fa\u3002\\n\\nDashScopeDocumentRanker.java\\n\\n```java\\npublic class DashScopeDocumentRanker implements DocumentRanker {\\n\\n    // ...\\n\\n    @NotNull\\n    @Override\\n    public List<Document> rank(\\n          @Nullable Query query,\\n          @Nullable List<Document> documents\\n    ) {\\n\\t\\t// ...\\n       try {\\n          List<Document> reorderDocs = new ArrayList<>();\\n\\n          // \u7531\u8c03\u7528\u8005\u63a7\u5236\u6587\u6863\u6570\\n          DashScopeRerankOptions rerankOptions = DashScopeRerankOptions.builder()\\n                .withTopN(documents.size())\\n                .build();\\n\\n          if (Objects.nonNull(query) && StringUtils.hasText(query.text())) {\\n             // \u7ec4\u88c5\u53c2\u6570\u8c03\u7528 rankModel\\n             RerankRequest rerankRequest = new RerankRequest(\\n                   query.text(),\\n                   documents,\\n                   rerankOptions\\n             );\\n             RerankResponse rerankResp = rerankModel.call(rerankRequest);\\n\\n             rerankResp.getResults().forEach(res -> {\\n                Document outputDocs = res.getOutput();\\n\\n                // \u67e5\u627e\u5e76\u6dfb\u52a0\u5230\u65b0\u7684 list \u4e2d\\n                Optional<Document> foundDocsOptional = documents.stream()\\n                      .filter(doc ->\\n                      {\\n                         // debug rerank output.\\n                         logger.debug(\\"DashScopeDocumentRanker#rank() doc id: {}, outputDocs id: {}\\", doc.getId(), outputDocs.getId());\\n                         return Objects.equals(doc.getId(), outputDocs.getId());\\n                      })\\n                      .findFirst();\\n\\n                foundDocsOptional.ifPresent(reorderDocs::add);\\n             });\\n          }\\n\\n          return reorderDocs;\\n       }\\n       catch (Exception e) {\\n          // \u6839\u636e\u5f02\u5e38\u7c7b\u578b\u505a\u8fdb\u4e00\u6b65\u5904\u7406\\n          throw new SAAAppException(e.getMessage());\\n       }\\n    }\\n}\\n```\\n\\n### \u5927\u6a21\u578b\u8f93\u51fa\\n\\nWebSearchService.java\\n\\n```java\\n@Service\\npublic class SAAWebSearchService {\\n\\n\\t// ...\\n    \\n    private static final String DEFAULT_WEB_SEARCH_MODEL = \\"deepseek-r1\\";\\n\\n    public SAAWebSearchService(\\n          ChatClient.Builder chatClientBuilder,\\n          QueryTransformer queryTransformer,\\n          QueryExpander queryExpander,\\n          IQSSearchEngine searchEngine,\\n          DataClean dataCleaner,\\n          DocumentRanker documentRanker,\\n          @Qualifier(\\"queryArgumentPromptTemplate\\") PromptTemplate queryArgumentPromptTemplate\\n    ) {\\n\\n       this.queryTransformer = queryTransformer;\\n       this.queryExpander = queryExpander;\\n       this.queryArgumentPromptTemplate = queryArgumentPromptTemplate;\\n\\n       // \u7528\u4e8e DeepSeek-r1 \u7684 reasoning content \u6574\u5408\u5230\u8f93\u51fa\u4e2d\\n       this.reasoningContentAdvisor = new ReasoningContentAdvisor(1);\\n\\n       // \u6784\u5efa chatClient\\n       this.chatClient = chatClientBuilder\\n             .defaultOptions(\\n                   DashScopeChatOptions.builder()\\n                         .withModel(DEFAULT_WEB_SEARCH_MODEL)\\n                         // stream \u6a21\u5f0f\u4e0b\u662f\u5426\u5f00\u542f\u589e\u91cf\u8f93\u51fa\\n                         .withIncrementalOutput(true)\\n                         .build())\\n             .build();\\n\\n       // \u65e5\u5fd7\\n       this.simpleLoggerAdvisor = new SimpleLoggerAdvisor(100);\\n\\n       this.webSearchRetriever = WebSearchRetriever.builder()\\n             .searchEngine(searchEngine)\\n             .dataCleaner(dataCleaner)\\n             .maxResults(2)\\n             .enableRanker(true)\\n             .documentRanker(documentRanker)\\n             .build();\\n    }\\n\\n    // \u5904\u7406\u7528\u6237\u8f93\u5165\\n    public Flux<String> chat(String prompt) {\\n\\n       return chatClient.prompt()\\n             .advisors(\\n                   createRetrievalAugmentationAdvisor(),\\n                   // \u6574\u5408\u5230 reasoning content \u8f93\u51fa\u4e2d\\n                   reasoningContentAdvisor,\\n                   simpleLoggerAdvisor\\n             ).user(prompt)\\n             .stream()\\n             .content();\\n    }\\n\\n    // \u521b\u5efa advisor\\n    private RetrievalAugmentationAdvisor createRetrievalAugmentationAdvisor() {\\n\\n       return RetrievalAugmentationAdvisor.builder()\\n             .documentRetriever(webSearchRetriever)\\n             .queryTransformers(queryTransformer)\\n             .queryAugmenter(\\n                   new CustomContextQueryAugmenter(\\n                         queryArgumentPromptTemplate,\\n                         null,\\n                         true)\\n             ).queryExpander(queryExpander)\\n             .documentJoiner(new ConcatenationDocumentJoiner())\\n             .build();\\n    }\\n\\n}\\n```\\n\\n### \u6f14\u793a\\n\\n\u4f7f\u7528\u95ee\u9898 `\u676d\u5dde\u6709\u4ec0\u4e48\u63a8\u8350\u65c5\u6e38\u7684\u5730\u65b9\u5417` \u4e3a\u4f8b\u3002\\n\\n#### \u666e\u901a\u8f93\u51fa\\n\\n```markdown\\n### \u5fc5\u6e38\u666f\u70b9  \\n1. **\u897f\u6e56**  \\n   - **\u6838\u5fc3\u7279\u8272**\uff1a\u676d\u5dde\u7684\u6807\u5fd7\u6027\u666f\u70b9\uff0c\u5305\u542b\u201c\u897f\u6e56\u5341\u666f\u201d\uff08\u5982\u82cf\u5824\u6625\u6653\u3001\u65ad\u6865\u6b8b\u96ea\u3001\u4e09\u6f6d\u5370\u6708\u7b49\uff09\uff0c\u53ef\u6cdb\u821f\u6e56\u4e0a\u6216\u6cbf\u6e56\u9a91\u884c\u3002  \\n   - **\u63a8\u8350\u6d3b\u52a8**\uff1a\u591c\u6e38\u897f\u6e56\u706f\u5149\u79c0\u3001\u6f2b\u6b65\u767d\u5824/\u82cf\u5824\u3002  \\n\\n2. **\u7075\u9690\u5bfa\u4e0e\u98de\u6765\u5cf0**  \\n   - **\u6587\u5316\u4ef7\u503c**\uff1a\u5343\u5e74\u53e4\u5239\u7075\u9690\u5bfa\u88ab\u8a89\u4e3a\u201c\u4e1c\u5357\u4f5b\u56fd\u201d\uff0c\u98de\u6765\u5cf0\u7684\u6469\u5d16\u77f3\u523b\u4e3a\u5b8b\u4ee3\u4f5b\u6559\u827a\u672f\u7470\u5b9d\u3002  \\n\\n---\\n\\n### \u81ea\u7136\u4e0e\u751f\u6001  \\n1. **\u897f\u6eaa\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed**  \\n   - **\u4eae\u70b9**\uff1a\u56fd\u5185\u9996\u4e2a\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed\uff0c\u53ef\u4e58\u6447\u6a79\u8239\u6e38\u89c8\uff0c\u6625\u79cb\u5b63\u89c2\u82a6\u82c7\u3001\u8d4f\u6885\u82b1\u3002  \\n\\n2. **\u4e5d\u6eaa\u5341\u516b\u6da7**  \\n   - **\u7279\u8272**\uff1a\u8336\u56ed\u3001\u6eaa\u6d41\u3001\u53e4\u6811\u6784\u6210\u7684\u5f92\u6b65\u8def\u7ebf\uff0c\u9002\u5408\u590f\u5b63\u907f\u6691\u3002  \\n\\n---\\n\\n### \u6587\u5316\u4f53\u9a8c  \\n1. **\u5b8b\u57ce\u666f\u533a**  \\n   - **\u5fc5\u770b\u6f14\u51fa**\uff1a\u300a\u5b8b\u57ce\u5343\u53e4\u60c5\u300b\u901a\u8fc7\u6b4c\u821e\u6f14\u7ece\u676d\u5dde\u5386\u53f2\uff0c\u6c89\u6d78\u5f0f\u4f53\u9a8c\u5357\u5b8b\u6587\u5316\u3002  \\n\\n2. **\u4e2d\u56fd\u8336\u53f6\u535a\u7269\u9986\uff08\u9f99\u4e95\u9986\uff09**  \\n   - **\u4f53\u9a8c**\uff1a\u4e86\u89e3\u9f99\u4e95\u8336\u6587\u5316\uff0c\u53c2\u4e0e\u91c7\u8336\u3001\u5236\u8336\u6d3b\u52a8\uff0c\u54c1\u9274\u6b63\u5b97\u897f\u6e56\u9f99\u4e95\u3002  \\n\\n---\\n\\n### \u7f8e\u98df\u8857\u533a  \\n1. **\u6cb3\u574a\u8857**  \\n   - **\u63a8\u8350\u5c0f\u5403**\uff1a\u8471\u5305\u6867\u3001\u5b9a\u80dc\u7cd5\u3001\u897f\u6e56\u918b\u9c7c\u3001\u4e1c\u5761\u8089\u3002  \\n\\n2. **\u6b66\u6797\u591c\u5e02**  \\n   - **\u7279\u8272**\uff1a\u672c\u5730\u4eba\u5e38\u53bb\u7684\u591c\u5bb5\u805a\u96c6\u5730\uff0c\u6c47\u805a\u6d59\u6c5f\u98ce\u5473\u4e0e\u7f51\u7ea2\u7f8e\u98df\u3002  \\n\\n---\\n\\n### \u6e29\u99a8\u63d0\u793a  \\n- **\u6700\u4f73\u5b63\u8282**\uff1a\u6625\u5b63\uff083-5\u6708\uff09\u8d4f\u6843\u67f3\uff0c\u79cb\u5b63\uff089-11\u6708\uff09\u89c2\u6842\u82b1\u3002  \\n- **\u4ea4\u901a\u5efa\u8bae**\uff1a\u897f\u6e56\u5468\u8fb9\u666f\u70b9\u96c6\u4e2d\uff0c\u5efa\u8bae\u9a91\u884c\u6216\u6b65\u884c\uff1b\u5730\u94c11\u53f7\u7ebf\u8986\u76d6\u4e3b\u57ce\u533a\u3002  \\n\\n\u5982\u9700\u66f4\u8be6\u7ec6\u7684\u884c\u7a0b\u89c4\u5212\uff0c\u53ef\u8865\u5145\u5177\u4f53\u9700\u6c42\uff08\u5982\u4eb2\u5b50\u6e38\u3001\u6444\u5f71\u4e3b\u9898\u7b49\uff09\u3002\\n```\\n\\n#### \u8054\u7f51\u641c\u7d22\u8f93\u51fa\\n\\n```markdown\\n### \u676d\u5dde\u65c5\u6e38\u63a8\u8350\\n\\n#### 1. \u897f\u6e56\u98ce\u666f\u533a  \\n\u676d\u5dde\u7684\u6838\u5fc3\u666f\u70b9\uff0c\u5305\u542b\u65ad\u6865\u6b8b\u96ea\u3001\u82cf\u5824\u6625\u6653\u7b49\u7ecf\u5178\u666f\u89c2\uff0c\u56db\u5b63\u666f\u8272\u5404\u5f02\uff0c\u9002\u5408\u6f2b\u6b65\u6216\u4e58\u8239\u6e38\u89c8\u3002\u6e05\u6668\u548c\u508d\u665a\u7684\u5149\u7ebf\u6700\u4f73\uff0c\u6e56\u5149\u5c71\u8272\u4e0e\u4eba\u6587\u9057\u8ff9\u4ea4\u878d\uff0c\u662f\u6444\u5f71\u548c\u4f11\u95f2\u7684\u9996\u9009 [2][3][6]\u3002  \\n\\n#### 2. \u7075\u9690\u5bfa  \\n\u5343\u5e74\u53e4\u5239\u9690\u4e8e\u5c71\u6797\uff0c\u53e4\u6728\u53c2\u5929\uff0c\u4f5b\u6559\u6c1b\u56f4\u6d53\u539a\u3002\u5bfa\u5185\u7d20\u658b\u4f53\u9a8c\u548c\u7948\u798f\u6d3b\u52a8\u503c\u5f97\u5c1d\u8bd5\uff0c\u9002\u5408\u5bfb\u6c42\u5b81\u9759\u7684\u6e38\u5ba2 [2][5][6]\u3002  \\n\\n#### 3. \u897f\u6eaa\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed  \\n\u57ce\u5e02\u5185\u7684\u751f\u6001\u7eff\u80ba\uff0c\u6cb3\u9053\u7eb5\u6a2a\uff0c\u53ef\u4e58\u8239\u89c2\u8d4f\u6e7f\u5730\u98ce\u5149\uff0c\u5076\u9047\u767d\u9e6d\u7b49\u6c34\u9e1f\u3002\u6625\u5b63\u8e0f\u9752\u3001\u79cb\u5b63\u8d4f\u82a6\u7684\u7edd\u4f73\u5730 [2][3][6]\u3002  \\n\\n#### 4. \u5929\u7afa\u4e09\u5bfa  \\n\u4f4d\u4e8e\u897f\u6e56\u533a\u7075\u9690\u5bfa\u9644\u8fd1\uff0c\u7531\u4e09\u5ea7\u5386\u53f2\u60a0\u4e45\u7684\u5bfa\u5e99\u7ec4\u6210\uff0c\u5efa\u7b51\u98ce\u683c\u72ec\u7279\uff0c\u73af\u5883\u6e05\u5e7d\uff0c\u9002\u5408\u6587\u5316\u63a2\u8bbf\u548c\u79cb\u65e5\u6e38\u89c8 [1]\u3002  \\n\\n#### 5. \u676d\u5dde\u5b8b\u57ce  \\n\u4ee5\u5b8b\u4ee3\u98ce\u8c8c\u4e3a\u4e3b\u9898\u7684\u666f\u533a\uff0c\u53ef\u6362\u53e4\u88c5\u6c89\u6d78\u5f0f\u4f53\u9a8c\u5e02\u4e95\u751f\u6d3b\uff0c\u5927\u578b\u6f14\u51fa\u300a\u5b8b\u57ce\u5343\u53e4\u60c5\u300b\u878d\u5408\u5386\u53f2\u4e0e\u827a\u672f\uff0c\u89c6\u89c9\u9707\u64bc [2][5]\u3002  \\n\\n#### 6. \u6cb3\u574a\u8857  \\n\u53e4\u8272\u53e4\u9999\u7684\u5546\u4e1a\u8857\uff0c\u805a\u96c6\u4f20\u7edf\u5c0f\u5403\u3001\u624b\u5de5\u827a\u54c1\u5e97\uff0c\u53ef\u54c1\u5c1d\u8471\u5305\u6867\u3001\u5b9a\u80dc\u7cd5\u7b49\u7f8e\u98df\uff0c\u9002\u5408\u62cd\u6444\u4eba\u6587\u9898\u6750\u7167\u7247 [2][3][5]\u3002  \\n\\n#### 7. \u5343\u5c9b\u6e56\u98ce\u666f\u533a  \\n\u4ee51078\u5ea7\u5c9b\u5c7f\u95fb\u540d\uff0c\u6885\u5cf0\u5c9b\u89c2\u666f\u53f0\u53ef\u4fef\u77b0\u5168\u666f\uff0c\u6e56\u5149\u5c71\u8272\u5982\u753b\u5377\u3002\u9002\u5408\u81ea\u9a7e\u6e38\u548c\u5c71\u6c34\u6444\u5f71 [3][6]\u3002  \\n\\n#### 8. \u8305\u5bb6\u57e0\u666f\u533a  \\n\u897f\u6e56\u8fb9\u7684\u9690\u9038\u4e4b\u5730\uff0c\u6625\u5b63\u6a31\u82b1\u4e0e\u6e56\u67f3\u76f8\u6620\uff0c\u79cb\u5b63\u82a6\u82c7\u6447\u66f3\uff0c\u4eba\u5c11\u666f\u7f8e\uff0c\u9002\u5408\u5f92\u6b65\u548c\u81ea\u7136\u6444\u5f71 [1][3]\u3002  \\n\\n#### 9. \u4e5d\u6eaa\u70df\u6811\uff08\u4e5d\u6eaa\u5341\u516b\u6da7\uff09  \\n\u5c71\u6da7\u3001\u8336\u56ed\u4e0e\u67ab\u53f6\u4ea4\u7ec7\u7684\u5f92\u6b65\u8def\u7ebf\uff0c\u79cb\u5b63\u7ea2\u53f6\u4f3c\u706b\uff0c\u6eaa\u6c34\u6f7a\u6f7a\uff0c\u5145\u6ee1\u8bd7\u610f [2][6]\u3002  \\n\\n#### 10. \u592a\u5b50\u6e7e\u516c\u56ed  \\n\u6625\u5b63\u90c1\u91d1\u9999\u3001\u6a31\u82b1\u76db\u5f00\uff0c\u8272\u5f69\u6591\u6593\uff0c\u662f\u70ed\u95e8\u6253\u5361\u5730\u3002\u9002\u5408\u5bb6\u5ead\u6e38\u548c\u82b1\u5349\u6444\u5f71 [2][3]\u3002  \\n\\n---\\n\\n**\u5176\u4ed6\u63a8\u8350**  \\n- **\u6d59\u897f\u5927\u9f99\u6e7e**\uff1a\u81ea\u7136\u5ce1\u8c37\u4e0e\u7011\u5e03\u7fa4\uff0c\u590f\u5b63\u6f02\u6d41\u9879\u76ee\u523a\u6fc0 [1]\u3002  \\n- **\u4e2d\u56fd\u5370\u5b66\u535a\u7269\u9986**\uff1a\u5c55\u793a\u5370\u7ae0\u6587\u5316\u4e0e\u5386\u53f2\uff0c\u9002\u5408\u6587\u5316\u7231\u597d\u8005 [1]\u3002  \\n- **\u5858\u6816\u53e4\u9547**\uff1a\u8fd0\u6cb3\u7554\u7684\u6c5f\u5357\u6c34\u4e61\uff0c\u4fdd\u7559\u660e\u6e05\u5efa\u7b51\u4e0e\u6c11\u4fd7\u98ce\u60c5 [3][6]\u3002  \\n\\n**\u65c5\u884c\u63d0\u793a**  \\n- \u897f\u6e56\u3001\u7075\u9690\u5bfa\u7b49\u70ed\u95e8\u666f\u70b9\u5efa\u8bae\u63d0\u524d\u9884\u7ea6\u95e8\u7968 [5]\u3002  \\n- \u6625\u5b63\u591a\u96e8\uff0c\u9700\u643a\u5e26\u96e8\u5177\uff1b\u79cb\u5b63\u9002\u5408\u6237\u5916\u6d3b\u52a8 [2][5]\u3002  \\n\\n\uff08\u53c2\u8003\u6587\u6863\uff1a[1][2][3][5][6]\uff09\\n```\\n\\n## \u53c2\u8003\u6587\u6863\\n\\n1. Spring AI RAG\uff1ahttps://docs.spring.io/spring-ai/reference/api/retrieval-augmented-generation.html\\n2. \u963f\u91cc\u4e91 IQS\uff1ahttps://help.aliyun.com/product/2837261.html"},{"id":"spring-boot-extension-interface.md","metadata":{"permalink":"/blog/spring-boot-extension-interface.md","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/java-and-go/spring-boot-extension-interface.md","source":"@site/blog/java-and-go/spring-boot-extension-interface.md","title":"\u4f18\u96c5\u4ee3\u7801\u5b9e\u73b0\uff1aSpring Boot \u7684 7 \u4e2a\u6269\u5c55\u63a5\u53e3","description":"\u5728\u4f7f\u7528 Spring Boot \u6784\u5efa Web \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5728 web \u5bb9\u5668\u7684\u4e0d\u540c\u751f\u547d\u65f6\u671f\uff0c\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u903b\u8f91\u3002Spring Boot \u6846\u67b6\u63d0\u4f9b\u4e86\u8bb8\u591a\u6269\u5c55\u70b9\uff0c\u80fd\u591f\u8ba9\u5f00\u53d1\u8005\u4f18\u96c5\u5730\u5b9a\u5236\u548c\u589e\u5f3a\u5e94\u7528\u3002\u8fd9\u4e9b\u6269\u5c55\u63a5\u53e3\u4e0d\u4ec5\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u5e38\u89c1\u95ee\u9898\uff0c\u8fd8\u80fd\u8ba9\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\u3001\u7075\u6d3b\u3002","date":"2025-03-10T22:20:00.000Z","tags":[{"inline":true,"label":"Spring Boot","permalink":"/blog/tags/spring-boot"}],"readingTime":4.66,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-boot-extension-interface.md","title":"\u4f18\u96c5\u4ee3\u7801\u5b9e\u73b0\uff1aSpring Boot \u7684 7 \u4e2a\u6269\u5c55\u63a5\u53e3","date":"2025-03-10T22:20:00.000Z","authors":"yuluo","tags":["Spring Boot"],"keywords":["Spring Boot Extension"]},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","permalink":"/blog/spring-cloud-alibaba-module-rag"},"nextItem":{"title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","permalink":"/blog/use-spring-ai-and-ollama-build-rag-app"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u5728\u4f7f\u7528 Spring Boot \u6784\u5efa Web \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5728 web \u5bb9\u5668\u7684\u4e0d\u540c\u751f\u547d\u65f6\u671f\uff0c\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u903b\u8f91\u3002Spring Boot \u6846\u67b6\u63d0\u4f9b\u4e86\u8bb8\u591a\u6269\u5c55\u70b9\uff0c\u80fd\u591f\u8ba9\u5f00\u53d1\u8005\u4f18\u96c5\u5730\u5b9a\u5236\u548c\u589e\u5f3a\u5e94\u7528\u3002\u8fd9\u4e9b\u6269\u5c55\u63a5\u53e3\u4e0d\u4ec5\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u5e38\u89c1\u95ee\u9898\uff0c\u8fd8\u80fd\u8ba9\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\u3001\u7075\u6d3b\u3002\\n\\n## 1. ApplicationRunner\uff1a\u542f\u52a8\u4efb\u52a1\u4f18\u96c5\u6267\u884c\\n\\n\u5f53 Spring Boot \u5e94\u7528\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u6709\u65f6\u9700\u8981\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u4efb\u52a1\u3002\u4f8b\u5982 Spring AI Alibaba \u4e2d\u7684\u5411\u91cf\u6570\u636e\u521d\u59cb\u5316\uff0c\u4e34\u65f6\u76ee\u5f55\u6587\u4ef6\u521b\u5efa\u7b49\u3002\u5728 Spring Boot \u6846\u67b6\u4e2d\u63d0\u4f9b\u4e86 ApplicationRunner \u63a5\u53e3\u4ee5\u4f18\u96c5\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\\n\\n> \u4f8b\u5982\u5728\u5982\u4e0b\u4ee3\u7801\u4e2d\uff0c\u5b8c\u6210\u4e24\u4e2a\u4e34\u65f6\u76ee\u5f55\u7684\u521b\u5efa\uff0c\u5e76\u5728 web \u5bb9\u5668\u505c\u6b62\u65f6\uff0c\u4f7f\u7528 `@PreDestroy` \u5220\u9664\u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u3002\\n\\n```java\\n@Component\\npublic class TmpFolderConfig implements ApplicationRunner {\\n\\n\\tprivate static final String ImageTmpFolder = \\"tmp/image\\";\\n\\n\\tprivate static final String AudioTmpFolder = \\"tmp/audio\\";\\n\\n\\t@Override\\n\\tpublic void run(ApplicationArguments args) throws Exception {\\n\\n\\t\\tlogger.info(\\"Init tmp folder\\");\\n\\n\\t\\tFilesUtils.initTmpFolder(System.getProperty(\\"user.dir\\") + \\"/\\" + ImageTmpFolder);\\n\\t\\tFilesUtils.initTmpFolder(System.getProperty(\\"user.dir\\") + \\"/\\" +AudioTmpFolder);\\n\\n\\t\\tlogger.info(\\"Init tmp folder\\");\\n\\t}\\n\\n\\t@PreDestroy\\n\\tpublic void destroy() {\\n\\n\\t\\tFilesUtils.deleteDirectory(new File(System.getProperty(\\"user.dir\\") + \\"/\\" +ImageTmpFolder));\\n\\t\\tFilesUtils.deleteDirectory(new File(System.getProperty(\\"user.dir\\") + \\"/\\" +AudioTmpFolder));\\n\\t\\tFilesUtils.deleteDirectory(new File(System.getProperty(\\"user.dir\\") + \\"/\\" +\\"tmp\\"));\\n\\n\\t\\tlogger.info(\\"Delete tmp folder\\");\\n\\t}\\n\\n}\\n```\\n\\n## 2. CommandLineRunner\uff1a\u547d\u4ee4\u884c\u4efb\u52a1\u6267\u884c\u5229\u5668\\n\\n\u548c ApplicationRunner \u7c7b\u4f3c\uff0cCommandLineRunner \u4e5f\u7528\u4e8e\u5e94\u7528\u542f\u52a8\u540e\u6267\u884c\u521d\u59cb\u5316\u4efb\u52a1\uff0c\u4f46\u5b83\u76f4\u63a5\u63a5\u6536\u542f\u52a8\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\\n\\n```java\\n@Component\\n@Order(1)\xa0// \u6307\u5b9a\u6267\u884c\u987a\u5e8f\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\\npublic class SpringBootRuntime implements CommandLineRunner {\\n\\n\\t@Override\\n\\tpublic void run(String... args) throws Exception {\\n\\n\\t\\tboolean flag = Arrays.asList(args).contains(\\"flag\\");\\n\\t\\tif (flag) {\\n\\t\\t\\tSystem.out.println(\\"flag is true. to do something\\");\\n\\t\\t} else {\\n\\t\\t\\tSystem.out.println(\\"flag is false...\\");\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\n## 3. ApplicationContextInitializer\uff1a\u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u597d\u5e2e\u624b\\n\\nApplicationContextInitializer \u53ef\u4ee5\u5728 Spring \u5e94\u7528\u4e0a\u4e0b\u6587\u5237\u65b0\u4e4b\u524d\u6267\u884c\u4e00\u4e9b\u5b9a\u5236\u5316\u64cd\u4f5c\uff0c\u7279\u522b\u9002\u5408\u8fdb\u884c\u73af\u5883\u76f8\u5173\u7684\u914d\u7f6e\u4fee\u6539\u3002\\n\\n```java\\npublic class SpringBootRuntime implements ApplicationContextInitializer<ConfigurableApplicationContext> {\\n\\n\\t@Override\\n\\tpublic void initialize(ConfigurableApplicationContext applicationContext) {\\n\\n\\t\\t// \u5728 Spring \u4e0a\u4e0b\u6587\u5237\u65b0\u524d\u6267\u884c\\n\\t\\t// \u53ef\u4ee5\u4fee\u6539\u6216\u589e\u5f3a Spring \u4e0a\u4e0b\u6587\u7684\u914d\u7f6e\\n\\t\\tConfigurableEnvironment environment = applicationContext.getEnvironment();\\n\\n\\t\\t// \u4f8b\u5982\uff0c\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\u6e90\\n\\t\\tenvironment.getPropertySources().addFirst(\\n\\t\\t\\t\\tnew MapPropertySource(\\n\\t\\t\\t\\t\\t\\t\\"CustomProperties\\",\\n\\t\\t\\t\\t\\t\\tCollections.singletonMap(\\"indi.yuluo.app.data.init.enabled\\", \\"true\\")\\n\\t\\t\\t\\t)\\n\\t\\t);\\n\\n\\t\\tSystem.out.println(\\"\u5e94\u7528\u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u5668\u6dfb\u52a0\u4e86\u81ea\u5b9a\u4e49\u5c5e\u6027\u6e90\\");\\n\\t}\\n}\\n```\\n\\n\u4e4b\u540e\u901a\u8fc7 `META-INF/spring.factories` \u4e2d\u6ce8\u518c\u6216\u8005\u5728\u5e94\u7528\u542f\u52a8\u65f6\u6ce8\u518c\uff1a\\n\\n1. \u5728 spring.factories \u4e2d\u6ce8\u518c\\t\\n\\n   ```java\\n   org.springframework.context.ApplicationContextInitializer=\\\\\\n   com.example.SpringBootRuntime\\n   ```\\n\\n2. \u5728\u5e94\u7528\u542f\u52a8\u65f6\u6ce8\u518c\\n\\n   ```java\\n   @SpringBootApplication\\n   public class Main {\\n   \\tpublic static void main(String[] args) {\\n   \\n   \\t\\tSpringApplication app = new SpringApplication(Main.class);\\n   \\n   \\t\\t// \u624b\u52a8\u6dfb\u52a0 ApplicationContextInitializer\\n   \\t\\tapp.addInitializers((ApplicationContextInitializer<ConfigurableApplicationContext>) applicationContext -> {\\n   \\t\\t\\tnew SpringBootRuntime().initialize(applicationContext);\\n   \\t\\t});\\n   \\n   \\t\\tapp.run(args);\\n   \\t}\\n   }\\n   ```\\n\\n3. \u542f\u52a8\u65f6\u8f93\u51fa\\n\\n   ```text\\n    :: Spring Boot ::                (v3.2.3)\\n   \\n   \u5e94\u7528\u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u5668\u6dfb\u52a0\u4e86\u81ea\u5b9a\u4e49\u5c5e\u6027\u6e90\\n   2025-03-10T21:52:44.799+08:00  INFO 11596 --- [           main] indi.yuluo.Main  \\n   ```\\n\\n## 4. BeanPostProcessor\uff1aBean\u5bf9\u8c61\u589e\u5f3a\u5904\u7406\u5668\\n\\nBeanPostProcessor \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728 Bean \u521d\u59cb\u5316\u524d\u540e\u5bf9 Bean \u8fdb\u884c\u4fee\u6539\u6216\u589e\u5f3a\uff0c\u662f\u9762\u5411\u5207\u9762\u7f16\u7a0b\u7684\u91cd\u8981\u5de5\u5177\u3002\u5728\u4e00\u4e9b\u6846\u67b6\u4e2d\u5f88\u5e38\u89c1\uff0c\u4e0d\u5982 spring cloud alibaba \u4e2d\\n\\n```java\\npublic class NacosAnnotationProcessor implements BeanPostProcessor, PriorityOrdered, ApplicationContextAware \\n{\\n    // ......\\n}\\n```\\n\\n## 5. EnvironmentPostProcessor\uff1a\u73af\u5883\u914d\u7f6e\u540e\u5904\u7406\u5668\\n\\n`EnvironmentPostProcessor` \u662f Spring Framework \u4e2d\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u5728 Spring \u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u7684\u73af\u5883\uff08`Environment`\uff09\u51c6\u5907\u597d\u4e4b\u540e\u4f46\u5728\u4e0a\u4e0b\u6587\u5237\u65b0\u4e4b\u524d\u8fdb\u884c\u81ea\u5b9a\u4e49\u5904\u7406\u3002\u4e3b\u8981\u7528\u4e8e\u5728 Spring Boot \u5e94\u7528\u7684\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5bf9\u73af\u5883\u8fdb\u884c\u4fee\u6539\u548c\u589e\u5f3a\u3002\\n\\n\u76f8\u6bd4\u4e8e**ApplicationContextInitializer** \uff0c**EnvironmentPostProcessor** \u66f4\u52a0\u4e13\u6ce8\u4e8e `Environment` \u7684\u5904\u7406\uff0c\u9002\u7528\u4e8e\u914d\u7f6e\u548c\u5c5e\u6027\u7ba1\u7406\u3002\\n\\n```java\\npublic\xa0class\xa0PropertyFileEnvironmentPostProcessor\xa0implements\xa0EnvironmentPostProcessor\xa0{\\n\xa0 \xa0\xa0\\n\xa0 \xa0\xa0private\xa0final\xa0YamlPropertySourceLoader loader =\xa0new\xa0YamlPropertySourceLoader();\\n\xa0 \xa0\xa0\\n\xa0 \xa0\xa0@Override\\n\xa0 \xa0\xa0public\xa0void\xa0postProcessEnvironment(ConfigurableEnvironment environment, SpringApplication application)\xa0{\\n\xa0 \xa0 \xa0 \xa0\xa0// \u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u5904\u7406\u903b\u8f91\\n\xa0 \xa0 \xa0 \xa0\xa0// \u4f8b\u5982\uff0c\u6839\u636e\u73af\u5883\u52a0\u8f7d\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\\n\xa0 \xa0 \xa0 \xa0 String env = environment.getProperty(\\"spring.profiles.active\\",\xa0\\"default\\");\\n\xa0 \xa0 \xa0 \xa0 Resource resource =\xa0new\xa0ClassPathResource(String.format(\\"config/%s-config.yml\\", env));\\n\xa0 \xa0 \xa0 \xa0\xa0\\n\xa0 \xa0 \xa0 \xa0\xa0try\xa0{\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0// \u52a0\u8f7d\u7279\u5b9a\u73af\u5883\u7684\u914d\u7f6e\u6587\u4ef6\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 PropertySource<?> propertySource =\xa0this.loader\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 .load(\\"environmentSpecificConfig\\", resource)\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 .get(0);\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 environment.getPropertySources().addLast(propertySource);\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 log.info(\\"\u5df2\u52a0\u8f7d\u73af\u5883\u7279\u5b9a\u914d\u7f6e\uff1a{}\\", resource.getFilename());\\n\xa0 \xa0 \xa0 \xa0 }\xa0catch\xa0(IOException e) {\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 log.warn(\\"\u65e0\u6cd5\u52a0\u8f7d\u73af\u5883\u7279\u5b9a\u914d\u7f6e\u6587\u4ef6\\", e);\\n\xa0 \xa0 \xa0 \xa0 }\\n\xa0 \xa0 }\\n}\\n```\\n\\n\u901a\u8fc7\u5728 `META-INF/spring.factories`\u6ce8\u518c\u8fdb\u884c\u4f7f\u7528\uff1a\\n\\n```text\\norg.springframework.boot.env.EnvironmentPostProcessor=\\\\\\ncom.example.PropertyFileEnvironmentPostProcessor\\n```\\n\\n## 6. ApplicationListener\uff1a\u5e94\u7528\u4e8b\u4ef6\u76d1\u542c\u5668\\n\\n`ApplicationListener` \u662f Spring Framework \u4e2d\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u76d1\u542c Spring \u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e8b\u4ef6\u3002\u901a\u8fc7\u5b9e\u73b0 `ApplicationListener` \u63a5\u53e3\uff0c\u4f60\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406\u5404\u79cd\u4e8b\u4ef6\uff0c\u4f8b\u5982\u4e0a\u4e0b\u6587\u5237\u65b0\u3001\u5e94\u7528\u542f\u52a8\u3001Bean \u6ce8\u518c\u7b49\u3002\\n\\n```java\\n@Component\\npublic\xa0class\xa0ApplicationStartupListener\xa0implements\xa0ApplicationListener<ApplicationStartedEvent>\xa0{\\n\xa0 \xa0\xa0\\n\xa0 \xa0\xa0@Override\\n\xa0 \xa0\xa0public\xa0void\xa0onApplicationEvent(ApplicationStartedEvent event)\xa0{\\n\xa0 \xa0 \xa0 \xa0\xa0// \u54cd\u5e94\u5e94\u7528\u542f\u52a8\u4e8b\u4ef6\\n\xa0 \xa0 \xa0 \xa0\xa0// ApplicationStartedEvent\u5728\u5e94\u7528\u4e0a\u4e0b\u6587\u5237\u65b0\u540e\u3001CommandLineRunner\u6267\u884c\u524d\u89e6\u53d1\\n\xa0 \xa0 \xa0 \xa0\xa0long\xa0startupTime = event.getTimestamp();\\n\xa0 \xa0 \xa0 \xa0\xa0long\xa0uptime = System.currentTimeMillis() - startupTime;\\n\xa0 \xa0 \xa0 \xa0 log.info(\\"\u5e94\u7528\u542f\u52a8\u5b8c\u6210\uff0c\u82b1\u8d39\u65f6\u95f4: {}ms\\", uptime);\\n\xa0 \xa0 \xa0 \xa0\xa0\\n\xa0 \xa0 \xa0 \xa0\xa0// \u53ef\u4ee5\u5728\u8fd9\u91cc\u6267\u884c\u5176\u4ed6\u9700\u8981\u5e94\u7528\u5b8c\u5168\u542f\u52a8\u540e\u7684\u903b\u8f91\\n\xa0 \xa0 \xa0 \xa0\xa0// \u5982\u521d\u59cb\u5316\u7f13\u5b58\u3001\u5efa\u7acb\u76d1\u63a7\u7b49\\n\xa0 \xa0 }\\n}\\n```\\n\\n## 7. BeanFactoryPostProcessor\uff1aBean \u4fee\u6539\u5668\\n\\n`BeanFactoryPostProcessor` \u662f Spring Framework \u4e2d\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u5728 Spring \u5bb9\u5668\u7684 `BeanFactory` \u6807\u51c6\u521d\u59cb\u5316\u4e4b\u540e\u3001Bean \u5b9e\u4f8b\u5316\u4e4b\u524d\u5bf9 Bean \u5b9a\u4e49\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u4e2a\u63a5\u53e3\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u81ea\u5b9a\u4e49\u548c\u4fee\u6539 Bean \u7684\u5b9a\u4e49\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6269\u5c55\u80fd\u529b\u3002\\n\\n```java\\n@Component\\npublic class CustomBeanFactoryPostProcessor implements BeanFactoryPostProcessor {\\n\\n    @Override\\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\\n        // \u4fee\u6539\u7279\u5b9a Bean \u7684\u5c5e\u6027\\n        BeanDefinition beanDefinition = beanFactory.getBeanDefinition(\\"myBean\\");\\n        beanDefinition.getPropertyValues().add(\\"propertyName\\", \\"newValue\\");\\n        System.out.println(\\"BeanFactoryPostProcessor \u5df2\u6267\u884c\uff0c\u4fee\u6539\u4e86 Bean \u7684\u5c5e\u6027\\");\\n    }\\n}\\n\\n// bean \u5b9a\u4e49\u5982\u4e0b\uff1a\\n\\n@Component\\npublic class MyBean {\\n    private String propertyName;\\n\\n    public void setPropertyName(String propertyName) {\\n        this.propertyName = propertyName;\\n    }\\n\\n    public String getPropertyName() {\\n        return propertyName;\\n    }\\n}\\n\\n// \u4e4b\u540e\u53ef\u4ee5\u5728 spring \u5bb9\u5668\u7684\u4efb\u4f55\u5730\u65b9\u4f7f\u7528 bean\\n@Component\\npublic class MyCommandLineRunner implements CommandLineRunner {\\n\\n    @Autowired\\n    private MyBean myBean;\\n\\n    @Override\\n    public void run(String... args) {\\n        System.out.println(\\"\u4fee\u6539\u540e\u7684\u5c5e\u6027\u503c: \\" + myBean.getPropertyName());\\n    }\\n}\\n```"},{"id":"use-spring-ai-and-ollama-build-rag-app","metadata":{"permalink":"/blog/use-spring-ai-and-ollama-build-rag-app","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/use-spring-ai-and-ollama-build-rag-app.md","source":"@site/blog/AI-large-models/use-spring-ai-and-ollama-build-rag-app.md","title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","description":"\u4f7f\u7528 Ollama + Spring AI \u642d\u5efa RAG \u5e94\u7528","date":"2025-02-23T18:35:06.000Z","tags":[{"inline":true,"label":"DeepSeel","permalink":"/blog/tags/deep-seel"},{"inline":true,"label":"Ollama","permalink":"/blog/tags/ollama"},{"inline":true,"label":"Spring AI","permalink":"/blog/tags/spring-ai"},{"inline":true,"label":"RAG","permalink":"/blog/tags/rag"}],"readingTime":3.4366666666666665,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"use-spring-ai-and-ollama-build-rag-app","title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","date":"2025-02-23T18:35:06.000Z","authors":"yuluo","tags":["DeepSeel","Ollama","Spring AI","RAG"],"keywords":["DeepSeel","Ollama","Spring AI","RAG"]},"unlisted":false,"prevItem":{"title":"\u4f18\u96c5\u4ee3\u7801\u5b9e\u73b0\uff1aSpring Boot \u7684 7 \u4e2a\u6269\u5c55\u63a5\u53e3","permalink":"/blog/spring-boot-extension-interface.md"},"nextItem":{"title":"\u4f7f\u7528 Ollama \u90e8\u7f72 DeepSeek \u5e76\u4f7f\u7528 Spring AI Alibaba \u8c03\u7528","permalink":"/blog/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u4f7f\u7528 Ollama + Spring AI \u642d\u5efa RAG \u5e94\u7528\\n\\n\u4ee3\u7801\u5730\u5740\uff1ahttps://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/ollama-rag\\n\\n\u6a21\u578b\uff1a\\n1. Embedding \u6a21\u578b\uff1anomic-embed-text:latest\\n2. Dashscope \u6a21\u578b\uff1adeepseek-r1\\n3. Ollama Chat \u6a21\u578b\uff1adeepseek-r1:8b\\n\\nOllama \u548c\u6a21\u578b\u4e0b\u8f7d\uff1ahttps://yuluo-yx.github.io/blog/windows-deploy-ollama3-install-llama3/\\nDocker \u90e8\u7f72 ES\uff1ahttps://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/docker-compose/es\\n\\n## \u4f7f\u7528 Spring AI\\n\\n\u6838\u5fc3\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\\n\\n### ApplicationInit\\n\\n\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u505a\u7684\u4e8b\u60c5\u662f\uff1a\\n\\n1. \u4ece `resources/data` \u76ee\u5f55\u52a0\u8f7d pdf \u6587\u4ef6\uff0c\u8f6c\u4e3a Resource \u8d44\u6e90\u5bf9\u8c61\uff1b\\n2. \u5c06 Resource \u8d44\u6e90\u5bf9\u8c61\u8f6c\u5316\u4e3a Spring AI \u7684 Document \u5bf9\u8c61\uff1b\\n3. \u8c03\u7528 Ollama \u7684 embedding \u6a21\u578b\uff0c\u8f6c\u4e3a\u5411\u91cf\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\u3002\\n\\n```java\\n@Component\\npublic class ApplicationInit implements ApplicationRunner {\\n\\n\\tprivate final Logger logger = LoggerFactory.getLogger(ApplicationInit.class);\\n\\n\\tprivate final ResourceLoader resourceLoader;\\n\\n\\tprivate final VectorStore vectorStore;\\n\\n\\tprivate final ElasticsearchClient elasticsearchClient;\\n\\n\\tprivate final ElasticsearchVectorStoreProperties options;\\n\\n\\tprivate static final String textField = \\"content\\";\\n\\n\\tprivate static final String vectorField = \\"embedding\\";\\n\\n\\tpublic ApplicationInit(\\n\\t\\t\\tResourceLoader resourceLoader,\\n\\t\\t\\tVectorStore vectorStore,\\n\\t\\t\\tElasticsearchClient elasticsearchClient,\\n\\t\\t\\tElasticsearchVectorStoreProperties options\\n\\t) {\\n\\n\\t\\tthis.resourceLoader = resourceLoader;\\n\\t\\tthis.vectorStore = vectorStore;\\n\\t\\tthis.elasticsearchClient = elasticsearchClient;\\n\\t\\tthis.options = options;\\n\\t}\\n\\n\\t@Override\\n\\tpublic void run(ApplicationArguments args) {\\n\\n\\t\\t// 1. load pdf resources.\\n\\t\\tList<Resource> pdfResources = loadPdfResources();\\n\\n\\t\\t// 2. parse pdf resources to Documents.\\n\\t\\tList<Document> documents = parsePdfResource(pdfResources);\\n\\n\\t\\t// 3. import to ES.\\n\\t\\timportToES(documents);\\n\\n\\t\\tlogger.info(\\"RAG application init finished\\");\\n\\t}\\n\\n\\tprivate List<Resource> loadPdfResources() {\\n\\n\\t\\tList<Resource> pdfResources = new ArrayList<>();\\n\\n\\t\\ttry {\\n\\n\\t\\t\\tlogger.info(\\"\u52a0\u8f7d PDF \u8d44\u6e90=================================\\");\\n\\n\\t\\t\\tResourcePatternResolver resolver = (ResourcePatternResolver) resourceLoader;\\n\\t\\t\\tResource[] resources = resolver.getResources(\\"classpath:data\\" + \\"/*.pdf\\");\\n\\n\\t\\t\\tfor (Resource resource : resources) {\\n\\t\\t\\t\\tif (resource.exists()) {\\n\\t\\t\\t\\t\\tpdfResources.add(resource);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tlogger.info(\\"\u52a0\u8f7d PDF \u8d44\u6e90\u5b8c\u6210=================================\\");\\n\\t\\t}\\n\\t\\tcatch (Exception e) {\\n\\t\\t\\tthrow new RuntimeException(\\"Failed to load PDF resources\\", e);\\n\\t\\t}\\n\\n\\t\\treturn pdfResources;\\n\\t}\\n\\n\\tprivate List<Document> parsePdfResource(List<Resource> pdfResources) {\\n\\n\\t\\tList<Document> resList = new ArrayList<>();\\n\\n\\t\\tlogger.info(\\"\u5f00\u59cb\u89e3\u6790 PDF \u8d44\u6e90=================================\\");\\n\\n\\t\\tfor (Resource springAiResource : pdfResources) {\\n\\n\\t\\t\\t// 1. parse document\\n\\t\\t\\tDocumentReader reader = new PagePdfDocumentReader(springAiResource);\\n\\t\\t\\tList<Document> documents = reader.get();\\n\\t\\t\\tlogger.info(\\"{} documents loaded\\", documents.size());\\n\\n\\t\\t\\t// 2. split trunks\\n\\t\\t\\tList<Document> splitDocuments = new TokenTextSplitter().apply(documents);\\n\\t\\t\\tlogger.info(\\"{} documents split\\", splitDocuments.size());\\n\\n\\t\\t\\t// 3. add res list\\n\\t\\t\\tresList.addAll(splitDocuments);\\n\\t\\t}\\n\\n\\t\\tlogger.info(\\"\u89e3\u6790 PDF \u8d44\u6e90\u5b8c\u6210=================================\\");\\n\\n\\t\\treturn resList;\\n\\t}\\n\\n\\tprivate void importToES(List<Document> documents) {\\n\\n\\t\\tlogger.info(\\"\u5f00\u59cb\u5bfc\u5165\u6570\u636e\u5230 ES =================================\\");\\n\\n\\t\\tlogger.info(\\"create embedding and save to vector store\\");\\n\\t\\tcreateIndexIfNotExists();\\n\\t\\tvectorStore.add(documents);\\n\\n\\t\\tlogger.info(\\"\u5bfc\u5165\u6570\u636e\u5230 ES \u5b8c\u6210=================================\\");\\n\\t}\\n\\n\\tprivate void createIndexIfNotExists() {\\n\\n\\t\\ttry {\\n\\t\\t\\tString indexName = options.getIndexName();\\n\\t\\t\\tInteger dimsLength = options.getDimensions();\\n\\n\\t\\t\\tif (!StringUtils.hasText(indexName)) {\\n\\t\\t\\t\\tthrow new IllegalArgumentException(\\"Elastic search index name must be provided\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\tboolean exists = elasticsearchClient.indices().exists(idx -> idx.index(indexName)).value();\\n\\t\\t\\tif (exists) {\\n\\t\\t\\t\\tlogger.debug(\\"Index {} already exists. Skipping creation.\\", indexName);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tString similarityAlgo = options.getSimilarity().name();\\n\\t\\t\\tIndexSettings indexSettings = IndexSettings\\n\\t\\t\\t\\t\\t.of(settings -> settings.numberOfShards(String.valueOf(1)).numberOfReplicas(String.valueOf(1)));\\n\\n\\t\\t\\tMap<String, Property> properties = new HashMap<>();\\n\\t\\t\\tproperties.put(vectorField, Property.of(property -> property.denseVector(\\n\\t\\t\\t\\t\\tDenseVectorProperty.of(dense -> dense.index(true).dims(dimsLength).similarity(similarityAlgo)))));\\n\\t\\t\\tproperties.put(textField, Property.of(property -> property.text(TextProperty.of(t -> t))));\\n\\n\\t\\t\\tMap<String, Property> metadata = new HashMap<>();\\n\\t\\t\\tmetadata.put(\\"ref_doc_id\\", Property.of(property -> property.keyword(KeywordProperty.of(k -> k))));\\n\\n\\t\\t\\tproperties.put(\\"metadata\\",\\n\\t\\t\\t\\t\\tProperty.of(property -> property.object(ObjectProperty.of(op -> op.properties(metadata)))));\\n\\n\\t\\t\\tCreateIndexResponse indexResponse = elasticsearchClient.indices()\\n\\t\\t\\t\\t\\t.create(createIndexBuilder -> createIndexBuilder.index(indexName)\\n\\t\\t\\t\\t\\t\\t\\t.settings(indexSettings)\\n\\t\\t\\t\\t\\t\\t\\t.mappings(TypeMapping.of(mappings -> mappings.properties(properties))));\\n\\n\\t\\t\\tif (!indexResponse.acknowledged()) {\\n\\t\\t\\t\\tthrow new RuntimeException(\\"failed to create index\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\tlogger.info(\\"create elasticsearch index {} successfully\\", indexName);\\n\\t\\t}\\n\\t\\tcatch (IOException e) {\\n\\t\\t\\tlogger.error(\\"failed to create index\\", e);\\n\\t\\t\\tthrow new RuntimeException(e);\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\n### AIRagService\\n\\n\u5728\u6b64\u6587\u4ef6\u4e2d\uff0c\u6267\u884c\u7528\u6237\u95ee\u9898\u7684\u67e5\u8be2\u3002\u4e3b\u8981\u7684\u4efb\u52a1\u662f\uff1a\\n\\n1. \u52a0\u8f7d prompt \u6a21\u677f\uff0c\u63a5\u53d7\u7528\u6237\u7684 prompt\uff1b\\n2. \u6267\u884c\u5411\u91cf\u76f8\u4f3c\u6027\u68c0\u7d22\uff0c\u83b7\u5f97\u5411\u91cf\u4e0a\u4e0b\u6587\uff1b\\n3. \u8c03\u7528\u6a21\u578b\uff0c\u83b7\u5f97\u8f93\u51fa\u3002\uff08deepseek-r1 \u6709  thinking \u8fc7\u7a0b\uff0c\u65e2 Ressoning Content\uff09\\n\\n```java\\n@Service\\npublic class AIRagService {\\n\\n\\tprivate final Logger logger = LoggerFactory.getLogger(AIRagService.class);\\n\\n\\t@Value(\\"classpath:/prompts/system-qa.st\\")\\n\\tprivate Resource systemResource;\\n\\n\\tprivate final ChatModel ragChatModel;\\n\\n\\tprivate final ChatClient ragClient;\\n\\n\\tprivate final VectorStore vectorStore;\\n\\n\\tprivate static final String textField = \\"content\\";\\n\\n\\tpublic AIRagService(\\n\\t\\t\\tChatModel chatModel,\\n\\t\\t\\t// \u4f7f\u7528 DashScope ChatModel\\n\\t\\t\\t// @Qualifier(\\"dashscopeChatModel\\") ChatModel chatModel,\\n\\t\\t\\tVectorStore vectorStore\\n\\t) {\\n\\n\\t\\tthis.ragChatModel = chatModel;\\n\\t\\tthis.vectorStore = vectorStore;\\n\\n\\t\\tthis.ragClient = ChatClient.builder(ragChatModel)\\n\\t\\t\\t\\t.defaultAdvisors((new QuestionAnswerAdvisor(vectorStore)))\\n\\t\\t\\t\\t.build();\\n\\t}\\n\\n\\tpublic Flux<String> retrieve(String prompt) {\\n\\n\\t\\t// Get the vector store prompt tmpl.\\n\\t\\tString promptTemplate = getPromptTemplate(systemResource);\\n\\n\\t\\t// Enable hybrid search, both embedding and full text search\\n\\t\\tSearchRequest searchRequest = SearchRequest.builder().\\n\\t\\t\\t\\ttopK(4)\\n\\t\\t\\t\\t.similarityThresholdAll()\\n\\t\\t\\t\\t.filterExpression(\\n\\t\\t\\t\\t\\t\\tnew FilterExpressionBuilder()\\n\\t\\t\\t\\t\\t\\t\\t\\t.eq(textField, prompt).build()\\n\\t\\t\\t\\t).build();\\n\\n\\t\\t// Build ChatClient with retrieval rerank advisor:\\n\\t\\t// ChatClient runtimeChatClient = ChatClient.builder(chatModel)\\n\\t\\t//\\t\\t.defaultAdvisors(new RetrievalRerankAdvisor(vectorStore, rerankModel, searchRequest, promptTemplate, 0.1))\\n\\t\\t//\\t\\t.build();\\n\\n\\t\\t// Spring AI RetrievalAugmentationAdvisor\\n\\t\\t// Advisor retrievalAugmentationAdvisor = RetrievalAugmentationAdvisor.builder()\\n\\t\\t//\\t\\t.queryTransformers(RewriteQueryTransformer.builder()\\n\\t\\t//\\t\\t\\t\\t.chatClientBuilder(ChatClient.builder(ragChatModel).build().mutate())\\n\\t\\t//\\t\\t\\t\\t.build())\\n\\t\\t//\\t\\t.documentRetriever(VectorStoreDocumentRetriever.builder()\\n\\t\\t//\\t\\t\\t\\t.similarityThreshold(0.50)\\n\\t\\t//\\t\\t\\t\\t.vectorStore(vectorStore)\\n\\t\\t//\\t\\t\\t\\t.build())\\n\\t\\t//\\t\\t.build();\\n\\n\\t\\t// Retrieve and llm generate\\n\\t\\t// return ragClient.prompt()\\n\\t\\t//\\t\\t.advisors(retrievalAugmentationAdvisor)\\n\\t\\t//\\t\\t.user(prompt)\\n\\t\\t//\\t\\t.stream()\\n\\t\\t//\\t\\t.content();\\n\\n\\t\\treturn ChatClient.builder(ragChatModel)\\n\\t\\t\\t\\t.build().prompt()\\n\\t\\t\\t\\t.advisors(new QuestionAnswerAdvisor(vectorStore, searchRequest, promptTemplate))\\n\\t\\t\\t\\t.user(prompt)\\n\\t\\t\\t\\t.stream()\\n\\t\\t\\t\\t.content();\\n\\t}\\n\\n\\tprivate String getPromptTemplate(Resource systemResource) {\\n\\n\\t\\ttry {\\n\\t\\t\\tlogger.info(\\"Loading system resource: {}\\", systemResource.getURI());\\n\\t\\t\\treturn systemResource.getContentAsString(StandardCharsets.UTF_8);\\n\\t\\t}\\n\\t\\tcatch (IOException e) {\\n\\t\\t\\tthrow new RuntimeException(e);\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\n\u540c\u65f6\uff0c\u6839\u636e\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Spring AI Alibaba \u63d0\u4f9b\u7684 Rerank \u91cd\u6392\u5e8f\u5b9e\u73b0\uff0c\u63d0\u9ad8\u68c0\u7d22\u7cbe\u5ea6\u3002\\n\\n\u8c03\u7528\u6548\u679c\u5982\u4e0b\uff1a\uff08\u753b\u7ebf\u4e4b\u524d\u4e3a deepseek \u7684\u601d\u8003\u8fc7\u7a0b\uff09\\n\\n![call](/img/ai/deepseek/img_1.png)\\n\\n## \u9002\u914d Spring AI Alibaba DashScope \\n\\n\u5f15\u5165 spring-ai-alibaba-starter\\n\\n```xml\\n\x3c!-- Spring AI Alibaba DashScope --\x3e\\n<dependency>\\n    <groupId>com.alibaba.cloud.ai</groupId>\\n    <artifactId>spring-ai-alibaba-starter</artifactId>\\n    <version>1.0.0-M5.1</version>\\n</dependency>\\n```\\n\\n\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4ee5\u4e0b\u914d\u7f6e\uff1a\uff08\u786e\u4fdd\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u6a21\u578b\u6ce8\u5165\u5230 IOC \u5bb9\u5668\u4e2d\uff0c\u9700\u8981\u5173\u95ed\u5176\u4ed6 chat \u548c embedding \u6a21\u578b\u7684\u6ce8\u5165\uff09\\n\\n```yaml\\nspring:\\n  application:\\n    name: ollama-rag\\n\\n  ai:\\n    dashscope:\\n      api-key: ${AI_DASHSCOPE_API_KEY}\\n      chat:\\n        options:\\n          model: deepseek-r1\\n      embedding:\\n        enabled: false\\n\\n    ollama:\\n      base-url: http://127.0.0.1:11434\\n      chat:\\n        model: deepseek-r1:8b\\n        enabled: false\\n      embedding:\\n        model: nomic-embed-text:latest\\n\\n    vectorstore:\\n      elasticsearch:\\n        index-name: ollama-rag-embedding-index\\n        similarity: cosine\\n        dimensions: 768\\n\\n  elasticsearch:\\n    uris: http://127.0.0.1:9200\\n```\\n\\n\u5728 service \u4e2d\u6ce8\u5165 DashScopeChatModel\\n\\n```java\\npublic AIRagService(\\n        // ChatModel chatModel,\\n        // \u4f7f\u7528 DashScope ChatModel\\n        @Qualifier(\\"dashscopeChatModel\\") ChatModel chatModel,\\n        VectorStore vectorStore\\n) {\\n\\n    this.ragChatModel = chatModel;\\n    this.vectorStore = vectorStore;\\n\\n    this.ragClient = ChatClient.builder(ragChatModel)\\n            .defaultAdvisors((new QuestionAnswerAdvisor(vectorStore)))\\n            .build();\\n}\\n```\\n\\n\u8c03\u7528\u6548\u679c\u5982\u4e0b\uff1a\uff08Spring AI Alibaba 1.0.0-M5.1 \u4e0d\u652f\u6301 reasoning content \u900f\u51fa\uff0c\u5728 M6 \u4e2d\u652f\u6301\uff09\\n\\n![DashScope Call](/img/ai/deepseek/img.png)"},{"id":"\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528","metadata":{"permalink":"/blog/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528.md","source":"@site/blog/AI-large-models/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528.md","title":"\u4f7f\u7528 Ollama \u90e8\u7f72 DeepSeek \u5e76\u4f7f\u7528 Spring AI Alibaba \u8c03\u7528","description":"Ollama \u90e8\u7f72 Deepseek R1","date":"2025-02-16T20:26:55.000Z","tags":[{"inline":true,"label":"Ollama","permalink":"/blog/tags/ollama"},{"inline":true,"label":"DeepSeek","permalink":"/blog/tags/deep-seek"},{"inline":true,"label":"Spring AI Alibaba","permalink":"/blog/tags/spring-ai-alibaba"},{"inline":true,"label":"AI","permalink":"/blog/tags/ai"}],"readingTime":2.9966666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528","title":"\u4f7f\u7528 Ollama \u90e8\u7f72 DeepSeek \u5e76\u4f7f\u7528 Spring AI Alibaba \u8c03\u7528","date":"2025-02-16T20:26:55.000Z","authors":"yuluo","tags":["Ollama","DeepSeek","Spring AI Alibaba","AI"],"keywords":["Ollama","DeepSeek","Spring AI Alibaba"],"image":"/img/ai/deepseek/dp.jpg"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","permalink":"/blog/use-spring-ai-and-ollama-build-rag-app"},"nextItem":{"title":"\u672c\u5730\u90e8\u7f72\u548c\u4f7f\u7528 Dubbo-Kubernetes","permalink":"/blog/dubbo-kubernetes-local-run"}},"content":"\x3c!-- truncate --\x3e\\n\\n## Ollama \u90e8\u7f72 Deepseek R1\\n\\n\u5b98\u7f51\uff1ahttps://www.deepseek.com/\\n\\nGithub\uff1ahttps://github.com/deepseek-ai\\n\\nOllama\uff1ahttps://ollama.com/\\n\\n### Docker Compose\\n\\n\u90e8\u7f72\u4e00\u4e2a Ollama \u548c open-webui \u670d\u52a1\uff1a\\n\\n```yml\\nservices:\\n\\n   ollama:\\n     volumes:\\n       - ./models:/root/.ollama  # \u5c06\u672c\u5730\u6587\u4ef6\u5939\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 /root/.ollama \u76ee\u5f55 \uff08\u6a21\u578b\u4e0b\u8f7d\u4f4d\u7f6e\uff09\\n     container_name: ollama\\n     pull_policy: always\\n     tty: true\\n     restart: unless-stopped\\n     image: ollama/ollama:latest\\n     ports:\\n       - 11434:11434  # Ollama API \u7aef\u53e3\\n\\n   open-webui:\\n     build:\\n       context: .\\n       args:\\n         OLLAMA_BASE_URL: \'/ollama\'\\n       dockerfile: Dockerfile\\n     image: ghcr.io/open-webui/open-webui:main\\n     container_name: open-webui\\n     volumes:\\n       - ./open-webui:/app/backend/data  # \u524d\u7aef\u9875\u9762\u6570\u636e\u6302\u8f7d\u4f4d\u7f6e\\n     depends_on:\\n       - ollama\\n     ports:\\n       - ${OPEN_WEBUI_PORT-3005}:8080\\n     environment:\\n       - \'OLLAMA_BASE_URL=http://ollama:11434\'\\n       - \'WEBUI_SECRET_KEY=\'\\n     extra_hosts:\\n       - host.docker.internal:host-gateway\\n     restart: unless-stopped\\n```\\n\\n### \u5b89\u88c5 DeepSeek-R1\\n\\n\u8fdb\u5165 docker ollama \u5bb9\u5668\u4e0b\u8f7d deepseek-r1 \u6a21\u578b\\n\\n```shell\\n# \u8fdb\u5165\u5bb9\u5668\\n$ docker exec -it ollama bash\\n\\n# \u67e5\u770b ollama \u5df2\u6709\u7684\u6a21\u578b\uff08\u7b2c\u4e00\u6b21\u4e0b\u8f7d\u6ca1\u6709\u6b63\u5e38\uff09\\n$ root@c5e5ff20a533:/# ollama list\\n\\nNAME            ID              SIZE    MODIFIED\\nllama3:latest   365c0bd3c000    4.7 GB  7 months ago\\nqwen:4b         d53d04290064    2.3 GB  7 months ago\\n\\n# \u9009\u62e9\u4e0b\u8f7d 8b\uff08\u53ef\u4ee5\u6839\u636e\u673a\u5668\u73af\u5883\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\uff09\\nollama run deepseek-r1:8b\\n\\n# \u4e0b\u8f7d\u6210\u529f\u5982\u4e0b\u6240\u793a\\n\\n```\\n\\n### open-webui \u4f7f\u7528\\n\\n> **\u5982\u679c\u51fa\u73b0\u6a21\u578b\u5931\u8d25\u7684\u9519\u8bef\uff0c\u5c1d\u8bd5\u66f4\u65b0\u5148 ollama \u7248\u672c\u4e4b\u540e\u91cd\u8bd5\uff01**\\n\\n\u5728\u53f3\u4e0a\u89d2\u9009\u62e9\u6a21\u578b\uff1a\\n\\n![Open WebUI \u9009\u62e9\u6a21\u578b](/img/ai/deepseek/image-4.png)\\n\\n\u4f7f\u7528\u6f14\u793a:\\n\\n![Open WebUI \u8c03\u7528](/img/ai/deepseek/image-1.png)\\n\\n\u770b\u8d77\u6765\u6548\u679c\u4e0d\u9519\uff0c\u6b6a\u745e\u53e4\u5fb7\uff01\\n\\n## Spring AI Alibaba \u8c03\u7528\\n\\n\u63a5\u4e0b\u6765\u6f14\u793a\u5982\u4f55 Spring AI Alibaba \u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684 Chat \u5e94\u7528\u3002\\n\\n##### pom.xml\\n\\n\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528 ollama \u90e8\u7f72 deepseek r1\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528 ollama starter\u3002\\n\\n```xml\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<project xmlns=\\"http://maven.apache.org/POM/4.0.0\\"\\n\\t\\t xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"\\n\\t\\t xsi:schemaLocation=\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\">\\n\\t<modelVersion>4.0.0</modelVersion>\\n\\t<parent>\\n\\t\\t<groupId>indi.yuluo</groupId>\\n\\t\\t<artifactId>examples</artifactId>\\n\\t\\t<version>1.0-SNAPSHOT</version>\\n\\t</parent>\\n\\n\\t<groupId>indi.yuluo.deepseek</groupId>\\n\\t<artifactId>deepseek-r1-saa</artifactId>\\n\\n\\t<dependencies>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\n\\t\\t\\t<version>3.3.4</version>\\n\\t\\t</dependency>\\n\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.ai</groupId>\\n\\t\\t\\t<artifactId>spring-ai-ollama-spring-boot-starter</artifactId>\\n\\t\\t\\t<version>1.0.0-M6</version>\\n\\t\\t</dependency>\\n\\t</dependencies>\\n\\n\\t<repositories>\\n\\t\\t<repository>\\n\\t\\t\\t<id>spring-milestones</id>\\n\\t\\t\\t<name>Spring Milestones</name>\\n\\t\\t\\t<url>https://repo.spring.io/milestone</url>\\n\\t\\t\\t<snapshots>\\n\\t\\t\\t\\t<enabled>false</enabled>\\n\\t\\t\\t</snapshots>\\n\\t\\t</repository>\\n\\t</repositories>\\n\\n</project>\\n```\\n\\n##### application.yml\\n\\n```yml\\nserver:\\n  port: 8080\\n\\nspring:\\n  application:\\n    name: deepseek-r1-saa\\n\\n  ai:\\n    ollama:\\n      base-url: http://localhost:11434\\n      chat:\\n        model: deepseek-r1:8b\\n```\\n\\n##### \u542f\u52a8\u7c7b\\n\\n```java\\npackage indi.yuluo.deepseek;\\n\\nimport org.springframework.boot.SpringApplication;\\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\\n\\n/**\\n * @author yuluo\\n * @author <a href=\\"mailto:yuluo08290126@gmail.com\\">yuluo</a>\\n */\\n\\n@SpringBootApplication\\npublic class DeepSeekChatApplication {\\n\\n    public static void main(String[] args) {\\n\\n       SpringApplication.run(DeepSeekChatApplication.class, args);\\n    }\\n\\n}\\n```\\n\\n##### controller\\n\\n```java\\npackage indi.yuluo.deepseek.controller;\\n\\nimport jakarta.servlet.http.HttpServletResponse;\\nimport reactor.core.publisher.Flux;\\n\\nimport org.springframework.ai.chat.client.ChatClient;\\nimport org.springframework.ai.chat.prompt.Prompt;\\nimport org.springframework.ai.ollama.OllamaChatModel;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * @author yuluo\\n * @author <a href=\\"mailto:yuluo08290126@gmail.com\\">yuluo</a>\\n */\\n\\n@RestController\\n@RequestMapping(\\"/deepseek/chat\\")\\npublic class DeepSeekController {\\n\\n\\tprivate final ChatClient chatClient;\\n\\n\\tpublic DeepSeekController (OllamaChatModel chatModel) {\\n\\n\\t\\tthis.chatClient = ChatClient.builder(chatModel).build();\\n\\t}\\n\\n\\t@GetMapping(\\"/{prompt}\\")\\n\\tpublic Flux<String> chat(\\n\\t\\t\\t@PathVariable(value = \\"prompt\\") String prompt,\\n\\t\\t\\tHttpServletResponse response\\n\\t) {\\n\\n\\t\\tresponse.setCharacterEncoding(\\"UTF-8\\");\\n\\t\\treturn this.chatClient.prompt(new Prompt(prompt)).stream().content();\\n\\t}\\n\\n}\\n```\\n\\n##### \u6d4f\u89c8\u5668\u8bf7\u6c42\u6d4b\u8bd5\\n\\n![Spring AI Alibaba Call](/img/ai/deepseek/image-3.png)\\n\\n## DeepSeek4j \u8c03\u7528\\n\\n##### pom.xml\\n\\n```xml\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<project xmlns=\\"http://maven.apache.org/POM/4.0.0\\"\\n        xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"\\n        xsi:schemaLocation=\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\">\\n    <modelVersion>4.0.0</modelVersion>\\n    <parent>\\n       <groupId>indi.yuluo</groupId>\\n       <artifactId>examples</artifactId>\\n       <version>1.0-SNAPSHOT</version>\\n    </parent>\\n\\n    <groupId>indi.yuluo.deepseek</groupId>\\n    <artifactId>deepseek4j</artifactId>\\n\\n    <dependencies>\\n       <dependency>\\n          <groupId>org.springframework.boot</groupId>\\n          <artifactId>spring-boot-starter-web</artifactId>\\n          <version>3.3.4</version>\\n       </dependency>\\n\\n       <dependency>\\n          <groupId>io.github.pig-mesh.ai</groupId>\\n          <artifactId>deepseek-spring-boot-starter</artifactId>\\n          <version>1.4.1</version>\\n       </dependency>\\n    </dependencies>\\n\\n</project>\\n```\\n\\n##### application.yml \u914d\u7f6e\\n\\n```yml\\ndeepseek:\\n  base-url: http://127.0.0.1:11434/v1\\n  model: deepseek-r1:8b\\n  api-key: deepseek\\n  default-system-prompt: false\\n\\nserver:\\n  port: 8080\\n```\\n\\n##### controller\\n\\n```java\\npackage indi.yuluo.deepseek.controller;\\n\\nimport io.github.pigmesh.ai.deepseek.core.DeepSeekClient;\\nimport jakarta.servlet.http.HttpServletResponse;\\nimport reactor.core.publisher.Flux;\\n\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * @author yuluo\\n * @author <a href=\\"mailto:yuluo08290126@gmail.com\\">yuluo</a>\\n */\\n\\n@RestController\\n@RequestMapping(\\"/deepseek4j\\")\\npublic class DeepSeek4JController {\\n\\n    @Autowired\\n    private DeepSeekClient deepSeekClient;\\n\\n    @GetMapping(value = \\"/chat/{prompt}\\")\\n    public Flux<String> chat(\\n          @PathVariable(value = \\"prompt\\") String prompt,\\n          HttpServletResponse response\\n    ) {\\n\\n       response.setCharacterEncoding(\\"UTF-8\\");\\n\\n       return deepSeekClient.chatFluxCompletion(prompt).map(\\n             chatCompletionResponse -> {\\n                System.out.println(chatCompletionResponse.choices().get(0).delta().toString());\\n                return chatCompletionResponse.choices().get(0).delta().content();\\n             }\\n       );\\n    }\\n\\n}\\n```\\n\\n### DeepSeek4j \u900f\u51fa reasoning content\\n\\n\u5f53 `default-system-prompt` \u4e3a false \u65f6\\n\\n```yml\\ndeepseek:\\n  base-url: http://127.0.0.1:11434/v1\\n  model: deepseek-r1:8b\\n  api-key: deepseek\\n  default-system-prompt: false\\n```\\n\\n\u8f93\u51fa\u4e3a\uff1a\\n\\n```text\\n\u4f60\u597d\uff01\u5f88\u9ad8\u5174\u89c1\u5230\u4f60\uff0c\u6709\u4ec0\u4e48\u6211\u53ef\u4ee5\u5e2e\u5fd9\u7684\u5417\uff1f\u65e0\u8bba\u662f\u95ee\u9898\u3001\u5efa\u8bae\u8fd8\u662f\u95f2\u804a\uff0c\u6211\u90fd\u5728\u8fd9\u513f\u4e3a\u4f60\u670d\u52a1\u3002\ud83d\ude0a\\n```\\n\\n\u5f53 `default-system-prompt` \u4e3a true \u65f6\\n\\n```yml\\ndeepseek:\\n  base-url: http://127.0.0.1:11434/v1\\n  model: deepseek-r1:8b\\n  api-key: deepseek\\n  default-system-prompt: true\\n```\\n\\n\u8f93\u51fa\u4e3a\uff1a\\n\\n```text\\n\u7528\u6237\u8bf4\u201c\u4f60\u597d\u201d\uff0c\u8fd9\u662f\u4e2a\u5e38\u89c1\u7684\u95ee\u5019\uff0c\u6211\u5e94\u8be5\u7528\u4e2d\u6587\u56de\u7b54\uff0c\u4fdd\u6301\u4eb2\u5207\u3002 \u6211\u662fDeepSeek-R1\uff0c\u7531\u4e2d\u56fd\u516c\u53f8DeepSeek\u5f00\u53d1\u7684AI\u52a9\u624b\uff0c\u53ef\u4ee5\u5904\u7406\u4e2d\u6587\u548c\u82f1\u6587\u67e5\u8be2\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u4e00\u4e0bDeepSeek-R1\u7684\u529f\u80fd\u548c\u7279\u70b9\uff0c\u8ba9\u7528\u6237\u6709\u66f4\u5168\u9762\u7684\u4e86\u89e3\u3002 \u4f60\u597d\uff01\u6211\u662f\u7531\u4e2d\u56fd\u516c\u53f8\u6df1\u5ea6\u6c42\u7d22\uff08DeepSeek\uff09\u5f00\u53d1\u7684\u667a\u80fd\u52a9\u624bDeepSeek-R1\u3002\u6211\u64c5\u957f\u901a\u8fc7\u6587\u672c\u5bf9\u8bdd\u65b9\u5f0f\u4e3a\u60a8\u63d0\u4f9b\u4fe1\u606f\uff0c\u89e3\u7b54\u95ee\u9898\u5e76\u8fdb\u884c\u4ea4\u6d41\u3002\u5982\u6709\u4efb\u4f55\u9700\u8981\uff0c\u6211\u4f1a\u5c3d\u529b\u5e2e\u52a9\u60a8\uff0c\u540c\u65f6\u786e\u4fdd\u56de\u7b54\u51c6\u786e\u3001\u6709\u6761\u7406\u5730\u5448\u73b0\u7ed9\u60a8\u3002\u5982\u679c\u4f60\u6709\u4efb\u4f55\u5177\u4f53\u7684\u9700\u6c42\u6216\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\uff01\\n```\\n\\n> \u7531\u6b64\u53ef\u89c1\uff0c\u4f3c\u4e4e\u662f\u7531 prompt \u63a7\u5236\u7684\uff1f"},{"id":"dubbo-kubernetes-local-run","metadata":{"permalink":"/blog/dubbo-kubernetes-local-run","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/cloud-native/dubbo-kubernetes-local-run.md","source":"@site/blog/cloud-native/dubbo-kubernetes-local-run.md","title":"\u672c\u5730\u90e8\u7f72\u548c\u4f7f\u7528 Dubbo-Kubernetes","description":"Dubbo Mesh","date":"2025-02-09T14:26:00.000Z","tags":[{"inline":true,"label":"Cloud Native","permalink":"/blog/tags/cloud-native"},{"inline":true,"label":"Dubbo","permalink":"/blog/tags/dubbo"},{"inline":true,"label":"Kuberneters","permalink":"/blog/tags/kuberneters"}],"readingTime":0.28,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"dubbo-kubernetes-local-run","title":"\u672c\u5730\u90e8\u7f72\u548c\u4f7f\u7528 Dubbo-Kubernetes","date":"2025-02-09T14:26:00.000Z","authors":"yuluo","tags":["Cloud Native","Dubbo","Kuberneters"],"keywords":["Cloud Native","Dubbo","Kubernetes"]},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Ollama \u90e8\u7f72 DeepSeek \u5e76\u4f7f\u7528 Spring AI Alibaba \u8c03\u7528","permalink":"/blog/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528"},"nextItem":{"title":"\u4f7f\u7528 Kind \u6a21\u62df k8s \u96c6\u7fa4","permalink":"/blog/use-kind-build-k8s-cluster"}},"content":"\x3c!-- truncate --\x3e\\n\\n## Dubbo Mesh\\n\\nDubbo Mesh \u662f Dubbo \u5728\u4e91\u539f\u751f\u80cc\u666f\u7684\u5fae\u670d\u52a1\u6574\u4f53\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5e2e\u52a9\u5f00\u53d1\u8005\u5b9e\u73b0 Dubbo \u670d\u52a1\u4e0e\u6807\u51c6\u7684 Kubernetes Native Service \u4f53\u7cfb\u7684\u6253\u901a\uff0c\u8ba9 Dubbo \u5e94\u7528\u80fd\u591f\u65e0\u7f1d\u63a5\u5165 Istio \u7b49\u4e1a\u754c\u4e3b\u6d41\u670d\u52a1\u7f51\u683c\u4ea7\u54c1\u3002\\n\\n## Dubbo Kubernetes\\n\\n\\n\\n\\n## \u53c2\u8003\u94fe\u63a5\\n\\n1. Dubbo Mesh\uff1ahttps://cn.dubbo.apache.org/zh-cn/overview/what/core-features/service-mesh/#dubbo-mesh\\n2. Dubbo-Kubernetes\uff1ahttps://github.com/apache/dubbo-kubernetes\\n3."},{"id":"use-kind-build-k8s-cluster","metadata":{"permalink":"/blog/use-kind-build-k8s-cluster","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/cloud-native/\u4f7f\u7528 kind \u6a21\u62df k8s \u96c6\u7fa4.md","source":"@site/blog/cloud-native/\u4f7f\u7528 kind \u6a21\u62df k8s \u96c6\u7fa4.md","title":"\u4f7f\u7528 Kind \u6a21\u62df k8s \u96c6\u7fa4","description":"\u5b89\u88c5 Docker","date":"2025-02-09T14:26:00.000Z","tags":[{"inline":true,"label":"Cloud Native","permalink":"/blog/tags/cloud-native"},{"inline":true,"label":"Kind","permalink":"/blog/tags/kind"},{"inline":true,"label":"Kuberneters","permalink":"/blog/tags/kuberneters"}],"readingTime":1.31,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"use-kind-build-k8s-cluster","title":"\u4f7f\u7528 Kind \u6a21\u62df k8s \u96c6\u7fa4","date":"2025-02-09T14:26:00.000Z","authors":"yuluo","tags":["Cloud Native","Kind","Kuberneters"],"keywords":["Cloud Native","Kind","Kubernetes"],"image":"/img/cloud-native/kind.png"},"unlisted":false,"prevItem":{"title":"\u672c\u5730\u90e8\u7f72\u548c\u4f7f\u7528 Dubbo-Kubernetes","permalink":"/blog/dubbo-kubernetes-local-run"},"nextItem":{"title":"\u4f7f\u7528 docusaurus \u66f4\u65b0 Blog","permalink":"/blog/blog-update"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u5b89\u88c5 Docker\\n\\nDocker Desktop\uff1a[https://docs.docker.com/desktop/setup/install/mac-install/](https://docs.docker.com/desktop/setup/install/mac-install/)\\n\\n```shell\\n$ docker --version \\nDocker version 27.4.0, build bde2b89\\n```\\n\\n## \u5b89\u88c5 Kind\\n\u4f7f\u7528 kind \u6a21\u62df K8s \u96c6\u7fa4\uff1a\\n\\n```shell\\n# \u76f4\u63a5\u4f7f\u7528 brew \u5b89\u88c5\\nbrew install kind\\n\\n# \u67e5\u770b\u7248\u672c\\n$ kind --version\\nkind version 0.26.0\\n\\n# kubectl \u7248\u672c\\n$ kubectl version  \\nClient Version: v1.30.5\\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\\n```\\n\\n## \u542f\u52a8 k8s \u96c6\u7fa4\\n```shell\\n$ kind create cluster --name istio-k8s\\nCreating cluster \\"istio-k8s\\" ...\\n \u2713 Ensuring node image (kindest/node:v1.32.0) \ud83d\uddbc \\n \u2713 Preparing nodes \ud83d\udce6  \\n \u2713 Writing configuration \ud83d\udcdc \\n \u2713 Starting control-plane \ud83d\udd79\ufe0f \\n \u2713 Installing CNI \ud83d\udd0c \\n \u2713 Installing StorageClass \ud83d\udcbe \\nSet kubectl context to \\"kind-istio-k8s\\"\\nYou can now use your cluster with:\\n\\nkubectl cluster-info --context kind-istio-k8s\\n\\nHave a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community \ud83d\ude42\\n```\\n\\n### \u67e5\u770b\u96c6\u7fa4\u8d44\u6e90\\n```shell\\n$ kgpa\\nNAMESPACE            NAME                                              READY   STATUS    RESTARTS   AGE\\nkube-system          coredns-668d6bf9bc-62mtm                          1/1     Running   0          62s\\nkube-system          coredns-668d6bf9bc-7vd5d                          1/1     Running   0          62s\\nkube-system          etcd-istio-k8s-control-plane                      1/1     Running   0          70s\\nkube-system          kindnet-94phb                                     1/1     Running   0          62s\\nkube-system          kube-apiserver-istio-k8s-control-plane            1/1     Running   0          70s\\nkube-system          kube-controller-manager-istio-k8s-control-plane   1/1     Running   0          69s\\nkube-system          kube-proxy-6kz4m                                  1/1     Running   0          62s\\nkube-system          kube-scheduler-istio-k8s-control-plane            1/1     Running   0          69s\\nlocal-path-storage   local-path-provisioner-58cc7856b6-q6rvb           1/1     Running   0          62s\\n```\\n\\n### Docker container \u67e5\u770b\\n```shell\\n$ docker ps                       \\nCONTAINER ID   IMAGE                  COMMAND                   CREATED         STATUS              PORTS                       NAMES\\n17df49a0e07c   kindest/node:v1.32.0   \\"/usr/local/bin/entr\u2026\\"   2 minutes ago   Up About a minute   127.0.0.1:62209->6443/tcp   istio-k8s-control-plane\\n```\\n\\n## \u5e38\u7528\u7684 kind \u547d\u4ee4\\n```shell\\n# \u83b7\u53d6\u5f53\u524d\u7684\u96c6\u7fa4\u5217\u8868\\nkind get clusters\\n\\n# \u6307\u5b9a kubectl \u4f7f\u7528\u7684 kind \u96c6\u7fa4\\nkubectl cluster-info --context \u96c6\u7fa4\u540d\u5b57\\n\\n# \u67e5\u770b\u67d0\u4e2a\u96c6\u7fa4\u7684\u914d\u7f6e\u4fe1\u606f\\nkind get kubeconfig --name=kind\\n\\n# \u5220\u9664\u51e0\u5708\\nkind delete cluster kind\\n```\\n\\n## kind K8s \u96c6\u7fa4\u7684\u505c\u6b62\u548c\u91cd\u542f\\n```shell\\n# \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 docker \u63a7\u5236\\n$ docker ps \\nCONTAINER ID   IMAGE                  COMMAND                   CREATED         STATUS         PORTS                       NAMES\\n17df49a0e07c   kindest/node:v1.32.0   \\"/usr/local/bin/entr\u2026\\"   7 minutes ago   Up 7 minutes   127.0.0.1:62209->6443/tcp   istio-k8s-control-plane\\n\\n# kind \u96c6\u7fa4\u7684 container \u4e3a 17df49a0e07c\\n\\n# \u505c\u6b62\\ndocker stop 17df49a0e07c\\n\\n# \u4f7f\u7528 kgpa \u9a8c\u8bc1\\n$ kgpa\\nThe connection to the server 127.0.0.1:62209 was refused - did you specify the right host or port?\\n\\n# kind \u96c6\u7fa4\u5df2\u7ecf\u6210\u529f\u505c\u6b62\\n```"},{"id":"blog-update","metadata":{"permalink":"/blog/blog-update","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/everythings/Blog \u5347\u7ea7\u8bb0\u5f55.md","source":"@site/blog/everythings/Blog \u5347\u7ea7\u8bb0\u5f55.md","title":"\u4f7f\u7528 docusaurus \u66f4\u65b0 Blog","description":"\u80cc\u666f","date":"2025-02-03T22:25:06.000Z","tags":[{"inline":true,"label":"Blog","permalink":"/blog/tags/blog"},{"inline":true,"label":"Docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.6766666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"blog-update","title":"\u4f7f\u7528 docusaurus \u66f4\u65b0 Blog","date":"2025-02-03T22:25:06.000Z","authors":"yuluo","tags":["Blog","Docusaurus"],"keywords":["Blog","Docusaurus"],"image":"/img/project/mushengblogs.jpg"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Kind \u6a21\u62df k8s \u96c6\u7fa4","permalink":"/blog/use-kind-build-k8s-cluster"},"nextItem":{"title":"2024 \u5e74\u7ec8\u603b\u7ed3","permalink":"/blog/2024-year-summary"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\\n\\n\u4e4b\u524d\u7684 Blog \u7528\u7684\u662f Hexo + Fluid \u642d\u5efa\u7684\uff0c\u4e2a\u4eba\u611f\u89c9\u4e0d\u592a\u597d\u770b\uff0c\u800c\u4e14\u5bf9 Markdown \u516c\u5f0f\u652f\u6301\u7684\u4e0d\u53cb\u597d\u3002\u6240\u4ee5\u8d81\u7740\u7a7a\u95f2\u65f6\u95f4\u840c\u751f\u4e86\u6362\u4e00\u4e2a\u7684\u60f3\u6cd5\u3002\u7f51\u4e0a\u4e00\u987f\u641c\u7d22\u4e4b\u540e\uff0c\u770b\u5230\u4e86 docusaurus\u3002\u4e4b\u524d\u4e5f\u6709\u4f7f\u7528\u8fc7\uff0c\u6240\u4ee5\u5c31\u51b3\u5b9a\u4ee5\u8fd9\u4e2a\u4e3a\u6587\u6863\u6846\u67b6\uff0c\u672c\u6765\u60f3\u81ea\u5df1\u6539\u4e00\u4e9b\u524d\u7aef\u6837\u5f0f\uff0c\u4f46\u662f\u60f3\u60f3\u592a\u8d39\u4e8b\u4e86\uff0c\u4e0d\u5982\u627e\u4e2a\u73b0\u6210\u7684\uff0c\u4e8e\u662f\uff0c\u627e\u5230\u4e86 [@Kuizuo](https://github.com/kuizuo) \u5927\u4f6c\u9b54\u6539\u7684 docusaurus \u6837\u5f0f\u4e3b\u9898\u3002\u76f4\u63a5\u5957\u58f3 cv \u4e86\u3002\\n\\n\u539f\u6837\u5f0f\u5982\u4e0b\uff1a\\n\\n![kuizuo blog](/img/blog/blog.png)\\n\\n\u770b\u7740\u6548\u679c\u6bd4\u6211\u4e4b\u524d\u7684\u597d\u591a\u4e86\u3002\\n\\n## \u91cd\u6784\u53c2\u8003\\n\\n\u5927\u90e8\u5206\u7684\u6b65\u9aa4\u90fd\u53ef\u4ee5 kuizuo \u5927\u4f6c\u7684 https://kuizuo.cn/docs/docusaurus-guides \u6587\u6863\u3002\\n\\n\u63cf\u8ff0\u4e0b\u6211\u505a\u7684\u4fee\u6539\uff1a\\n\\n### makefile\\n\\n\u539f\u9879\u76ee\u4e2d\u662f\u6ca1\u6709 makefile \u7684\uff0c\u6211\u52a0\u4e86\u4e00\u4e9b makefile \u547d\u4ee4\uff0c\u7ed9 github action \u4f7f\u7528\u540c\u65f6\u4e5f\u65b9\u4fbf\u81ea\u5df1\uff1a\\n\\n```shell\\n$ make help\\nUsage:\\n  make <Target> \\n\\nTargets:\\n\\nCommon\\n  install          Install the dependencies.\\n\\nDocs\\n  preview          Start the Docusaurus server in preview mode.\\n  build            Build the Docusaurus site.\\n  serve            Start Docusaurus site with server mode.\\n\\nLinter\\n  markdown         Lint Check the markdown files.\\n  markdown-fix     Lint Check the markdown files and fix them.\\n  yamllint         Lint Check the yaml files.\\n  codespell        Lint Check the codespell.\\n  checklinks       Check for broken links in the docs\\n  pnpm-lint        Lint Check the pnpm files.\\n```\\n\\n\u52a0\u5165\u4e86\u5bf9 yaml \u548c markdown \u683c\u5f0f\u7684\u68c0\u6d4b\uff0c\u7b49\u7b49\uff0c\u867d\u7136 docusaurus \u4e5f\u6709\uff0c\u4f46\u5916\u7f6e\u7684\u53ef\u63a7\u6027\u66f4\u9ad8\u4e00\u4e9b\u3002\u540c\u65f6\u4e5f\u662f\u6211\u719f\u6089\u7684\u65b9\u5f0f\u3002\\n\\n### \u5bf9\u5176\u4e2d\u7ec4\u4ef6\u4fee\u6539\\n\\n\u5bf9\u7ec4\u4ef6\u6ca1\u6709\u505a\u8fc7\u591a\u4fee\u6539\uff0c\u53ea\u6539\u4e86\u4e9b\u7ec4\u4ef6\u663e\u793a\u6548\u679c\u548c\u52a0\u4e86\u4e00\u4e9b\u7ec4\u4ef6\u3002\\n\\n### \u6587\u6863\u8fc1\u79fb\\n\\ncv \u548c\u6328\u4e2a\u52a0\u6807\u7b7e\u3002\ud83e\udd23\\n\\n### Github Action\\n\\n\u52a0\u4e86\u4f7f\u7528 github pages \u90e8\u7f72\u548c\u5bf9\u9879\u76ee\u4ee3\u7801\u68c0\u6d4b\u7684 workflows\u3002yaml \u5982\u4e0b\uff1a\\n\\n```yaml\\nname: Deploy\\n\\non:\\n  pull_request:\\n    branches:\\n    - \\"main\\"\\n  push:\\n    branches:\\n    - \\"main\\"\\n\\nconcurrency:\\n  group: ${{ github.workflow }}-${{ github.ref }}\\n  cancel-in-progress: true\\n\\njobs:\\n  build-and-deploy:\\n    runs-on: ${{ matrix.os }}\\n    needs: [lint-check]\\n\\n    strategy:\\n      matrix:\\n        os: [ubuntu-latest]\\n        node-version: [20.x]\\n\\n    steps:\\n      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2\\n      - uses: ./tools/github-actions/setup-deps\\n\\n      - name: Install dependencies\\n        run: pnpm install\\n\\n      - name: Build\\n        run: pnpm build\\n\\n      - name: Deploy to GitHub Pages\\n        uses: peaceiris/actions-gh-pages@v3\\n        with:\\n          github_token: ${{ secrets.BLOG_DEPLOY_TOKEN }}\\n          publish_dir: ./build\\n\\n  lint-check:\\n\\n    name: Lint\\n    runs-on: ubuntu-latest\\n\\n    strategy:\\n      matrix:\\n        node-version: [20.x]\\n        \\n    steps:\\n      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2\\n      - uses: ./tools/github-actions/setup-deps\\n      - uses: actions/setup-python@v5\\n\\n      - name: Checkout LFS objects\\n        run: git lfs checkout\\n\\n      - name: Install tools\\n        run: make install-tools\\n\\n      - name: Install dependencies\\n        run: pnpm install\\n\\n      - name: Run Pnpm Lint\\n        run: make pnpm-lint\\n        \\n      - name: Run Markdown Lint\\n        run: make markdown\\n      \\n      - name: Run Yaml Lint\\n        run: make yamllint\\n\\n      - name: Run CodeSpell Lint\\n        run: make codespell\\n```\\n\\n## \u6dfb\u52a0\u641c\u7d22\u529f\u80fd\\n\\n\u53c2\u8003\uff1ahttps://kuizuo.cn/docs/docusaurus-search\\n\\n1. \u7533\u8bf7 https://www.algolia.com/ \u8d26\u53f7\uff1b\\n\\n2. \u5728\u53f3\u4e0a\u89d2\u70b9\u51fb\uff0c\u4f7f\u7528 google \u8d26\u53f7\u767b\u9646\u4e4b\u540e\uff1b\\n\\n3. \u8df3\u8fc7\u5f15\u5bfc\u6b65\u9aa4\uff1b\\n\\n4. \u5230\u8fbe\u6b22\u8fce\u9875\u9762\u4e4b\u540e\uff0c\u53ef\u4ee5\u770b\u5230 Application ID \u548c Search API Key\uff08\u4e00\u5b9a\u8981\u662f Search\uff09\uff1b\\n\\n5. \u5c06 id \u548c key \u586b\u5165 docusaurus \u914d\u7f6e\u4e2d\uff1b\\n\\n  ```ts\\n  themeConfig: {\\n      algolia: {\\n        apiKey: \\"xxxxxxxxxxx\\",\\n        appId: \\"xxxxxxxxxxx\\",\\n        indexName: \\"yuluo\\",\\n      },\\n  }\\n  ```\\n\\n6. \u521b\u5efa github action \u6587\u4ef6\uff0c\u5728\u63d0\u4ea4\u4ee3\u7801\u65f6\u89e6\u53d1\u722c\u866b\u64cd\u4f5c\uff1a\\n\\n  ```yaml\\n  algolia-docsearch:\\n    runs-on: ubuntu-latest\\n    needs: [lint-check, build-and-deploy]\\n\\n    steps:\\n      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2\\n\\n      - name: Get the content of docsearch.json as config\\n        id: algolia_config\\n        run: echo \\"::set-output name=config::$(cat docsearch.json | jq -r tostring)\\"\\n\\n      - name: Run algolia/docsearch-scraper image\\n        env:\\n          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}\\n          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}\\n          CONFIG: ${{ steps.algolia_config.outputs.config }}\\n        run: |\\n          docker run \\\\\\n            --env APPLICATION_ID=${ALGOLIA_APP_ID} \\\\\\n            --env API_KEY=${ALGOLIA_API_KEY} \\\\\\n            --env \\"CONFIG=${CONFIG}\\" \\\\\\n            algolia/docsearch-scraper\\n  ```\\n\\n7. \u5728 github \u4ed3\u5e93\u8bbe\u7f6e action secrets \u53c2\u6570\uff1b\u6ce8\u610f\u6b64\u65f6\u7684 API_KEY \u4e3a Write API Key\uff01\\n\\n8. \u63d0\u4ea4\u4ee3\u7801\uff0c\u89e6\u53d1\u722c\u866b ci\uff0c\u7b49\u5f85\u67e5\u770b\u6548\u679c\u3002\\n\\n9. \u641c\u7d22\u9a8c\u8bc1\\n\\n![doc search](/img/blog/search.png)\\n\\n### Todo\\n\\n1. \u52a0\u5165\u65e5\u671f\u663e\u793a\u7684 html \u6837\u5f0f\uff1b\\n2. \u4f7f\u7528\u7ed8\u5236 svg \u5f62\u5f0f\u7684 logo\uff1b\\n3. \u5b8c\u5584\u641c\u7d22\u529f\u80fd\uff1b\\n\\n\u66f4\u591a\u529f\u80fd\u5f00\u53d1\u4e2d..."},{"id":"2024-year-summary","metadata":{"permalink":"/blog/2024-year-summary","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/year-end-summary/2024-summary.md","source":"@site/blog/year-end-summary/2024-summary.md","title":"2024 \u5e74\u7ec8\u603b\u7ed3","description":"\u5c01\u9762\u62cd\u6444\u81ea\u676d\u5dde\u5e02\u4e34\u5e73\u533a","date":"2025-02-03T20:12:00.000Z","tags":[{"inline":true,"label":"\u5e74\u7ec8\u603b\u7ed3","permalink":"/blog/tags/\u5e74\u7ec8\u603b\u7ed3"},{"inline":true,"label":"2024","permalink":"/blog/tags/2024"}],"readingTime":2.9066666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"2024-year-summary","title":"2024 \u5e74\u7ec8\u603b\u7ed3","date":"2025-02-03T20:12:00.000Z","authors":"yuluo","tags":["\u5e74\u7ec8\u603b\u7ed3","2024"],"keywords":["\u968f\u7b14","\u5e74\u7ec8\u603b\u7ed3"],"image":"/img/summary/2024-summary-2.jpg"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 docusaurus \u66f4\u65b0 Blog","permalink":"/blog/blog-update"},"nextItem":{"title":"\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2","permalink":"/blog/deep-learn-init"}},"content":"> \u5c01\u9762\u62cd\u6444\u81ea\u676d\u5dde\u5e02\u4e34\u5e73\u533a\\n\\n\x3c!-- truncate --\x3e\\n\\n\u4eca\u5929\u662f 2025 \u5e74 2 \u6708 3 \u53f7\uff08\u6ca1\u60f3\u5230\u968f\u4fbf\u9009\u7684\u65e5\u5b50\u7adf\u7136\u548c 2023 \u5e74\u91cd\u5408\u4e86\uff01\uff09\u3002\u6709\u70b9\u65f6\u95f4\u51c6\u5907\u5199\u4e00\u4e0b 2024 \u5e74\u7684\u5e74\u7ec8\u603b\u7ed3\uff0c\u4e4b\u524d\u60f3\u5199\u603b\u662f\u6ca1\u65f6\u95f4\u5199\u3002\ud83e\udd23\\n\\n## 2024 review \\n\\n> 2024 \u5e74 7 \u6708\u4efd\u6bd5\u4e1a\uff0c\u4ece\u5b66\u6821\u8fdb\u5165\u5de5\u4f5c\u5c97\u4f4d\u3002\\n\\n\u6d41\u6c34\u5e10\u5f0f\u7684\u56de\u987e\u4e00\u4e0b 2024 \u5e74\u53d1\u751f\u7684\u4e8b\u60c5\uff1b\u4ece 2023 \u5e74\u603b\u7ed3\u7ed3\u675f\u4e4b\u540e\uff0c\u4e5f\u5c31\u662f 24 \u5e74 2 \u6708 3 \u53f7\u4ee5\u540e\u3002\u4e70\u4e86\u8f66\u7968\u53bb\u676d\u5dde\u7684\u4f4e\u4ee3\u7801\u521d\u521b\u516c\u53f8\uff0c\u53bb\u4e86\u4e0d\u4e45\u5c31\u79bb\u804c\u64a4\u4e86\u3002\\n\u4e4b\u540e\u4fbf\u56de\u5bb6\u53bb\u51c6\u5907\u6625\u62db\u548c\u6bd5\u4e1a\u8bba\u6587\u7684\u4e8b\u60c5\u3002\u540c\u65f6\u4e5f\u5728 Spring Cloud Alibaba \u793e\u533a\u53c2\u4e0e\u53d1\u8d77\u4e86 Spring Cloud Alibaba AI \u9879\u76ee\uff0c\u6b63\u5f0f\u63a5\u89e6\u4e86 AI \u6846\u67b6\u7684\u5f00\u53d1\uff0c\u5bf9 Spring AI\\n\u4e5f\u6709\u4e86\u4e00\u4e9b\u4e86\u89e3\u548c\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u6bd5\u4e1a\u8bba\u6587\uff0c\u5f00\u6e90\uff0cSCA AI\uff0c\u627e\u5de5\u4f5c\uff0c\u4e09\u4ef6\u4e8b\u5e76\u884c\uff08SCA AI \u4e5f\u7b97\u662f\u5f00\u6e90\u7684\u4e00\u90e8\u5206\u3002\uff09\\n\\n\u540c\u65f6\uff0c\u60f3\u7740\u591a\u5b66\u95e8\u8bed\u8a00\uff08\u6280\u591a\u4e0d\u538b\u8eab \ud83e\udd23\uff09\uff0c\u5b66\u4e60\u4e86 GO\uff0c\u5728 Github \u627e\u4e86\uff08LinuxSuRen/APITesting\uff09\u5f00\u6e90\u9879\u76ee\u53bb\u53c2\u4e0e\uff0c\u5b66\u4e60\u548c\u5728\u5927\u578b\u9879\u76ee\u91cc\u4f7f\u7528 GO\u3002\u540c\u65f6\u4e5f\u5f88\u8363\u5e78\u7684\u8ba4\u8bc6\u4e86 [@Rick](https://github.com/LinuxSuRen/api-testing)\u3002\u8fd9\u91cc\u611f\u8c22 [@Rick](https://github.com/LinuxSuRen/api-testing) \u5bf9\u6211\u7684\u5e2e\u52a9 \ud83e\udee1\u3002\u5728\u516d\u6708\u4efd\u7684\u65f6\u5019\uff0c\u63d0\u540d\u4e86 APITesting \u9879\u76ee\u7684 Committer\u3002\u4e5f\u662f\u5f00\u6e90\u7ecf\u5386\u4e2d\u7684\u7b2c\u4e8c\u4e2a Committer \u8eab\u4efd\u3002\ud83d\ude06\\n\\n\u516d\u6708\u4efd\u987a\u5229\u5b8c\u6210\u4e86\u6bd5\u4e1a\u8bbe\u8ba1\u548c\u6bd5\u4e1a\u8bba\u6587\uff0c\u540c\u65f6\u4e5f\u627e\u5230\u4e86\u4e00\u4efd\u5de5\u4f5c\u30027 \u6708\u4e2d\u65ec\u5b66\u6821\u4e8b\u60c5\u5fd9\u5b8c\u4e86\u3002\u4fbf\u6536\u62fe\u4e1c\u897f\u53bb\u4e86\u676d\u5dde\u3002\u4e4b\u540e\u56e0\u4e3a\u4e00\u4e9b\u539f\u56e0\uff0c\u73ed\u4e5f\u6ca1\u4e0a\u6210\uff0c\u8349\u8349\u7ed3\u675f\u4e86\u676d\u5dde\u7684\u5de5\u4f5c\u3002\\n\\n\u5728\u676d\u5dde\u5f85\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u7ed9\u81ea\u5df1\u641e\u4e86\u4e00\u4e2a\u77ed\u671f\u76ee\u6807\uff1a\u6210\u4e3a Apache \u7684 Committer\u3002\u4e4b\u540e\u7684\u4e00\u4e24\u4e2a\u6708\u65f6\u95f4\u90fd\u5728\u4e3a\u6b64\u52aa\u529b\uff0c\u6709\u65f6\u95f4\u5c31\u7ed9 Apache/Hertbeat \u9879\u76ee\u63d0\u4ea4\u4ee3\u7801\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u8d85\u9ad8\u63d0\u4ea4\u4e4b\u540e\uff0c\u987a\u5229\u8fbe\u6210\u4e86\u76ee\u6807\uff0c\u8fdb\u5165\u4e86 Apache org\uff0c\u62ff\u5230\u4e86 Committer \u7684\u63d0\u540d\u3002\\n\\n![Apache Org](/img/summary/2024-summary-1.jpg)\\n\\n\u671f\u95f4\u4e5f\u6070\u9022 CocA 2024 \u5728\u676d\u5dde\u53ec\u5f00\uff0c\u5e78\u8fd0\u7684\u8ba4\u8bc6\u4e86 [@Pil0tXia](https://github.com/Pil0tXia)\u3002\u4e5f\u89c1\u5230\u4e86\u8bb8\u591a\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\u7684\u7ec4\u7ec7\u8005\u548c\u5e03\u9053\u5e08\u3002\\n\\n\u4e4b\u540e\u7ecf\u8fc7\u5f88\u957f\u4e00\u4e00\u6bb5\u65f6\u95f4\u7684 gap\uff0c\u5728 11 \u6708\u521d\u6765\u5230\u4e86\u90d1\u5dde\u3002\u5f00\u59cb\u4e86\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u5de5\u4f5c\u3002\u5e0c\u671b\u80fd\u5728\u90d1\u5dde\u5b66\u4e60\u5230\u66f4\u591a\u4e1c\u897f\uff0c\u83b7\u5f97\u66f4\u591a\u7684\u6210\u957f\uff01\ud83e\udee1\\n\\n\u5728\u90d1\u5dde\u4e0a\u73ed\uff0c\u4e5f\u6ca1\u6709\u843d\u4e0b\u5f00\u6e90\uff0c\u4ece Spring Cloud Alibaba AI \u9879\u76ee\u7684\u53d1\u8d77\u4e4b\u540e\uff0c\u4e00\u76f4\u53c2\u4e0e\u793e\u533a\u7ef4\u62a4\uff0c\u9879\u76ee\u4e5f\u4ece\u4e4b\u524d\u7684 Spring Cloud Alibaba \u7684\u4e00\u4e2a Starter \u5b75\u5316\u6210\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee \u2014\u2014\u2014\u2014 alibaba/spring-ai-alibaba\u3002\u4e5f\u5f88\u8363\u5e78\uff0c\u5728 2024 \u5e74 12 \u6708\u4efd\u83b7\u5f97\u4e86 spring-ai-alibaba \u9879\u76ee\u7684\u63d0\u540d\u3002\u662f\u5f00\u6e90\u7ecf\u5386\u4e2d\u7684\u7b2c\u56db\u4e2a Committer\u3002\ud83c\udf89\\n\\n\u5230\u6b64\u4e3a\u6b62\uff0c2024 \u5e74\u7684\u751f\u6d3b\u7ecf\u5386\u4e5f\u5c31\u7ed3\u675f\u4e86\u3002\u671f\u95f4\u7ecf\u5386\u4e86\u8bb8\u591a\uff0c\u4e5f\u6210\u957f\u4e86\u8bb8\u591a\u3002\u770b\u5230\u4e86\u4e00\u4e9b\u793e\u4f1a\u751f\u6d3b\u7684\u767e\u6001\uff0c\u4f53\u4f1a\u4e86\u4e0d\u540c\u7684\u4eba\u751f\u5386\u7a0b\u3002\u603b\u7ed3\u4e0b 2024 \u7684\u751f\u6d3b\uff0c\u5f97\u5230\u7684\u751f\u6d3b\u7ecf\u9a8c\u5c31\u662f\uff1a\\n\\n:::warning\\n\u8c28\u601d\uff01\u8c28\u8a00\uff01\u8c28\u884c\uff01\\n:::\\n\\n## 2025 Feature \\n\\n\u56de\u987e\u4e86\u4e0b 2024 \u7684\u751f\u6d3b\u7ecf\u5386\u3002\u5728 2025 \u5e74\u91cc\uff0c\u5e0c\u671b\u80fd\u5b8c\u6210\u4e0b\u9762\u7684\u4e8b\u60c5\uff1a\\n\\n1. \u6210\u4e3a\u4e91\u539f\u751f\u9879\u76ee\u7684\u8d21\u732e\u8005\uff1b\\n2. \u5b66\u4e60\u82f1\u8bed\uff0c\u80fd\u542c\u61c2\u5e76\u8bf4\u51fa\u6765\uff1b\uff08\u8fd9\u662f\u4e2a\u6c38\u6052\u7684\u8bdd\u9898\uff0c\u5b66\u65e0\u6b62\u5c3d \ud83e\udd14\\n3. \u8ba4\u771f\u5de5\u4f5c\uff0c\u4e89\u53d6\u5728\u5de5\u4f5c\u4e0a\u4e86\u505a\u51fa\u4e00\u4e9b\u6210\u7ee9\uff1b\\n4. \u5b66\u4f1a\u5439\u7b1b\u5b50\uff0c\u57f9\u517b\u4e0b\u9664\u4e86\u6572\u4ee3\u7801\uff0c\u6253\u7bee\u7403\u548c\u4e52\u4e53\u7403\u4e4b\u5916\u7684\u4e1a\u4f59\u7231\u597d\u3002\\n\\n\u597d\u4e86\uff0c2024 \u5e74\u7684\u56de\u987e\u5c31\u5230\u8fd9\u91cc\uff0c\u671f\u5f85 2025 \uff01\ud83c\udf89"},{"id":"deep-learn-init","metadata":{"permalink":"/blog/deep-learn-init","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2.md","source":"@site/blog/AI-large-models/\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2.md","title":"\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2","description":"\u5c1d\u8bd5\u7406\u89e3\u795e\u7ecf\u7f51\u7edc\u7684\u5de5\u4f5c\u539f\u7406\uff01\u65e7\u6587\u65b0\u53d1\u3002","date":"2025-01-01T15:45:35.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"machine learning","permalink":"/blog/tags/machine-learning"}],"readingTime":27.096666666666668,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"deep-learn-init","title":"\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2","date":"2025-01-01T15:45:35.000Z","authors":"yuluo","tags":["AI","machine learning"],"keywords":["AI","machine learning"],"image":"/img/machine_learning/image-20240323191347399.png"},"unlisted":false,"prevItem":{"title":"2024 \u5e74\u7ec8\u603b\u7ed3","permalink":"/blog/2024-year-summary"},"nextItem":{"title":"\u968f\u7b14 2024/11/24","permalink":"/blog/write-somethings"}},"content":"\x3c!-- truncate --\x3e\\n\\n> \u5c1d\u8bd5\u7406\u89e3\u795e\u7ecf\u7f51\u7edc\u7684\u5de5\u4f5c\u539f\u7406\uff01\u65e7\u6587\u65b0\u53d1\u3002\\n\\n## \u5206\u7c7b\u95ee\u9898\u5f15\u5165\\n\\n### \u5c11\u7ef4\u5ea6\u5206\u7c7b\\n\\n\u5982\u4e0b\u56fe\u662f\u4e00\u4e2a\u5317\u4eac\u548c\u957f\u6cbb\u7684\u623f\u4ef7\u5bf9\u6bd4\u56fe\uff1a\\n\\n![image-20240304220239621](/img/machine_learning/image-20240304220239621.png)\\n\\n\u5982\u4e0a\u4f7f\u7528\u8868\u683c\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u53ef\u80fd\u4e0d\u662f\u5f88\u76f4\u89c2\u3002\u6362\u6210\u5982\u4e0b\u7684\u5750\u6807\u7cfb\u5c31\u80fd\u5f88\u6e05\u695a\u7684\u770b\u51fa\u6765\u533a\u522b\uff1a\\n\\n![image-20240304221939557](/img/machine_learning/image-20240304221939557.png)\\n\\n\u56fe\u4e2d\u6807\u6ce8\u4e00\u6761\u9ec4\u8272\u7684\u6570\u636e\u7ebf\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u9ec4\u7ebf\u5de6\u8fb9\u7684\u5c5e\u4e8e\u5317\u4eac\uff0c\u53f3\u8fb9\u7684\u5c5e\u4e8e\u957f\u6cbb\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u4f7f\u5176\u53d8\u5f97\u66f4\u7b80\u5355\uff1a\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\uff0c\u6839\u636e\u6211\u4eec\u7684\u7ecf\u9a8c\u77e5\u9053\uff0c\u51b3\u5b9a\u623f\u5b50\u4ef7\u683c\u7684\u56e0\u7d20\u5176\u5b9e\u662f\\n\\n\\n\u4ef7\u683c/\u9762\u79ef = \u5e73\u65b9\u4ef7\\n\\n![image-20240304222249022](/img/machine_learning/image-20240304222249022.png)\\n\\n\u9ad8\u8005\u5c5e\u4e8e\u5317\u4eac\uff0c\u4f4e\u7684\u5219\u662f\u957f\u6cbb\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u9608\u503c\uff0c\u5c06\u5176\u8fdb\u884c\u5212\u5206\u3002\\n\\n> **\u4e0a\u8ff0\u5c31\u662f\u6700\u7b80\u5355\u7684\u5206\u7c7b\u95ee\u9898\uff0c\u53ea\u6709\u4ef7\u683c\u548c\u9762\u79ef\u4e24\u4e2a\u7ef4\u5ea6\u3002**\\n\\n### \u591a\u7ef4\u5ea6\u5206\u7c7b\\n\\n\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5224\u65ad\u623f\u5b50\u503c\u4e0d\u503c\u5f97\u8d2d\u4e70\u3002\u4e0d\u53ef\u80fd\u53ea\u6709 **\u623f\u4ef7 & \u9762\u79ef** \u4e24\u4e2a\u56e0\u7d20\uff0c\u53ef\u80fd\u8fd8\u6709 **\u697c\u5c42\u3001\u901a\u52e4\u3001\u5e74\u9650\u3001\u73af\u5883** \u7b49\u5176\u4ed6\u56e0\u7d20\u3002\u95ee\u9898\u7684\u672c\u8d28\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u6700\u7ec8\u6211\u4eec\u90fd\u662f\u6839\u636e\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u5224\u65ad\u503c\u4e0d\u503c\u5f97\u8d2d\u4e70\u3002\\n\\n![image-20240304222937185](/img/machine_learning/image-20240304222937185.png)\\n\\n> \u8fd9\u4e2a\u9608\u503c\u600e\u4e48\u5bfb\u627e\uff0c\u7528\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\u53bb\u5224\u5b9a\u3002\u6216\u8005\u8bf4\u8fd9\u4e2a\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\\n\\n#### \u63a8\u5bfc\u6570\u5b66\u7ed3\u8bba\\n\\n\u8fd9\u91cc\uff0c\u6211\u4eec\u8bbe \u623f\u4ef7 = x\uff0c\u9762\u79ef = y\uff1a\\n\\n```latex\\n\\n\u8bbe \u623f\u4ef7 \u4e3a x\uff0c\u9762\u79ef \u4e3a y\u3002 \\n\\n\u5219\u6709\\n x / y = \u5e73\u7c73\u4ef7\\n\\n```\\n\\n\u8bbe\u5c06\u5317\u4eac\u548c\u957f\u6cbb\u533a\u5206\u5f00\u7684\u9608\u503c\u4e3a `0.69` \uff0c\u5219 `x/y > 0.69` \u5c31\u662f\u5317\u4eac\uff0c\u53cd\u4e4b\u5219\u662f\u957f\u6cbb\u3002 \\n\\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u516c\u5f0f\u53d8\u5f62\uff0c\u5373\u53ef\u5f97\u5230\u51fd\u6570 f \u7684\u51fd\u6570\u8868\u8fbe\u5f0f\\n\\n```latex\\n\\nf(x,y) = x - 0.69y = 0\\n\\n```\\n\\n\u4ece\u516c\u5f0f\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u65f6\u5019\u7684\u9608\u503c\u53d8\u6210\u4e86 `0`\uff0c\u5927\u4e8e  `0` \u8868\u793a\u5317\u4eac\uff0c\u5c0f\u4e8e\u8868\u793a\u957f\u6cbb\u3002\u8fd9\u91cc\u53ea\u8003\u8651\u4e86\u623f\u4ef7\u548c\u9762\u79ef\u4e24\u4e2a\u56e0\u7d20\u3002\u66f4\u73b0\u5b9e\u7684\u60c5\u51b5\u662f\uff1a\u56e0\u4e3a\u5176\u4ed6\u56e0\u7d20\u7684\u53c2\u4e0e\uff0c\u9608\u503c\u53ef\u80fd\u4e0d\u4f1a\u6070\u597d\u7b49\u4e8e `0`\uff0c\u53ef\u80fd\u662f `101`\u3002\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u52a0\u5165\u4e00\u4e2a`\u504f\u79fb\u91cf` \u5bf9\u9608\u503c\u8fdb\u884c\u6821\u51c6\u3002\\n\\n```latex\\n\\nf(x,y) = x - 0.69y - 101 = 0\\n\\n```\\n\\n![image-20240304224032237](/img/machine_learning/image-20240304224032237.png)\\n\\n\u6b64\u65f6\uff0c\u6211\u4eec\u89c2\u5bdf\u8fd9\u4e2a\u51fd\u6570\u8868\u8fbe\u5f0f\uff1a\\n\\n\u5982\u679c y \u7684\u53d6\u503c\u589e\u52a0\u4e86 100\uff0c\u51fd\u6570\u503c\u52bf\u5fc5\u53d1\u751f\u53d8\u5316\u3002\u4f46\u662f\u53ea\u8981\u540c\u65f6\u5bf9 x \u7684\u503c\u505a\u51fa\u4fee\u6b63\uff0c\u5c31\u53ef\u4ee5\u62b5\u6d88\u51fd\u6570\u503c\u53d1\u751f\u7684\u53d8\u5316\uff0c\u5373\\n\\n```latex\\n\\nf(x,y) = x - 0.69y - 101 = 0 \\n     [+69]  \\\\quad   [+100]\\n\\n```\\n\\n\u6b64\u65f6\uff0c\u5728\u51fd\u6570 f \u4e2d\uff0cx \u7684 +69 \u548c y \u7684 -100 \u5728\u6570\u5b66\u5173\u7cfb\u4e0a\u7b49\u4ef7\u3002\u4f46\u662f\u5728\u7269\u7406\u610f\u4e49\u4e0a\uff0cx \u4ee3\u8868\u7684\u662f\u623f\u4ef7\uff0cy \u4ee3\u8868\u7684\u662f\u9762\u79ef\u3002`\u5355\u4f4d/\u91cf\u7eb2` \u4e0d\u540c\uff0c\u65e0\u6cd5\u8fdb\u884c\u516c\u5ea6\u3002\\n\\n```latex\\n\\nf(x,y) = x - 0.69y - 101 = 0 \\n     [+69]  \\\\quad   [+100]  \\n    (\u4e07\u5143)   \\\\quad   (\u7c73^2)\\n\\n```\\n\\n\u5728\u5f53\u524d\u7684\u51fd\u6570\u4e2d\uff0c\u4ed6\u4eec\u662f\u53ef\u4ee5\u8fdb\u884c\u6362\u7b97\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u5bf9\u51fd\u6570 f \u7684\u53d6\u503c\u505a\u51fa\u4e86\u8d21\u732e\u3002\u6362\u7b97\u7684\u65b9\u5f0f\u6765\u81ea\u4e8e\u5bf9\u51fd\u6570\u503c\u8d21\u732e\u7684\u5927\u5c0f\u3002\u5373\uff1a\\n\\n![image-20240304225027111](/img/machine_learning/image-20240304225027111.png)\\n\\n\u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cx \u548c y \u5bf9\u51fd\u6570\u503c\u7684\u8d21\u732e\u6b63\u597d\u662f x \u548c y \u7684\u7cfb\u6570\u3002\\n\\n\u56de\u5934\u770b\u5c06\u624d\u6570\u636e\u7ef4\u5ea6\u5f88\u591a\u7684\u60c5\u51b5\uff1a\\n\\n```markdown\\n\\n\u8bbe \u6570\u636e\u7ef4\u5ea6\u4f9d\u6b21\u4e3a x_1, x_2, x_3.....  \\n\u5219 \\nf(x_1, x_2, x_3, x_4...) = x_1 + x_2 + x_3 + x_4 + b  \\n\u6839\u636e\u4e0a\u8ff0\u5bf9 x \u548c y \u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u53d8\u6210\uff1a\\nw_1x_1 + w_2x_2 + w_3x_3 + w_4x_4 + ... + b = y\\n\\n```\\n\\n\u5176\u4e2d\u51fd\u6570\u503c y \u5c31\u662f\u623f\u5b50\u662f\u5426\u503c\u5f97\u8d2d\u4e70\u7684\u4f9d\u636e\u3002\\n\\n\u6839\u636e\u4e0a\u9762\u6211\u4eec\u7684\u63a8\u5bfc\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u662f\u6709\u610f\u4e49\u7684\uff1a\\n\\n![image-20240304225603259](/img/machine_learning/image-20240304225603259.png)\\n\\nw \u7684\u7cfb\u6570\u4e3a\u5bf9\u51fd\u6570\u503c\u7684\u8d21\u732e\u7a0b\u5e8f\uff0cb \u4e3a\u9608\u503c\u7684\u504f\u79fb\u91cf\u3002\\n\\n> \u89c4\u8303\u6570\u5b66\u8868\u8fbe\u4e3a\uff1aw -> \u6743\u91cd\u7cfb\u6570\u3001b -> \u504f\u7f6e\u7cfb\u6570\u3002\\n\\n\u5728\u5750\u6807\u7cfb\u4e2d\u8868\u8fbe\u4e3a\uff1a\uff08\u4e3a\u4e86\u753b\u56fe\u65b9\u4fbf\uff0c\u56de\u5230\u4e8c\u7ef4\u7cfb\u6570\u8868\u8fbe\uff09\\n\\n![image-20240304225807953](/img/machine_learning/image-20240304225807953.png)\\n\\n\u524d\u9762\u8ba8\u8bba\u7684\u9608\u503c\u5373\u4e3a\u4e0b\u56fe\u4e2d\u7684\u5206\u754c\u7ebf\uff1a\\n\\n![image-20240304225842374](/img/machine_learning/image-20240304225842374.png)\\n\\n#### \u52a0\u5165\u53c2\u6570\u5347\u7ef4\\n\\n\u6839\u636e\u6570\u5b66\u539f\u7406\uff0c\u4e0d\u540c\u7684\u9608\u503c\u5373\u4ee3\u8868\u4e86\u4e0d\u540c\u7684\u5206\u754c\u7ebf\u3002\u5f53\u8fd9\u6761\u76f4\u63a5\u786e\u5b9a\u4e0b\u6765\u4e4b\u540e\uff0c\u5bf9\u6570\u636e\u7684\u5212\u5206\u4e5f\u968f\u4e4b\u786e\u5b9a\u3002\u5c06\u4e0d\u540c\u7684\u7cfb\u6570\u5e26\u5165\u53d8\u91cf x \u548c y \u5c31\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\\n\\n\u5982\u679c\u6211\u4eec\u5f15\u5165\u66f4\u591a\u7684\u7ef4\u5ea6\u7cfb\u6570\uff0c\u5bf9\u5750\u6807\u7cfb\u5347\u7ef4\u3002\u5219\uff1a\\n\\n![image-20240304230033743](/img/machine_learning/image-20240304230033743.png)\\n\\n\u5728\u66f4\u9ad8\u7ef4\u5ea6\u4e2d\uff0c\u7ecf\u5e38\u4f7f\u7528\u5411\u91cf\u548c\u77e9\u9635\u7684\u8868\u8fbe\u5f62\u5f0f\uff1a\\n\\n```latex\\n\\nw_1x_1 + w_2x_2 + w_3x_3 + w_4x_4 + \\\\cdots + b  \\\\\\\\ \\\\\\\\\\n\u5c06\u5176\u8f6c\u5316\u4e3a\u5411\u91cf\u548c\u77e9\u9635\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a\\\\\\\\\\\\\\\\\\n\\\\left[\\n\\\\begin{matrix}\\nw_1 & w_2 & w_3 & w_4 & \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nx_1 \\\\\\\\ x_2 \\\\\\\\ x_3 \\\\\\\\ s_4 \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n+b \\\\\\\\\\\\\\\\\\n\u4ee3\u8868\u884c\u5411\u91cf\u548c\u5217\u5411\u91cf\u9010\u9879\u76f8\u4e58\uff0c\u518d\u76f8\u52a0 \\\\\\\\\\n\u4e3a\u4e86\u8ba9\u8868\u8fbe\u5f62\u5f0f\u66f4\u52a0\u7d27\u51d1\uff0c\u901a\u5e38\u5bf9\u884c\u5411\u91cf\u8fdb\u884c\u8f6c\u7f6e\uff0c\u518d\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\uff1a\\\\\\\\\\\\\\\\\\n\\\\left[\\n\\\\begin{matrix}\\nw_1 \\\\\\\\ w_2 \\\\\\\\ w_3 \\\\\\\\ w_4 \\\\\\\\ \\\\cdots \\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nx_1 \\\\\\\\ x_2 \\\\\\\\ x_3 \\\\\\\\ s_4 \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n+b \\\\\\\\\\\\\\\\\\n\\n\u901a\u5e38\u5411\u91cf\u548c\u77e9\u9635\uff0c\u901a\u5e38\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u6765\u8868\u793a\uff0c\u5373\uff1a\\\\\\\\\\\\\\\\\\nf(X) = W^\\\\mathrm T \xb7 X + b \\\\\\\\\\n\\n\u53e6\u5916\u4e00\u79cd\u8868\u8fbe\u5f62\u5f0f\u662f\u5c06\u504f\u7f6e\u7cfb\u6570\u540c\u6837\u5199\u8fdb\u5230\u77e9\u9635\u4e2d\uff1a \\\\\\\\\\\\\\\\\\n\\\\left[\\n\\\\begin{matrix}\\nw_1 \\\\\\\\ w_2 \\\\\\\\ w_3 \\\\\\\\ w_4 \\\\\\\\ \\\\cdots \\\\\\\\ b\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nx_1 \\\\\\\\ x_2 \\\\\\\\ x_3 \\\\\\\\ s_4 \\\\\\\\ \\\\cdots \\\\\\\\ 1\\n\\\\end{matrix}\\n\\\\right] \\\\\\\\\\\\\\\\\\n\u51fd\u6570\u8868\u8fbe\u5f0f\u4e3a\uff1a\\\\\\\\\\nf(X) = W^\\\\mathrm T \xb7 X\\n\\n```\\n\\n\u5728\u524d\u9762\u7684\u8ba8\u8bba\u4e2d\uff0c\u786e\u5b9a\u4e86\u6570\u636e\u7684\u9608\u503c\uff08\u5206\u754c\u7ebf\u4e4b\u540e\uff09\u3002\u4e0b\u4e00\u6b65\u884c\u4e3a\u5728 `\u673a\u5668\u5b66\u4e60` \u4e2d\u79f0\u4e3a **\u51b3\u7b56/\u9884\u6d4b**\u3002\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u8f93\u5165\u7684\u6570\u636e\uff0c\u901a\u8fc7 x \u548c y \u5728\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u6765\u5224\u65ad\u5904\u4e8e\u5206\u754c\u7ebf\u54ea\u4e00\u8fb9\u3002\u5728\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u4e0d\u80fd\u76f4\u63a5\u53bb\u770b\u56fe\u50cf\u3002\u800c\u662f\u8981\u5c06\u53c2\u6570\u503c\u4ee3\u5165\u5230\u51fd\u6570\u4e2d\uff0c\u8ba1\u7b97\u51fa\u51fd\u6570\u503c\uff0c\u548c 0 \u6bd4\u8f83\uff0c\u8fdb\u884c\u5224\u65ad\u3002\\n\\n> \u5230\u8fd9\u4e00\u6b65\uff0c\u673a\u5668\u5b66\u4e60\u7684\u95ee\u9898\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u673a\u5668\u5b66\u4e60\u7684\u96be\u70b9\u662f\u5728\u4e8e\u5982\u4f55\u786e\u5b9a\u4e00\u6761\u6700\u597d\u7684\u5206\u754c\u7ebf\uff0c\u5373\u786e\u5b9a\u9608\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a**\u8bad\u7ec3/\u5b66\u4e60**\u3002\u548c\u52a8\u89c4\uff0c\u8d2a\u5fc3\u7b49\u7b97\u6cd5\u4e0d\u540c\u7684\u662f\uff0c**\u673a\u5668\u5b66\u4e60\u53ea\u9700\u8981\u5728\u521a\u5f00\u59cb\u65f6\u5bf9\u5927\u91cf\u590d\u6742\u7684\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\uff0c\u786e\u5b9a\u51fa\u6765\u5173\u7cfb\u3002\u5728\u9762\u5bf9\u65b0\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\u5c31\u53ef\u4ee5\u8fbe\u6210\u76ee\u6807\u3002**\u90a3\u4e48\uff0c\u673a\u5668\u5b66\u4e60\u5e76\u6ca1\u6709\u51cf\u5c11\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u76f8\u6bd4\u4e4b\u4e0b\u800c\u8a00\uff0c\u53ea\u662f\u63d0\u9ad8\u7684 \u51b3\u7b56/\u8bad\u7ec3 \u7684\u5e94\u7528\u6548\u80fd\u3002\\n>\\n> \u6240\u4ee5\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4e86\u89e3\u5982\u4f55\u53bb`\u8bad\u7ec3\u548c\u5b66\u4e60`\u3002\\n\\n## \u8bad\u7ec3 & \u5b66\u4e60\\n\\n> \u8bad\u7ec3/\u5b66\u4e60 \u7684\u76ee\u7684\u5f88\u660e\u786e\uff0c\u5373\u5728\u5750\u6807\u7cfb\u4e2d\u786e\u5b9a\u8fd9\u6761\u5206\u754c\u7ebf\uff01\u540c\u6837\uff0c\u673a\u5668\u5b66\u4e60\u7684\u96be\u70b9\u4e5f\u5728\u8fd9\u91cc\u3002\\n\\n![image-20240305195959121](/img/machine_learning/image-20240305195959121.png)\\n\\n![image-20240305195942932](/img/machine_learning/image-20240305195942932.png)\\n\\n\u5982\u56fe\uff0c\u4e0a\u8ff0\u4e24\u6761\u76f4\u7ebf\uff0c\u90fd\u80fd\u5bf9\u73b0\u6709\u6570\u636e\u8fdb\u884c\u5b8c\u7f8e\u5212\u5206\u3002\u4f46\u662f\u54ea\u6761\u76f4\u7ebf\u662f\u6700\u4f18\u89e3\uff1f\u5f80\u5f80\u73b0\u5b9e\u60c5\u51b5\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u800c\u662f\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![image-20240305200117035](/img/machine_learning/image-20240305200117035.png)\\n\\n\u5373\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u6700\u4f18\u89e3\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u8fdb\u884c\u5b8c\u7f8e\u5212\u5206\u3002\u53ea\u80fd\u4ece\u73b0\u6709\u7684\u76f4\u7ebf\u4e2d\uff0c\u6311\u9009\u4e00\u6761\u7b26\u5408\u5927\u591a\u6570\u60c5\u51b5\uff0c\u80fd\u5c06\u5927\u591a\u6570\u6570\u636e\u533a\u5206\u5f00\u7684\u76f4\u7ebf\u3002\\n\\n\u90a3\u4e48\u5982\u4f55\u786e\u5b9a\u8fd9\u6761\u76f4\u7ebf\u662f\u4e0d\u662f\u7b26\u5408\u73b0\u6709\u7684\u9884\u671f\uff1f\u5bf9\u6b64\uff0c**\u5c31\u9700\u8981\u6709\u4e00\u4e2a\u5224\u65ad\u5206\u754c\u7ebf\u597d\u574f\u7684\u5224\u65ad\u6807\u51c6\u3002**\u5728\u9762\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u96c6\u65f6\uff0c\u6311\u9009\u51fa\u7684\u76f4\u7ebf\u53ef\u80fd\u4e0d\u540c\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u6570\u636e\uff0c\u76f4\u7ebf\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002**\u6ce8\u610f\uff1a\u673a\u5668\u5b66\u4e60\u7684\u76ee\u7684\u662f\u9884\u6d4b\uff0c\u800c\u4e0d\u662f\u8bad\u7ec3\u3002**\u5728\u5f53\u524d\u7684\u6570\u636e\u96c6\u8303\u56f4\u4e2d\uff0c\u53ea\u80fd\u505a\u5230\u5f53\u524d\u60c5\u51b5\u5206\u754c\u7ebf\u6700\u597d\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5bf9\u65b0\u6765\u7684\u6570\u636e\u4e5f\u662f\u6700\u597d\u3002\u8fd9\u4e5f\u662f\u9009\u62e9`\u5224\u65ad\u6807\u51c6`\u6700\u56f0\u96be\u7684\u5730\u65b9\u3002\u5f53\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2a\u5224\u65ad\u6807\u51c6\u4e4b\u540e\uff0c\u6807\u51c6\u4e4b\u4e2d\u5c31\u5305\u542b\u4e86\u6211\u4eec\u5bf9\u672a\u6765\u6570\u636e\u7684\u4e00\u79cd\u9884\u6d4b\u3002\u8fd9\u4e2a\u9884\u6d4b\u65e0\u6cd5\u5728\u6570\u5b66\u903b\u8f91\u4e0a\u627e\u5230\u7b54\u6848\uff0c\u6240\u4ee5\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u5fc5\u987b\u8981\u5f15\u5165**\u989d\u5916\u7684\u516c\u8bbe**\u3002\\n\\n### \u5f15\u5165\u989d\u5916\u516c\u8bbe\\n\\n![image-20240305201027218](/img/machine_learning/image-20240305201027218.png)\\n\\n\u4ece\u56fe\u4e2d\u770b\uff0c\u6bcf\u4e2a\u70b9\u5230\u5206\u754c\u7ebf\u7684\u8ddd\u79bb\u5927\u5c0f\u4e0d\u4e00\uff0c\u6240\u6709\u8fd9\u4e9b\u70b9\u4e2d\uff0c\u5bf9\u5206\u754c\u7ebf\u6700\u5c0f\u7684\u54ea\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u5206\u754c\u7ebf\u5bf9\u6570\u636e\u5212\u5206\u7684\u95f4\u9694\uff1a\\n\\n![image-20240305201149190](/img/machine_learning/image-20240305201149190.png)\\n\\n\u901a\u8fc7\u5df2\u6709\u7684\u76f4\u89c9\u5224\u65ad\uff0c\u5e94\u8be5\u662f\u5206\u754c\u7ebf\u5230\u70b9\u7684\u8ddd\u79bb\u8d8a\u5927\u8d8a\u597d\u3002\u5176\u4e2d\u7684\u95f4\u9694\u53ef\u4ee5\u5bb9\u7eb3\u66f4\u591a\u7684\u70b9\u3002\\n\\n![image-20240305201251937](/img/machine_learning/image-20240305201251937.png)\\n\\n#### \u516c\u8bbe\u6761\u4ef6 1\\n\\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u516c\u8bbe\uff1a**\u95f4\u9694\u8d8a\u5927\u8d8a\u597d**\\n\\n\u90a3\u4e48\uff0c\u8fd9\u91cc\u7684\u95f4\u9694\u5982\u4f55\u8ba1\u7b97\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u4ea4\u7ed9\u8ba1\u7b97\u673a\u53bb\u5224\u65ad\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u95f4\u9694\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f\uff1a\\n\\n1. \u6211\u4eec\u9700\u8981\u77e5\u9053\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb \uff0c\u8868\u8fbe\u5f0f\u4e3a\uff08\u5e26\u5165 x \u548c y \u65e0\u6cd5\u76f4\u63a5\u5f97\u5230\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff0c\u9700\u8981\u505a\u4e00\u4e9b\u4fee\u9970\uff09\uff1a\\n   \\n   ```latex\\n   \\n   \\\\frac{1}{\\\\|W\\\\|_2} \\\\|f(X)\\\\| \\\\\\\\\\n   \\\\|W\\\\|_2 \\\\text{\uff08\u6743\u91cd\u7cfb\u6570\u7684 } L_2 \\\\text{ \u8303\u6570\uff09\u8fd9\u91cc\u7684 } L_2 \\\\text{ \u8303\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a \u52fe\u80a1\u5b9a\u7406\u5728\u66f4\u9ad8\u7ef4\u5ea6\u4e0a\u7684\u6269\u5c55\uff0c\u5373} \\\\\\\\\\n   \\\\|W\\\\|_2 = \\\\sqrt{w_1^2 + w_2^2 + w_3^2 + w_4^2 + \\\\cdots} \\\\\\\\\\n   \\\\text{\u5bf9\u5411\u91cf\u91cc\u7684\u6bcf\u4e2a\u5206\u91cf\u8fdb\u884c\u5e73\u65b9\u518d\u5f00\u65b9\u3002}\\n   \\n   ```\\n\\n2. \u5bf9\u4e0a\u8ff0\u7684\u6bcf\u4e2a\u70b9\u8fdb\u884c 1 \u7684\u8fd0\u7b97\uff0c\u5373\u53ef\u5f97\u5230\u6240\u6709\u70b9\u5230\u76f4\u7ebf\u7684\u95f4\u9694\uff08\u7528 M(W) \u6765\u8868\u793a\u76f4\u7ebf\u95f4\u9694\u51fd\u6570\uff09\uff1a\\n   \\n   ```latex\\n   \\n   M(W)=\\\\underset {i=1,2,3 \\\\cdots N}{min}\\\\frac{1}{\\\\begin{Vmatrix}W\\\\end{Vmatrix}}_2\\\\begin{vmatrix}f(X^{(i)})\\\\end{vmatrix} \\\\\\\\\\\\\\\\\\n   \\n   ```\\n\\n3. \u5c06\u6240\u6709\u6570\u636e\u5e26\u5165\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5728\u4e0d\u8003\u8651\u673a\u5668\u7b97\u529b\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u673a\u5c31\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e9b\u8ba1\u7b97\u3002\\n\\n\u8fdb\u884c\u4e0a\u8ff0\u64cd\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u3002\u8fd9\u4e00\u5207\u7684\u524d\u63d0\u662f\u6211\u4eec\u5bf9 `f(x)` \u8fd9\u6837\u7684\u51fd\u6570\u503c\u8fdb\u884c\u4e86\u4e0a\u8ff0\u4fee\u9970\u3002\u65e2\u7136\u8fd9\u91cc\u662f\u516c\u8bbe\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u552f\u4e00\u3002\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u6709\u7b2c\u4e8c\u79cd\u516c\u8bbe\u3002\u540c\u6837\uff0c\u6211\u4eec\u80fd\u5076\u5229\u7528\u7684\u53ea\u6709\u51fd\u6570\u503c\uff0c\u4ecd\u7136\u5bf9\u5176\u8fdb\u884c\u4fee\u9970\uff0c\u5f97\u51fa\u524d\u63d0\u5047\u8bbe\u3002\\n\\n\u8fd9\u6b21\u7684\u4fee\u9970\u662f\u5bf9\u5176\u8fdb\u884c `sigmoid(f(x))` \u64cd\u4f5c\uff1a\\n\\n```latex\\n\\nsigmod(f(x)) \\\\in (0,1)\\n\\n```\\n\\n\u901a\u8fc7 `sigmoid \u64cd\u4f5c`\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u503c\u7f29\u653e\u5230 `0 ~ 1` \u4e4b\u95f4\u3002`sigmoid`\u51fd\u6570\u56fe\u50cf\u5982\u4e0b\uff1a\\n\\n![image-20240305203942962](/img/machine_learning/image-20240305203942962.png)\\n\\n\u5b9a\u4e49\u57df\u4e3a\u5168\u4f53\u5b9e\u6570\uff0c\u503c\u57df\u4e3a `0 - 1` \u7684\u5f00\u533a\u95f4\u3002`0 - 1` \u7684\u5f00\u533a\u95f4\uff0c\u5f88\u5bb9\u6613\u8ba9\u6211\u4eec\u60f3\u5230\u6982\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u628a\u7ecf\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u503c\u770b\u4f5c\u662f\u4e00\u4e2a\u6982\u7387\u503c\u5462\uff1f\\n\\n#### \u516c\u8bbe\u6761\u4ef6 2\\n\\n\u6211\u4eec\u5c06\u51fd\u6570\u503c\u770b\u4f5c\u662f\u5982\u4e0b\u7684\u6761\u4ef6\u6982\u7387\uff1a\\n\\n```latex\\n\\nP(X = X^{(i)} \\\\mid W)=sigmod(f(x^{(i)}))\\n\\n```\\n\\n\u8fd9\u4e2a\u6982\u7387\u7684\u610f\u4e49\u5c31\u4ee3\u8868\u4e86\u67d0\u4e00\u4e2a\u6570\u636e\u5728\u5317\u4eac\u8fd8\u662f\u957f\u6cbb\u7684\u53ef\u80fd\u6027\u3002\\n\\n![image-20240307140828845](/img/machine_learning/image-20240307140828845.png)\\n\\n\u5728\u5f53\u524d\u7684\u6570\u636e\u60c5\u51b5\u4e0b\uff0c\u5317\u4eac\u7684\u51fd\u6570\u503c\u5927\u4e8e 0 \uff0c\u957f\u6cbb\u7684\u51fd\u6570\u503c\u5c0f\u4e8e 0 \u3002\\n\\n```latex\\n\\n\u5317\u4eac\uff1aP(X = X^{(i)} \\\\mid W)=sigmod(f(x^{(i)}))  \\\\\\\\\\\\\\\\\\n\u957f\u6cbb\uff1aP(X = X^{(i)} \\\\mid W)=sigmod(-f(x^{(i)}))  \\\\\\\\ \u957f\u6cbb\u7684\u51fd\u6570\u503c\u5c0f\u4e8e 0 \uff0c\u6240\u4ee5\u8981\u5bf9\u51fd\u6570\u503c\u53d6\u9644\u5c5e\u518d\u8fdb\u884c sigmoid \u64cd\u4f5c\u3002 \\\\\\\\\\\\\\\\\\n\u6982\u7387\u503c\u8d8a\u5927\u5c31\u8868\u660e\u5c5e\u4e8e \u201c\u5317\u4eac/\u957f\u6cbb\u201d \u7684\u53ef\u80fd\u6027\u8d8a\u5927\uff0c\u53cd\u4e4b\u5219\u8d8a\u5c0f\u3002\\n\\n```\\n\\n\u57fa\u4e8e\u5f53\u524d\u7684\u7406\u89e3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u63d0\u51fa\u65b0\u7684\u516c\u8bbe\u6761\u4ef6\uff08\u7b2c\u4e8c\u79cd\u516c\u8bbe\uff09\uff1a\\n\\n**\u6982\u7387\uff08\u4f3c\u7136\uff09\u503c\u6700\u5927\u6700\u597d**\\n\\n\u6982\u7387\u503c\u6700\u5927\uff0c\u5c31\u5e94\u8be5\u662f\u6240\u6709\u70b9\u7684\u6982\u5ff5\u90fd\u6700\u5927\uff0c\u4ed6\u4eec\u662f\u76f8\u4e58\u7684\u5173\u7cfb\u3002\u5373\u6211\u4eec\u9700\u8981\u627e\u7684\u5c31\u662f\u5f53\\n\\n```latex\\n\\n\\\\underset{W} {max} \\\\prod_{i=0}^N P(X = X^{i}\\\\mid {W})\xb7 \\\\prod_{j = 0}^M P(X = X^{(i)} \\\\mid {W})\\n\\n```\\n\\n\u8868\u8fbe\u5f0f\u53d6\u503c\u6700\u5927\u65f6\uff0c\u7cfb\u6570 W \u7684\u503c\u3002\u4e0a\u8ff0\u8868\u8fbe\u5f0f\u6700\u5e38\u89c1\u7684\u5f62\u5f0f\u662f\uff1a\u4f7f\u7528 `log` \u8fd0\u7b97\u7b26\u5c06\u8fde\u4e58\u53d8\u4e3a\u8fde\u52a0\u3002\\n\\n\u7b2c\u4e09\u79cd\u516c\u8bbe\uff1a\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5047\u60f3\u51fa\u4e00\u4e2a\u5982\u4e0b\u7684\u51fd\u6570 `T(X)` \uff0c\u5b83\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5b8c\u7f8e\u5206\u7c7b\u3002\\n\\n```latex\\n\\nT(X)=\\n\\\\begin{cases}\\n1: X \\\\in {\u5317\u4eac} \\\\\\\\\\n0: X \\\\in {\u957f\u6cbb}\\n\\\\end{cases}\\n\\n```\\n\\n\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u7684\u8f93\u5165\uff0c\u90fd\u53ef\u4ee5\u5b8c\u7f8e\u7684\u5224\u65ad\u51fa\u5b83\u5c5e\u4e8e\u5317\u4eac\u8fd8\u662f\u957f\u6cbb\u3002\u5317\u4eac\u7684\u51fd\u6570\u503c\u4e3a 1 \uff0c\u957f\u6cbb\u7684\u51fd\u6570\u503c\u4e3a 0 \u3002\u56fe\u50cf\u8868\u793a\u4e3a\uff1a\\n\\n![image-20240307144321343](/img/machine_learning/image-20240307144321343.png)\\n\\n#### \u516c\u8bbe\u6761\u4ef6 3 \\n\\n\u90a3\u4e48\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728\u73b0\u5b9e\u60c5\u51b5\u4e2d\uff0c\u8fd9\u79cd\u51fd\u6570\u4e00\u5b9a\u4e0d\u5b58\u5728\uff0c\u603b\u662f\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u8bef\u5dee\u548c\u566a\u58f0\u5bf9 `T(X)` \u51fd\u6570\u4ea7\u751f\u5f71\u54cd\u3002\u8fd9\u91cc\u6211\u4eec\u7528 **\u03f5** \u8868\u793a\u7ed9\u51fd\u6570\u53e0\u52a0\u4e86\u4e00\u4e2a\u566a\u58f0\u3002\u5b83\u4e0d\u518d\u53d8\u5f97\u5b8c\u7f8e\u4e86\u3002\u51fd\u6570\u7684\u8f93\u51fa\u503c\u4f9d\u7136\u662f\u4f1a\u63a5\u8fd1 0 \u548c 1\u3002\\n\\n```latex\\n\\nT(X)+\\\\epsilon=\\n\\\\begin{cases}\\n1+\\\\epsilon: X \\\\in {\u5317\u4eac} \\\\\\\\\\n0+\\\\epsilon: X \\\\in {\u957f\u6cbb}\\n\\\\end{cases}\\n\\n```\\n\\n\u8fd9\u4e2a\u65f6\u5019 `sigmoid` \u51fd\u6570\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u8868\u793a\u53d7\u5230\u566a\u58f0\u5e72\u6270\u540e\u7684 `T(X)` \u51fd\u6570\u3002\\n\\n```latex\\n\\nT(X)+\\\\epsilon=sigmoid(f(X))\\n\\n```\\n\\n\u56fe\u8c61\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![Image](/img/machine_learning/image-20240308170315337.png)\\n\\n\u8fd9\u4e2a\u65f6\u5019\u6bcf\u4e00\u4e2a\u6570\u636e\u5f97\u5230\u7684 `sigmoid` \u51fd\u6570\u503c\u4e0e\u4ed6\u4eec\u518d T \u51fd\u6570\u4e2d\u53d6\u503c\u7684\u504f\u5dee\u5c31\u662f\u53e0\u52a0\u4e4b\u540e\u7684\u566a\u58f0 **\u03f5** \u3002\u6700\u597d\u7684\u5206\u754c\u7ebf\uff0c\u5fc5\u7136\u662f **\u03f5** \u6700\u5c0f\u7684\u65f6\u5019\u5bf9\u5e94\u7684\u5206\u754c\u7ebf\u3002\u5373\uff1a**\u65b9\u5dee\u6700\u5c0f\u6700\u597d**\u3002\\n\\n```latex\\n\\n\\\\underset{W}{min}\\\\sum_{i=0}^N(y-\\\\hat{y})^2\\n\\n```\\n\\n```latex\\n\\ny=\\n\\\\begin{cases}\\n1: X \\\\in {\u5317\u4eac} \\\\\\\\\\n0: X \\\\in {\u957f\u6cbb}\\n\\\\end{cases}\\n\\n```\\n\\n```latex\\n\\n\\\\hat{y}=sigmoid(f(X))\\n\\n```\\n\\n\u7b2c\u4e09\u79cd\u516c\u8bbe\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a\\n\\n```latex\\n\\n\\\\sigma^2=(y-\\\\hat{y})^2\\n\\n```\\n\\n\u4e0a\u8ff0\u63d0\u5230\u7684\u4e09\u79cd\u516c\u8bbe\u8868\u793a\u4e3a\uff1a\\n\\n- \u7c89\u7ea2\u8272\uff1a\u65b9\u5dee\u6700\u5c0f\u6700\u597d\uff1b\\n- \u6a59\u8272\uff1a\u6982\u7387\u6700\u5927\u6700\u597d\uff1b\\n- \u7eff\u8272\uff1a\u95f4\u9694\u6700\u5927\u6700\u597d\u3002\\n\\n![image-20240308170851932](/img/machine_learning/image-20240308170851932.png)\\n\\n\u6211\u4eec\u77e5\u9053\uff0c\u516c\u8bbe\u4e0d\u540c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u4e0d\u540c\uff0c\u5230\u5e95\u90a3\u79cd\u7ed3\u679c\u6700\u597d\uff1f\\n\\n\u6ca1\u6709\u7406\u8bba\u4e0a\u7684\u6807\u51c6\u7b54\u6848\uff0c\u8fd8\u662f\u8981\u770b\u771f\u5b9e\u95ee\u9898\u662f\u4ec0\u4e48\u3002\\n\\n\u8fd9\u91cc\u7684\u4e09\u79cd\u516c\u8bbe\u6761\u4ef6\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n\\n```latex\\n\\n\u516c\u8bbe\uff1a\\\\begin{cases}\\n\u4fee\u9970\u516c\u5ea6\u7ed3\u679c \\\\\\\\\\n\u4e3a\u516c\u5ea6\u7ed3\u679c\u8d4b\u4e88\u73b0\u5b9e\u610f\u4e49 \\\\\\\\\\n\u7528\u73b0\u5b9e\u610f\u4e49\u5c06\u4e00\u76f4\u5916\u63a8\u81f3\u672a\u77e5\\n\\\\end{cases}\\n\\n```\\n\\n\u6240\u6709\u7684\u516c\u8bbe\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u5bf9\u5df2\u77e5\u73b0\u5b9e\u7684\u603b\u7ed3\u5f52\u7eb3\uff0c\u662f\u5bf9\u672a\u77e5\u60c5\u51b5\u7684\u7ecf\u9a8c\u603b\u7ed3\u3002\\n\\n\u867d\u7136\u8fd9\u91cc\u5199\u51fa\u4e86\u5224\u65ad\u6807\u51c6\u7684\u6570\u5b66\u65b9\u7a0b\uff0c\u4f46\u662f\u6c42\u51fa\u89e3\u6790\u89e3\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff0c\u56f0\u96be\u91cd\u91cd\u3002\u8fd9\u91cc\u5982\u4f55\u9009\u62e9\u6700\u5408\u9002\u7684\u7b97\u6cd5\u66f4\u5feb\u3001\u66f4\u597d\u7684\u6c42\u51fa\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u89e3\u3002\u5c31\u662f\u673a\u5668\u5b66\u4e60\u7684\u53e6\u4e00\u9879\u91cd\u8981\u5de5\u4f5c\uff1a\u7b97\u6cd5\u3002\\n\\n\u867d\u7136\u7b97\u6cd5\u975e\u5e38\u591a\uff0c\u4f46\u662f\u9488\u5bf9\u795e\u7ecf\u7f51\u7edc\uff0c\u63d0\u5230\u7b97\u6cd5\u5c31\u662f\u5728\u7279\u6307 `\u68af\u5ea6\u4e0b\u964d\u6cd5`\u3002\\n\\n> \u516c\u8bbe\u7684\u5e38\u89c1\u53eb\u6cd5\u662f\u7b56\u7565\u3002 \u7b97\u6cd5\uff0c\u7b56\u7565\u52a0\u4e0a\u6a21\u578b\uff0c\u5c31\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e09\u5927\u8981\u7d20\u3002\\n\\n## \u673a\u5668\u5b66\u4e60\u4e2d\u7684\u6a21\u578b\\n\\n### \u6570\u636e\u6a21\u578b\u5206\u7c7b\u95ee\u9898\\n\\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u770b\u7684\u5c31\u662f\u6a21\u578b\u3002\u6a21\u578b\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5bf9`\u6570\u636e\u7684\u5206\u7c7b`\uff0c\u4e3a\u4ec0\u4e48\u8981\u9009\u62e9\u76f4\u7ebf\uff1f\u5982\u4e0b\u7684\u6570\u636e\u5206\u7c7b\u56fe\uff1a\\n\\n![image-20240308172044116](/img/machine_learning/image-20240308172044116.png)\\n\\n\u9762\u5bf9\u8fd9\u79cd\u6570\u636e\u5206\u7c7b\u7684\u65f6\u5019\uff0c\u65e0\u8bba\u76f4\u7ebf\u600e\u4e48\u653e\u7f6e\uff0c\u90fd\u4f1a\u5b58\u5728\u95ee\u9898\u3002\u4f46\u662f\u4f7f\u7528\u4e0b\u9762\u7684\u629b\u7269\u7ebf\uff0c\u5c31\u80fd\u51c6\u786e\u5212\u5206\u6570\u636e\u3002\\n\\n![image-20240307152553927](/img/machine_learning/image-20240307152553927.png)\\n\\n\u629b\u7269\u7ebf\u65b9\u7a0b\u5982\u4e0b\uff1a`\u53ef\u4ee5\u770b\u5230\u76f8\u6bd4\u76f4\u7ebf\u65b9\u7a0b\uff0c\u53ea\u591a\u4e86\u4e00\u4e2a x1 \u7cfb\u6570\u7684\u4e8c\u6b21\u9879`\\n\\n```latex\\n\\nw_1x_1^2+w_2x_1-x_2+b=0\\n\\n```\\n\\n![image-20240307152639893](/img/machine_learning/image-20240307152639893.png)\\n\\n\u8fd9\u91cc\uff0c\u5982\u679c\u6211\u4eec\u518d\u589e\u52a0 \u4e00\u4e2a x2 \u7ef4\u5ea6\u7684\u4e8c\u6b21\u9879\uff0c\u8fd8\u53ef\u4ee5\u53d8\u5316\u6210\u4e3a\u692d\u5706\u5f62\u7684\u5206\u754c\u7ebf\u3002\\n\\n```latex\\n\\nw_1x_1^2+w_2x_2^2+w_3x_1+w_4x_2+b=0\\n\\n```\\n\\n\u589e\u52a0 x3 \u7cfb\u6570\u7684\u4e8c\u6b21\u9879\u65f6\uff0c\u4f1a\u53d8\u6210\u53cc\u66f2\u7ebf\u3002\u5bf9\u6570\u636e\u5206\u7c7b\u66f4\u52a0\u51c6\u786e\u3002\\n\\n![image-20240307152700317](/img/machine_learning/image-20240307152700317.png)\\n\\n```latex\\n\\nw_1x_1^2+w_2x_22+w_3x_1x_2+w_4x_1+w_5x_2+b=0\\n\\n```\\n\\n> \u524d\u4eba\u5df2\u7ecf\u8bc1\u660e\u8fc7\uff0c\u53ea\u8981\u589e\u52a0\u66f4\u591a\u7684\u9ad8\u6b21\u9879\uff0c\u90a3\u4e48\u4e0d\u8bba\u591a\u4e48\u5947\u602a\u7684\u5206\u5272\u7ebf\u90fd\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u3002\\n>\\n> \u968f\u7740\u9879\u6570\u7684\u589e\u52a0\uff0c\u590d\u6742\u7a0b\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u5927\u3002\u4e5f\u5c31\u662f\u8bf4\u6a21\u578b\u7684\u590d\u6742\u7a0b\u5ea6\u8d8a\u9ad8\u3002\\n\\n\u4e3a\u4e86\u56fe\u5f62\u8868\u793a\u65b9\u4fbf\uff0c\u6682\u65f6\u8fd9\u91cc\u53ea\u9488\u5bf9 x1 \u7ef4\u5ea6\u589e\u52a0\u66f4\u9ad8\u6b21\u9879\u3002\\n\\n```latex\\n\\n\\\\cdots+w_1x_1^3+w_2x_1^2+w_3x_1+w_4x_2+b=0\\n\\n```\\n\\n\u56fe\u50cf\u8868\u793a\u4e3a\uff1a\\n\\n![image-20240307153214331](/img/machine_learning/image-20240307153214331.png)\\n\\n\u7528\u5411\u91cf\u70b9\u79ef\u7684\u5f62\u5f0f\u8868\u793a\u4e3a\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\n\\\\cdots \\\\\\\\ 0.00 \\\\\\\\ 0.00 \\\\\\\\ -0.20 \\\\\\\\ 0.50 \\\\\\\\ 4.60 \\\\\\\\ -1.00 \\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\n\\\\cdots \\\\\\\\ x_1^5 \\\\\\\\ x_1^4 \\\\\\\\ x_1^3 \\\\\\\\ x_1^2 \\\\\\\\ x_1 \\\\\\\\ x_2\\n\\\\end{matrix}\\n\\\\right] \\\\\\\\\\\\\\\\\\n\\n```\\n\\n### \u5206\u7c7b & \u56de\u5f52\u95ee\u9898\\n\\n\u673a\u5668\u5b66\u4e60\u91cc\u8ba8\u8bba\u7684\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u5176\u5b9e\u5c31\u662f\u66f2\u7ebf\u7684\u590d\u6742\u7a0b\u5ea6\u3002\u867d\u7136\u6211\u4eec\u8fd9\u91cc\u8ba8\u8bba\u7684\u662f\u5206\u7c7b\u95ee\u9898\uff0c\u5176\u5b9e\u548c\u56de\u5f52\u95ee\u9898\u5728\u6a21\u578b\u4e0a\u5e76\u6ca1\u6709\u672c\u8d28\u7684\u533a\u522b\u3002\u6bd4\u5982\u4e0a\u8ff0\u7684\u66f2\u7ebf\uff0c\u53ef\u4ee5\u662f\u5bf9\u6570\u636e\u7684\u5206\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u5bf9\u8fd9\u4e9b\u6570\u636e\u7684\u62df\u5408\u3002\\n\\n![image-20240307154955484](/img/machine_learning/image-20240307154955484.png)\\n\\n\u4e0b\u9762\u6211\u4eec\u8fd8\u662f\u8ba8\u8bba\u5206\u7c7b\u95ee\u9898\u3002\\n\\n### \u5f15\u5165\u795e\u7ecf\u7f51\u7edc\\n\\n\u65e2\u7136\u76f4\u7ebf\u6a21\u578b\u7684\u5c40\u9650\u6027\u8fd9\u4e48\u5927\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u590d\u6742\u7a0b\u5ea6\u5462\uff1f\u6211\u4eec\u8fd9\u6b21\u8ba8\u8bba\u7684\u91cd\u70b9\u2014\u2014\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u4e00\u79cd\u63d0\u9ad8\u6a21\u578b\u8d1f\u8d23\u7a0b\u5ea6\u7684\u65b9\u6cd5\u3002\\n\\n\u4e0b\u56fe\u5c31\u8868\u793a\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a\\n\\n![image-20240307155043430](/img/machine_learning/image-20240307155043430.png)\\n\\n\u7ea2\u8272\u8868\u793a\u8f93\u5165\u5c42\uff0c\u8f93\u5165\u5c42\u7684\u8f93\u51fa\u8f93\u5165\u5230\u795e\u7ecf\u7f51\u7edc\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u90fd\u548c\u4e0a\u4e00\u5c42\uff0c\u4e0b\u4e00\u5c42\u4e92\u76f8\u8fde\u63a5\u3002\u79f0\u4e3a\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5355\u72ec\u62ff\u51fa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u7ed3\u6784\uff1a\\n\\n![image-20240307155217733](/img/machine_learning/image-20240307155217733.png)\\n\\n\u8fd9\u91cc\u7684\u6bcf\u4e00\u6761\u4ee3\u8868\u7684\u662f\u5bf9\u5e94\u7684\u6743\u91cd\u7cfb\u6570\u3002\u8fd9\u4e2a\u7ed3\u6784\uff0c\u5176\u5b9e\u5c31\u8868\u793a\u4e3a\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\\n\\n```latex\\n\\nw_1x_1+w_2x_2+w_3x_3+w_4x_4+w_5x_5+w_6x_6+b=z\\n\\n```\\n\\n![image-20240307155302941](/img/machine_learning/image-20240307155302941.png)\\n\\n\u7ecf\u8fc7 `sigmoid(f(x))` \u6fc0\u6d3b\u51fd\u6570\u8ba1\u7b97\u8f93\u51fa\u7ed3\u679c\u5230\u4e0b\u4e00\u5c42\u3002\\n\\n### \u6fc0\u6d3b\u51fd\u6570\\n\\n\u795e\u7ecf\u7f51\u7edc\u5bf9\u6fc0\u6d3b\u51fd\u6570\u7684\u9009\u62e9\u662f\u6709\u8981\u6c42\u7684\uff0csigmoid \u53ea\u662f\u7b26\u5408\u8981\u6c42\u7684\u51fd\u6570\u4e4b\u4e00\u3002\u8fd9\u4e2a\u6fc0\u6d3b\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u53ea\u662f\u5728\u795e\u7ecf\u5143\u4e2d\u663e\u793a\u3002\\n\\n![image-20240308175155446](/img/machine_learning/image-20240308175155446.png)\\n\\n\u56e0\u4e3a\u540e\u9762\u9700\u8981\u4f7f\u7528\u5750\u6807\u7cfb\u6765\u5c55\u793a\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u8ba8\u8bba\u4e8c\u7ef4\u60c5\u51b5\uff1a\\n\\n![image-20240308175254921](/img/machine_learning/image-20240308175254921.png)\\n\\n\u5176\u7528\u5411\u91cf\u8868\u793a\u4e3a\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nx_1\\\\\\\\x_2\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_1\\\\\\\\w_2 \\n\\\\end{matrix}\\n\\\\right]\\n+[b]\\n= [z]\\\\\\\\\\nsigmoid(z)=a\\n\\\\\\\\\\\\\\\\\\n\\n```\\n\\n\u8868\u8fbe\u5f0f\u7684\u8f93\u5165\u8f93\u51fa\u5728\u5750\u6807\u7cfb\u4e2d\u663e\u793a\u4e3a\u5982\u4e0b\u56fe\u7684\u4e00\u4e2a\u66f2\u9762\uff1a\u5bf9\u5e94\u7684\u5206\u754c\u7ebf\u5c31\u662f x1 \u548c x2 \u5e73\u9762\u4e0a\u7684\u7ea2\u8272\u76f4\u7ebf\u3002\\n\\n![image-20240307160444347](/img/machine_learning/image-20240307160444347.png)\\n\\n\u5982\u679c\u4e0d\u5b58\u5728\u6fc0\u6d3b\u51fd\u6570\uff0c\u5c31\u53ea\u662f\u4e00\u4e2a\u9762\uff0c\u5982\u56fe\uff1a\\n\\n![image-20240307160520189](/img/machine_learning/image-20240307160520189.png)\\n\\n\u518d\u52a0\u5165\u4e00\u4e2a\u795e\u7ecf\u5143\u65f6\uff0c\u8868\u793a\u5982\u4e0b\uff1a\\n\\n![image-20240308175501778](/img/machine_learning/image-20240308175501778.png)\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nx_1^{[0]}\\\\\\\\x_2^{[0]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_1^{[1]}\\\\\\\\w_2^{[1]}\\n\\\\end{matrix}\\n\\\\right]\\n+[b^{[1]}]\\n= [z^{[1]}]\\\\\\\\\\\\\\\\\\nsigmoid(z^{[1]}=a^{[1]}\\n\\\\\\\\\\\\\\\\\\n\\n```\\n\\n\u8fd9\u91cc\u7528\u4e2d\u62ec\u53f7\u4e2d\u7684\u4e0a\u6807\u6570\u5b57\u8868\u793a\u662f\u795e\u7ecf\u5143\u7684\u7b2c\u51e0\u5c42\u3002\\n\\n> \u8f93\u5165\u5c42\u5bf9\u5e94\u7684\u662f 0 \u5c42\u3002\u7b2c\u4e00\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f1a\u4f5c\u4e3a\u7b2c\u4e8c\u5c42\u7684\u8f93\u5165\u3002\\n\\n```latex\\n\\n[a^{1}]^\\\\mathrm T\xb7[w_1^{[2]}]+[b^{[2]}]=[z^{[2]}] \\\\\\\\\\nsigmoid(z^{[2]}) = a^{[2]}\\n\\n```\\n\\n\u589e\u52a0\u4e00\u5c42\u795e\u7ecf\u5143\u4e4b\u540e\uff0c\u56fe\u50cf\u5e76\u4e0d\u4f1a\u6709\u591a\u5927\u7684\u53d8\u5316\uff0c\u4ecd\u7136\u662f\u4e0b\u9762\u8fd9\u79cd\u66f2\u9762\uff1a\\n\\n![image-20240307161032336](/img/machine_learning/image-20240307161032336.png)\\n\\n\u63a5\u4e0b\u6765\u5c31\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u5728\u591a\u52a0\u4e00\u4e2a\u795e\u7ecf\u5143\u4e4b\u540e\uff0c\\n\\n![image-20240322185329932](/img/machine_learning/image-20240322185329932-17111048118771.png)\\n\\n\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u6709 `W1, W2 \u548c b` \u4e00\u7ec4\u7cfb\u6570\u3002\u8fd9\u65f6\u5019 W \u5c31\u4e0d\u518d\u662f\u5411\u91cf\uff0c\u800c\u662f\u77e9\u9635\u3002\u4e0d\u8fc7\u4ecd\u7136\u662f\u8fdb\u884c\u7ebf\u6027\u8fd0\u7b97\u3002\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nx_1^{[0]}\\\\\\\\x_2^{[0]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_{1.1}^{[1]} \\\\quad w_{2.1}^{[1]}  \\\\\\\\w_{1.2}^{[1]} \\\\quad w_{2.2}^{[1]}\\n\\\\end{matrix}\\n\\\\right]\\n+[b_1^{[1]} \\\\quad b_2^{[1]}]\\n= [ \\\\quad z_2^{[1]}]\\\\\\\\\\\\\\\\\\n\\n\u8f6c\u7f6e\u4e4b\u540e\uff1a\\\\\\\\\\\\\\\\\\n\\n\\\\left[\\n\\\\begin{matrix}\\nx_1^{[0]}\\\\\\\\x_2^{[0]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_{1.1}^{[1]} \\\\quad w_{2.1}^{[1]}  \\\\\\\\w_{1.2}^{[1]} \\\\quad w_{2.2}^{[1]}\\n\\\\end{matrix}\\n\\\\right]\\n+\\n\\\\left[\\n\\\\begin{matrix}\\n[b_1^{[1]} \\\\\\\\ b_2^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\\n=\\n\\\\left[\\n\\\\begin{matrix}\\n[z_1^{[1]}] \\\\\\\\ z_2^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T \\\\\\\\\\\\\\\\\\n\\n\\n\u6fc0\u6d3b\u51fd\u6570\u4e5f\u53d8\u6210\u4f7f\u7528\u5411\u91cf\u8868\u793a\u7684\u5f62\u5f0f\uff1a\\n\\nsigmoid(Z^{[1]}) = A^{[1]}\\n\\\\\\\\\\n\\n```\\n\\n> \u8fd9\u91cc\u8868\u793a\u6bcf\u4e00\u9879\uff0c\u6bcf\u4e00\u4e2a\u5206\u91cf\u90fd\u8981\u7ecf\u8fc7 `sigmoid` \u8ba1\u7b97\u3002\\n\\n\u7b2c\u4e8c\u5c42\u7684\u8f93\u5165\u4e5f\u4f1a\u76f8\u5e94\u53d8\u6210\u4e24\u4e2a\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\na_1^{[1]}\\\\\\\\\\na_2^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_1^{[2]} \\\\\\\\\\nw_2^{[2]}\\n\\\\end{matrix}\\n\\\\right]\\n+\\n\\\\left[\\n\\\\begin{matrix}\\nb^{[2]}\\n\\\\end{matrix}\\n\\\\right]\\n=\\n\\\\left[\\n\\\\begin{matrix}\\nz^{[2]}\\n\\\\end{matrix}\\n\\\\right] \\\\\\\\\\\\\\\\\\nsigmoid(Z^{[2]}) = a^{[2]}\\n\\n```\\n\\n\u6b64\u65f6\u7684\u56fe\u50cf\u4f1a\u53d8\u7684\u66f4\u52a0\u591a\u6837\uff1a\\n\\n![image-20240322190244078](/img/machine_learning/image-20240322190244078.png)\\n\\n\u5c24\u5176\u662f\u5206\u754c\u7ebf\uff0c\u5df2\u7ecf\u4e0d\u6b62\u662f\u4e00\u6761\u76f4\u7ebf\u4e86\uff0c\u800c\u662f\u53d1\u751f\u4e86\u5f2f\u66f2\u3002\\n\\n![image-20240322190340302](/img/machine_learning/image-20240322190340302.png)\\n\\n\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u589e\u52a0\u795e\u7ecf\u5143\uff0c\u589e\u52a0\u5230\u56db\u4e2a\uff1a\\n\\n![image-20240322190431511](/img/machine_learning/image-20240322190431511.png)\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nx_1^{[0]}\\\\\\\\x_2^{[0]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_{1.1}^{[1]} \\\\quad w_{2.1}^{[1]} \\\\quad w_{3.1}^{[1]} \\\\quad w_{4.1}^{[1]}  \\\\\\\\w_{1.2}^{[1]} \\\\quad w_{2.2}^{[1]} \\\\quad w_{3.2}^{[1]} \\\\quad w_{4.2}^{[1]}\\n\\\\end{matrix}\\n\\\\right]\\n+\\n\\\\left[\\n\\\\begin{matrix}\\n[b_1^{[1]} \\\\\\\\ b_2^{[1]} \\\\\\\\ [b_3^{[1]} \\\\\\\\ b_4^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\\n=\\n\\\\left[\\n\\\\begin{matrix}\\n[z_1^{[1]}] \\\\\\\\ z_2^{[1]} \\\\\\\\ [z_3^{[1]}] \\\\\\\\ z_4^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\\n\\\\\\\\\\\\\\\\\\n\\n\\\\left[\\n\\\\begin{matrix}\\na_1^{[1]}\\\\\\\\a_2^{[1]}\\\\\\\\a_3^{[1]}\\\\\\\\a_4^{[1]}\\n\\\\end{matrix}\\n\\\\right]^\\\\mathrm T\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_1^{[2]} \\\\\\\\\\nw_2^{[2]} \\\\\\\\\\nw_3^{[2]} \\\\\\\\\\nw_4^{[2]}\\n\\\\end{matrix}\\n\\\\right]\\n+\\n\\\\left[\\n\\\\begin{matrix}\\nb^{[2]}\\n\\\\end{matrix}\\n\\\\right]\\n=\\n\\\\left[\\n\\\\begin{matrix}\\nz^{[2]}\\n\\\\end{matrix}\\n\\\\right] \\\\\\\\\\\\\\\\\\n\\n```\\n\\n\u6b64\u65f6\u56fe\u5f62\u53d8\u5316\u4e3a\uff1a\\n\\n![image-20240322190509691](/img/machine_learning/image-20240322190509691.png)\\n\\n\u65e0\u8bba\u662f\u8f93\u51fa\u7ed3\u679c\u7684\u66f2\u9762\uff0c\u8fd8\u662f\u5206\u754c\u7ebf\uff0c\u4ed6\u4eec\u7684\u590d\u6742\u7a0b\u5ea6\u5927\u5927\u589e\u52a0\uff1a\\n\\n![image-20240322190536513](/img/machine_learning/image-20240322190536513.png)\\n\\n\u81f3\u6b64\uff0c\u6211\u4eec\u6301\u7eed\u589e\u52a0\u795e\u7ecf\u5143\uff0c\u56fe\u5f62\u7684\u590d\u6742\u7a0b\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u9ad8\u3002\\n\\n\u6570\u636e\u5bb6\u4e5f\u8bc1\u660e\u4e86\uff0c\u53ea\u8981\u589e\u52a0\u7684\u795e\u7ecf\u5143\u8db3\u591f\u591a\uff0c\u4efb\u4f55\u4e00\u79cd\u590d\u6742\u7684\u66f2\u7ebf\u90fd\u80fd\u591f\u88ab\u65e0\u9650\u7684\u63a5\u8fd1\u8868\u8fbe\u51fa\u6765\uff0c\u5373\u4e07\u80fd\u903c\u8fd1\u5b9a\u7406\uff08\u901a\u7528\u8fd1\u4f3c\u5b9a\u7406\uff09\u3002\\n\\n\u795e\u7ecf\u7f51\u7edc\u8981\u60f3\u5b9e\u73b0\u4e07\u80fd\u903c\u8fd1\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u5173\u952e\u662f`\u6fc0\u6d3b\u51fd\u6570`\u3002\u5fc5\u987b\u662f\u975e\u7ebf\u6027\u7684\uff0c\u5982\u679c\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\uff0c\u518d\u591a\u7684\u795e\u7ecf\u5143\u4e5f\u4e0d\u4f1a\u589e\u52a0\u6a21\u578b\u7684\u590d\u6742\u6027\u3002\u6a21\u578b\u7684\u56fe\u50cf\u53ea\u4f1a\u662f\u4e00\u4e2a\u8d85\u5e73\u9762\u3002\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u5982\u4e0b\uff1a\\n\\n![image-20240322193525270](/img/machine_learning/image-20240322193525270.png)\\n\\n\u4e5f\u53ef\u4ee5\u662f\uff1a`sin(x) sinc(x) Gaussion(x)` \u3002\u4e0d\u540c\u7684\u6fc0\u6d3b\u51fd\u6570\u5bf9\u5e94\u7684\u56fe\u5f62\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\\n\\n## \u6fc0\u6d3b\u51fd\u6570\u6df1\u5165\\n\\n\u4e3a\u4ec0\u4e48\u589e\u52a0\u66f4\u591a\u7684\u795e\u7ecf\u5143\u4f1a\u6709\u66f4\u5f3a\u7684\u80fd\u529b\uff0c\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u8fdb\u884c\u89e3\u91ca\u3002\\n\\n\u5c06\u524d\u9762\u795e\u7ecf\u7f51\u7edc\u90e8\u5206\u770b\u4f5c\u4e3a\u4e00\u4e2a\u9ed1\u76d2\uff0c\u4e0d\u8bba\u8f93\u5165\u7684\u6570\u636e\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u6700\u7ec8\u8f93\u51fa\u5230\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u53ea\u662f\u4e00\u4e2a\u8ba1\u7b97\u7ed3\u679c\u3002\u5047\u8bbe\u4ed6\u6709 10 \u7ef4\u3002\u5982\u56fe\uff1a\\n\\n![image-20240322193938404](/img/machine_learning/image-20240322193938404.png)\\n\\n\u6570\u636e\u4ece2\u7ef4\u523010\u7ef4\u3002\u5176\u4e2d\u7684\u5173\u952e\u662f\u6570\u636e\u7684\u8f93\u5165\u8fdb\u884c\u4e86\u4e00\u4e2a\u77e9\u9635\u8fd0\u7b97\uff0c\u77e9\u9635\u5bf9\u4e00\u4e2a\u5411\u91cf\u8fdb\u884c\u64cd\u4f5c\u3002\u5c06\u5176\u53d8\u4e3a\u53e6\u5916\u4e00\u4e2a\u5411\u91cf\uff1a\\n\\n![image-20240322194200931](/img/machine_learning/image-20240322194200931.png)\\n\\n\u4f8b\u5982\u5982\u4e0b\u7684\u5411\u91cf\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\n1\\\\\\\\1\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n![image-20240322194307256](/img/machine_learning/image-20240322194307256.png)\\n\\n\u8fdb\u884c\u5982\u4e0b\u7684\u8fd0\u7b97\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\n1\\\\\\\\1\\n\\\\end{matrix}\\n\\\\right]\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\ncos\\\\theta \\\\quad -sin\\\\theta\\\\\\\\sin\\\\theta \\\\quad cos\\\\theta\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n\u5c06\u5411\u91cf\u65cb\u8f6c `\u03b8` \u89d2\u5ea6\uff1a\\n\\n![image-20240322194625846](/img/machine_learning/image-20240322194625846.png)\\n\\n\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u4f5c\u7528\u5c31\u662f\u4f7f\u5411\u91cf\u53d1\u751f\u65cb\u8f6c\u3002\\n\\n\u90a3\u4e48\u5982\u4e0b\u7684\u77e9\u9635\uff0c\u5b8c\u5168\u53ef\u4ee5\u8d77\u5230\u5bf9\u5411\u91cf\u8fdb\u884c\u5347\u7ef4\u7684\u4f5c\u7528\uff1a\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\n1\\\\\\\\1\\n\\\\end{matrix}\\n\\\\right]\\n\xb7\\n\\\\left[\\n\\\\begin{matrix}\\nw_{1.1} \\\\quad w_{2.1} \\\\quad w_{3.1} \\\\\\\\\\nw_{1.2} \\\\quad w_{2.2} \\\\quad w_{3.2} \\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n![image-20240322194922199](/img/machine_learning/image-20240322194922199.png)\\n\\n\u5982\u679c\u6570\u636e\u53ea\u662f\u4e8c\u7ef4\u7684\uff0c\u5b83\u4eec\u4e92\u76f8\u53c2\u6742\u5728\u4e00\u8d77\uff0c\u5f88\u96be\u76f4\u63a5\u7528\u76f4\u7ebf\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\uff1a\\n\\n![image-20240322195040705](/img/machine_learning/image-20240322195040705.png)\\n\\n\u5982\u679c\u5bf9\u5b83\u4eec\u8fdb\u884c\u5347\u7ef4\uff1a\\n\\n![image-20240322195114768](/img/machine_learning/image-20240322195114768.png)\\n\\n\u7528\u8ddf\u7b80\u5355\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u5c06\u4ed6\u4eec\u5206\u5f00\uff1a\\n\\n![image-20240322195132104](/img/machine_learning/image-20240322195132104.png)\\n\\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u795e\u7ecf\u5143\u4e2d\u4e2d\u95f4\u7684\u64cd\u4f5c\u770b\u4f5c\u662f\u6570\u636e\u5347\u7ef4\u7684\u64cd\u4f5c\uff1a\\n\\n![image-20240322195221569](/img/machine_learning/image-20240322195221569.png)\\n\\n\u6709\u591a\u5c11\u795e\u7ecf\u5143\uff0c\u5c31\u4f1a\u628a\u6570\u636e\u5347\u5230\u591a\u5c11\u7ef4\u3002\u53ea\u8981\u7ef4\u5ea6\u591f\u9ad8\uff0c\u4e00\u5b9a\u4f1a\u627e\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\uff0c\u80fd\u5bf9\u6570\u636e\u5b8c\u6210\u5212\u5206\u3002\\n\\n\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684 `f(x)` \u95ee\u9898\uff1a\\n\\n![image-20240322195351911](/img/machine_learning/image-20240322195351911.png)\\n\\n### \u591a\u5206\u7c7b\u95ee\u9898\\n\\n\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u5e76\u4e0d\u662f\u53ea\u80fd\u6709\u4e00\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u5904\u7406\u4e8c\u5206\u7c7b\u95ee\u9898\u3002\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u8282\u70b9\uff0c\u8fdb\u884c\u591a\u5206\u7c7b\u95ee\u9898\u7684\u8ba8\u8bba\uff1a\\n\\n![image-20240322195656661](/img/machine_learning/image-20240322195656661.png)\\n\\n\u5176\u5b9e\u8d28\u4e5f\u662f\u5728\u6bcf\u4e00\u4e2a\u8f93\u51fa\u8282\u70b9\u4e0a\u8fdb\u884c\u4e8c\u5206\u7c7b\u5224\u65ad\uff0c\u5c06\u5404\u4e2a\u8282\u70b9\u7efc\u5408\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u53bb\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u3002\u771f\u5b9e\u7684\u573a\u666f\u4e2d\uff0c\u5e76\u4e0d\u50cf\u662f\u4e0a\u8ff0\u63cf\u8ff0\u7684\u7c97\u7cd9\uff0c\u800c\u662f\u901a\u8fc7 `softMax(Y)`\u51fd\u6570\u8fdb\u884c\u7edf\u4e00\u63cf\u8ff0\u3002\u51fd\u6570\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\\n\\n```latex\\n\\nsoftMax(\\\\hat{Y}) = \\\\frac{e^{\\\\hat{y_i}}}{\\\\sum_{j=1}^4e^{\\\\hat{y_j}}}\\n\\n```\\n\\n\u5c31\u662f\u5bf9 `singmoid(x)` \u51fd\u6570\u7684\u6269\u5c55\u548c\u5347\u7ea7\u3002\\n\\n\u5b8c\u6574\u7684\u795e\u7ecf\u7f51\u7edc\u5982\u4e0b\uff1a\\n\\n![image-20240322200530988](/img/machine_learning/image-20240322200530988.png)\\n\\n\u8fd9\u91cc\u7684\u9690\u85cf\u5c42\u6682\u65f6\u7406\u89e3\u4e3a\u5bf9\u6570\u636e\u8fdb\u884c\u5347\u7ef4\u64cd\u4f5c\u3002\u4e0d\u8fc7\u66f4\u5e38\u89c1\u7684\u795e\u7ecf\u7f51\u7edc\u5e94\u8be5\u662f\u5982\u4e0b\u7684\u8868\u793a\uff1a\\n\\n![image-20240322200647520](/img/machine_learning/image-20240322200647520.png)\\n\\n\u57fa\u4e8e\u5982\u4e0a\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u7ee7\u7eed\u4f7f\u7528\u9690\u85cf\u5c42\u5c31\u662f\u5bf9\u6570\u636e\u5347\u7ef4\u7684\u770b\u6cd5\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u4ece\u5de6\u5230\u53f3\uff0c\u795e\u7ecf\u5143\u7684\u4e2a\u6570\u5728\u9012\u51cf\u3002\u6211\u4eec\u4ecd\u7136\u56de\u5f52\u5230\u7b80\u5355\u95ee\u9898\uff1a\\n\\n\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u8f93\u51fa\u53ef\u4ee5\u662f\uff1a\\n\\n![image-20240322200840361](/img/machine_learning/image-20240322200840361.png)\\n\\n\u57fa\u4e8e\u4e0a\u8ff0\u795e\u7ecf\u7f51\u7edc\u5f88\u96be\u6709\u65b0\u7684\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u95ee\u9898\u6362\u6210\u4e0b\u8ff0\u8fd9\u6837\uff0c\u5c31\u4f1a\u6709\u65b0\u7684\u53d1\u73b0\uff1a\\n\\n![image-20240322201001608](/img/machine_learning/image-20240322201001608.png)\\n\\n### \u6848\u4f8b\u5206\u6790  - \u5224\u65ad\u9762\u90e8\u8868\u60c5 & OCR\\n\\n\u4e0a\u8ff0\u7684\u6570\u636e\u7ef4\u5ea6\u5b8c\u5168\u53ef\u4ee5\u770b\u4f5c\u662f\u5224\u65ad\u4e00\u4e2a\u4eba\u5fc3\u60c5\u7684\u7279\u5f81\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u53ef\u6ca1\u6709\u8fd9\u4e48\u6e05\u6670\u7684\u8f93\u5165\u6570\u636e\u53bb\u8ba9\u6a21\u578b\u8fdb\u884c\u5224\u65ad\u3002\u800c\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5b58\u5728\u53ef\u80fd\u662f\u8fd9\u6837\u7684\u4e00\u5f20\u539f\u59cb\u56fe\u7247\uff1a\\n\\n![image-20240322201056290](/img/machine_learning/image-20240322201056290.png)\\n\\n\u56fe\u7247\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u662f\u6570\u636e\u7684\u4e00\u4e2a\u7ef4\u5ea6\uff1a\\n\\n![image-20240322201249208](/img/machine_learning/image-20240322201249208.png)\\n\\n\u8fd9\u65f6\u5019\u5728\u52a0\u5165\u9690\u85cf\u5c42\uff1a\\n\\n![image-20240322201311835](/img/machine_learning/image-20240322201311835.png)\\n\\n\u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u4eba\u7c7b\u9762\u90e8\u8868\u60c5\u7684\u7279\u5f81\u3002\\n\\n\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u53cd\u800c\u964d\u7ef4\u4e86\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u8fd9\u91cc\u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5e76\u4e0d\u9700\u8981\u539f\u59cb\u6570\u636e\u91cc\u7684\u6240\u6709\u7ef4\u5ea6\u3002\u4f8b\u5982\u773c\u775b\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u53ea\u5173\u6ce8\u773c\u955c\u7684\u50cf\u7d20\u70b9\u3002\\n\\n\u8fd9\u91cc\u9690\u85cf\u5c42\u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u5bf9\u4e0a\u4e00\u5c42\u539f\u59cb\u6570\u636e\u7684\u62bd\u8c61\u3002\\n\\n\u5982\u679c\u53ea\u662f\u5230\u6b64\u7a0b\u5ea6\u7684\u8bdd\uff0c\u8fd8\u662f\u4e0d\u80fd\u6709\u6548\u7684\u89e3\u91ca\u4e3a\u4ec0\u4e48\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u8fd9\u4e48\u591a\u5c42\u3002\u8fd9\u65f6\u5019\u5982\u679c\u6211\u4eec\u6362\u4e2a\u95ee\u9898\u7ee7\u7eed\u7406\u89e3\uff0c\u5c31\u4f1a\u660e\u767d\u3002\\n\\n\u6bd4\u5982\u6211\u4eec\u9700\u8981\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u53bb\u5224\u65ad\u624b\u5199\u7684\u6570\u5b57\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323184129253.png\\" alt=\\"image-20240323184129253\\" style={{zoom: \'67%;\'}} />\\n\\n\u6bd4\u5982\u6570\u5b57 8 \uff0c\u795e\u7ecf\u7f51\u7edc\u5f88\u53ef\u80fd\u4f1a\u5c06 8 \u4e0a\u4e0b\u4e24\u90e8\u5206\u7684\u7279\u5f81\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u5224\u65ad\u7684\u4f9d\u636e\u3002\u5982\u56fe\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323184311528.png\\" alt=\\"image-20240323184311528\\" style={{zoom: \'67%;\'}} />\\n\\n\u8fd9\u91cc\u5c06\u5176\u653e\u5728\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\u7684\u539f\u56e0\u662f\uff0c\u4e24\u4e2a\u5706\u53ef\u80fd\u8fd8\u6709\u5176\u81ea\u5df1\u7684\u5b50\u7279\u5f81\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323184422041.png\\" alt=\\"image-20240323184422041\\" style={{zoom: \'67%;\'}} />\\n\\n\u4ed6\u4eec\u90fd\u7531\u56db\u90e8\u5206\u5706\u5f27\u7ec4\u6210\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u5728\u9047\u5230\u540c\u6837\u7684\u7279\u5f81\u65f6\u53ef\u4ee5\u590d\u7528\uff0c\u6bd4\u5982\u6570\u5b57 6 \uff0c\u4e0b\u534a\u90e8\u5206\u4e5f\u662f\u4e00\u4e2a\u5706\u5708\u7684\u7ed3\u6784\uff0c\u4e0b\u9762\u7684\u7279\u5f81\u5c31\u53ef\u4ee5\u548c 8 \u8fdb\u884c\u590d\u7528\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323184635859.png\\" alt=\\"image-20240323184635859\\" style={{zoom: \'67%;\'}} />\\n\\n\u4e0a\u534a\u90e8\u5206\u7684\u4e00\u7ad6\u624d\u662f\u6570\u5b57 6 \u72ec\u6709\u7684\u7279\u5f81\u3002\\n\\n\u5bf9\u5e94\u7684\u6570\u5b57 5 \uff0c\u4e0b\u534a\u90e8\u5206\u662f\u534a\u4e2a\u5706\u5f27\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u8fdb\u884c\u590d\u7528\uff0c\u4e0d\u540c\u7684\u7279\u5f81\u53ea\u6709\u4e0a\u9762\u7684 \u4e00\u6a2a \u8fd9\u4e00\u90e8\u5206\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323184805162.png\\" alt=\\"image-20240323184805162\\" style={{zoom: \'67%;\'}} />\\n\\n\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u5c42\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u9690\u85cf\u5c42\u8d8a\u6df1\uff0c\u5bf9\u6570\u636e\u7684\u62bd\u8c61\u7a0b\u5ea6\u8d8a\u9ad8\u3002\\n\\n> \u8fd9\u91cc\u53ea\u662f\u7528\u4e86\u6211\u4eec\u4eba\u80fd\u7406\u89e3\u7684\u7279\u5f81\u8fdb\u884c\u63cf\u8ff0\uff0c\u795e\u7ecf\u7f51\u7edc\u81ea\u5df1\u5b66\u4e60\u5230\u7684\u7279\u5f81\uff0c\u53ef\u80fd\u4eba\u65e0\u6cd5\u7406\u89e3\uff0c\u4f46\u662f\u9884\u6d4b\u7ed3\u679c\u540c\u6837\u5341\u5206\u51c6\u786e\u3002\\n\\n\u4e0a\u8ff0\u7684\u5c31\u662f\u5bf9\u4e00\u4e2a\u5b8c\u6574\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u63cf\u8ff0\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323185042001.png\\" alt=\\"image-20240323185042001\\" style={{zoom: \'67%;\'}} />\\n\\n> \u6a21\u578b  -> \u9690\u85cf\u5c42\\n>\\n> \u7b56\u7565 -> \u8f93\u51fa\u5c42\\n>\\n> \u5176\u5b9e\u5728\u8f93\u5165\u5c42\u4e5f\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u3002\u968f\u7740\u7b97\u529b\u9700\u6c42\u8d8a\u6765\u8d8a\u5927\uff0c\u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u4f7f\u5176\u5f97\u5230\u6700\u4f73\u7ed3\u679c\u3002\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898\u3002\\n\\n## \u7b97\u6cd5 - \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\\n\\n\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u6ca1\u6709\u522b\u7684\uff0c\u5c31\u662f\u53cd\u5411\u4f20\u64ad\uff08\u68af\u5ea6\u4e0b\u964d\uff09\u7b97\u6cd5\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323185330009.png\\" alt=\\"image-20240323185330009\\" style={{zoom: \'67%;\'}} />\\n\\n### \u7b97\u6cd5\u63a8\u5bfc\\n\\n\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6211\u4eec\u5b8c\u5168\u770b\u4f5c\u662f\u4e00\u4e2a\u8fd9\u6837\u7684\u51fd\u6570\uff1a\\n\\n```latex\\n\\nf_w(X) = \\\\hat{Y}\\n\\n```\\n\\n\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u76f8\u5f53\u590d\u6742\u800c\u5df2\u3002\u5982\u679c\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u8bad\u7ec3\u6210\u529f\uff0c\u5728\u8fdb\u884c\u5224\u65ad\u548c\u51b3\u7b56\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u7684\u8f93\u5165\u5c31\u662f X \u7cfb\u6570 W \u662f\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u6b63\u5411\u4f20\u64ad\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6b63\u5728\u88ab\u8bad\u7ec3\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u5c31\u4f1a\u53d8\u5f97\u76f8\u5173\u3002\\n\\n```latex\\n\\nf_X(W) = \\\\hat{Y}\\n\\n```\\n\\nx \u4f5c\u4e3a\u5df2\u77e5\u7684\u53c2\u6570\uff0c\u7cfb\u6570\u4f5c\u4e3a\u53d8\u91cf\uff0c\u662f\u9700\u8981\u6c42\u89e3\u7684\u3002\u56e0\u6b64\uff0c\u51fd\u6570\u7684\u56fe\u50cf\u4e5f\u4f1a\u53d1\u751f\u76f8\u5e94\u7684\u53d8\u5316\u3002\u5982\u56fe\u4e3a\u4e00\u4e2a\u6b63\u5411\u4f20\u64ad\u7684\u51fd\u6570\u56fe\u50cf\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323185807364.png\\" alt=\\"image-20240323185807364\\" style={{zoom: \'80%;\'}} />\\n\\n\u5982\u679c\u5c06\u7cfb\u6570 W \u770b\u4f5c\u53d8\u91cf\u7684\u8bdd\uff0c\u5750\u6807\u4e0d\u518d\u662f x1 \u548c  x2 \u800c\u662f w1 \u548c w2\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323185917793.png\\" alt=\\"image-20240323185917793\\" style={{zoom: \'80%;\'}} />\\n\\n\u4e0a\u56fe\u4e3a\u4e00\u4e2a\u7b80\u5316\u5904\u7406\uff0c\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u4e0d\u77e5\u9053\u795e\u7ecf\u7f51\u7edc\u7684\u5177\u4f53\u60c5\u51b5\uff0c\u53ea\u662f\u5c06 \u6240\u6709\u7684\u7cfb\u6570\u770b\u6210\u662f\u4e00\u4e2a\u5411\u91cf\u3002\u540e\u9762\u6211\u4eec\u4f1a\u4fee\u6b63\u56fe\u50cf\u3002\u8fd9\u91cc\u7684\u6700\u9ad8\u70b9\u5c31\u662f\u6211\u4eec\u5728\u9009\u62e9\u7b56\u7565\u540e\u5e0c\u671b\u51fa\u73b0\u7684\u7ed3\u679c\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323190054804.png\\" alt=\\"image-20240323190054804\\" style={{zoom: \'50%;\'}} />\\n\\n\u6211\u4eec\u8fd9\u91cc\u7684\u7ed3\u679c\u4e0d\u662f\u6c42\u51fa Y \u7684\u503c\uff0c\u800c\u662f\u6c42\u51fa\u4ee4 Y \u6700\u5927\u65f6 W \u7684\u53d6\u503c\u3002\\n\\n\u8fd9\u4e2a W \u7684\u53d6\u503c\u5c31\u662f\u6700\u9ad8\u70b9\u5728\u7cfb\u6570\u5e73\u9762\u4e0a\u7684\u6295\u5f71\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323190459383.png\\" alt=\\"image-20240323190459383\\" style={{zoom: \'50%;\'}} />\\n\\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u7cfb\u6570 W \u53ef\u80fd\u51fa\u73b0\u5728\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4ed6\u5230\u6700\u4f18\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u6211\u4eec\u6c42\u89e3\u7684\u76ee\u6807\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323190600402.png\\" alt=\\"image-20240323190600402\\" style={{zoom: \'50%;\'}} />\\n\\n```latex\\n\\nf_x(W^*) = \\\\hat{Y_*} \\n\\n```\\n\\n```latex\\n\\nW - W^* = \\\\Delta W\\n\\n```\\n\\n\u4f46\u662f\u5728\u5b9e\u9645\u573a\u666f\uff0c\u4e0a\u8ff0 W \u7684\u503c\u5f88\u96be\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\u3002\u5982\u679c\u5229\u7528\u5982\u4e0b\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\uff1a\\n\\n\u5728\u66f2\u9762\u4e0a\u7684\u4efb\u610f\u4e00\u70b9\uff1a\u90fd\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a\u5411\u91cf\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323190857379.png\\" alt=\\"image-20240323190857379\\" style={{zoom: \'50%;\'}} />\\n\\n\u8fd9\u4e2a\u5411\u91cf\u603b\u662f\u6307\u5411\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323190950437.png\\" alt=\\"image-20240323190950437\\" style={{zoom: \'50%;\'}} />\\n\\n\u90a3\u4e48\u8fd9\u4e2a\u5411\u91cf\u5728\u53c2\u6570\u5e73\u9762\u4e0a\u7684`\u6295\u5f71`\u5c31\u53eb\u505a `\u68af\u5ea6`\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323191034894.png\\" alt=\\"image-20240323191034894\\" style={{zoom: \'50%;\'}} />\\n\\n\u68af\u5ea6\u603b\u662f\u6307\u5411\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\uff0c\u90a3\u4e48\u4e3a\u4f55\u79f0\u4e3a\u68af\u5ea6\u4e0b\u964d\u6cd5\u5462\uff1f\u5728\u9009\u62e9\u7b56\u7565\u7684\u65f6\u5019\uff0c\u6709\u7684\u7b56\u7565\u662f\u6c42\u6700\u5927\uff0c\u6709\u7684\u662f\u6c42\u6700\u5c0f\u3002\u4e3a\u4e86\u5c06\u5176\u7edf\u4e00\u770b\u5f85\uff0c\u5373\u4fbf\u662f\u6c42\u6700\u5927\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u5176\u4e0a\u52a0\u4e0a\u8d1f\u53f7\u4f7f\u5176\u53d8\u6210\u6c42\u6700\u5c0f\u7684\u95ee\u9898\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323191347399.png\\" alt=\\"image-20240323191347399\\" style={{zoom: \'50%;\'}} />\\n\\n\u4e0d\u8fc7\u867d\u7136\u7684\u8fd9\u91cc\u66f2\u9762\u53cd\u4e86\uff0c\u4f46\u662f\u68af\u5ea6\u4ecd\u7136\u662f\u6307\u5411\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\u3002\u6240\u4ee5\u5728\u5177\u4f53\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u68af\u5ea6\u5148\u6c42\u53cd\uff0c\u8fd9\u6837\u68af\u5ea6\u5c31\u4f1a\u6307\u5411\u4e0b\u964d\u6700\u5feb\u7684\u65b9\u5411\u3002\u8fd9\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5  `\u68af\u5ea6\u4e0b\u964d\u6cd5`\u7684\u7531\u6765\uff0c\u4e0d\u8fc7\u5176\u672c\u8d28\u4ecd\u7136\u76f8\u540c\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323191619191.png\\" alt=\\"image-20240323191619191\\" style={{zoom: \'50%;\'}} />\\n\\n### \u68af\u5ea6\u4e0b\u964d\u6cd5\u5728\u6a21\u578b\u4e2d\u7684\u5e94\u7528\\n\\n\u68af\u5ea6\u603b\u662f\u6307\u5411\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\uff0c\u5373\u603b\u662f\u548c\u7b49\u9ad8\u7ebf\u5782\u76f4\u3002\u68af\u5ea6\u672c\u8eab\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u6240\u4ee5\u5c31\u4ee3\u8868\u4e86\u4ed6\u5728\u6240\u6709\u53c2\u6570\u7ef4\u5ea6\u4e0a\u90fd\u6709\u5206\u91cf\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323191828250.png\\" alt=\\"image-20240323191828250\\" style={{zoom: \'50%;\'}} />\\n\\n\u5982\u679c\u6240\u6709\u7684\u53c2\u6570\u90fd\u6309\u7167\u68af\u5ea6\u7684\u5206\u91cf\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u6837\u5c31\u4ee3\u8868\u53c2\u6570 W \u505a\u51fa\u4e86\u5f53\u524d\u60c5\u51b5\u4e0b\u6700\u597d\u7684\u9009\u62e9\u3002\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nw_1\\\\\\\\w_2 \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\\\pm\\n\\\\left[\\n\\\\begin{matrix}\\n\\\\Delta{w_1}\\\\\\\\\\\\Delta{w_2} \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n\u4e00\u6b21\u6b21\u6162\u6162\u79fb\u52a8\uff0c\u603b\u4f1a\u63a5\u8fd1\u5176\u7ea7\u503c\u70b9\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323191930106.png\\" alt=\\"image-20240323191930106\\" style={{zoom: \'50%;\'}} />\\n\\n\u5373\u4fbf\u5728\u8fd9\u6837\u7684\u573a\u666f\u4e0b\uff0c\u4ecd\u7136\u5b58\u5728\u95ee\u9898\uff0c\u68af\u5ea6\u53ea\u662f\u6307\u5411\u4e86\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\uff0c\u800c\u6ca1\u6709\u6307\u51fa\u5176\u4e0a\u5347\u65f6\u6bcf\u4e00\u6b65\u7684\u6b65\u957f\u3002\\n\\n\u6b65\u957f\u5728\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e2d\u901a\u5e38\u7528 \u03b7 \u6765\u8868\u793a\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684\u5b66\u4e60\u7387\u4e86\u3002\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nw_1\\\\\\\\w_2 \\\\\\\\ \\\\cdots \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\\\pm\\n\\\\eta \xb7\\n\\\\left[\\n\\\\begin{matrix}\\n\\\\Delta{w_1}\\\\\\\\\\\\Delta{w_2} \\\\\\\\ \\\\cdots \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n\u5b83\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4e0d\u80fd\u7531\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u5f97\u5230\uff0c\u9700\u8981\u624b\u52a8\u8fdb\u884c\u914d\u7f6e\u3002\\n\\n> \u03b7 \u8fc7\u5927\u5c31\u4f1a\u5f88\u5feb\u63a5\u8fd1\u6781\u503c\u70b9\uff0c\u4f46\u662f\u4f1a\u9020\u6210\u53cd\u590d\u6a2a\u8df3\uff0c\u65e0\u6cd5\u6536\u655b\u7684\u7ed3\u679c\u3002\\n>\\n> \u03b7 \u8fc7\u5c0f\uff0c\u6574\u4f53\u8def\u5f84\u6700\u4f18\uff0c\u79fb\u52a8\u76f8\u540c\u6b21\u6570\uff0c\u79fb\u52a8\u8ddd\u79bb\u4f1a\u6bd4\u8f83\u77ed\u3002\\n>\\n> \u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u68af\u5ea6\u4e0b\u964d\u7684\u8fdb\u9636\u65b9\u6848\u3002\\n\\n### \u7b97\u6cd5\u5b9e\u8df5\\n\\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u7406\u89e3\u4e86\u5176\u601d\u8def\uff0c\u5982\u4f55\u6c42\u51fa\u68af\u5ea6\uff1f\u5c31\u662f\u5982\u4f55\u6c42\u51fa\u5206\u91cf\u7684\u5177\u4f53\u503c\u3002\u5982\u679c\u975e\u5e38\u7b3c\u7edf\u7684\u770b\u5f85\uff1a\u6c42\u68af\u5ea6\u7684\u7b54\u6848\u4e3a\u5bf9\u51fd\u6570\u6c42\u504f\u5bfc\u3002\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u7ef4\u5ea6\u90fd\u8981\u6c42\u504f\u5bfc\u3002\\n\\n```latex\\n\\n\\\\left[\\n\\\\begin{matrix}\\nw_1\\\\\\\\w_2 \\\\\\\\ \\\\cdots \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\\\pm\\n\\\\eta \xb7\\n\\\\left[\\n\\\\begin{matrix}\\n\\\\frac{\\\\partial{f}}{\\\\partial{w_1}}\\\\\\\\\\\\frac{\\\\partial{f}}{\\\\partial{w_2}}\\\\\\\\ \\\\cdots \\\\\\\\ \\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n\u4e0a\u8ff0\u4e2d\u7684\u68af\u5ea6\u4e5f\u53ef\u4ee5\u7528 \u2207f \u8868\u793a\uff0c\u8bfb\u4f5c nablaf\u3002\\n\\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u5177\u4f53\u5982\u4f55\u6c42\u51fa\u504f\u5bfc\u3002\u5982\u679c\u6211\u4eec\u628a\u795e\u7ecf\u7f51\u7edc\u6574\u4f53\u770b\u4f5c\u662f\u4e00\u4e2a\u9ed1\u76d2\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323193708237.png\\" alt=\\"image-20240323193708237\\" style={{zoom: \'50%;\'}} />\\n\\n> \u8f93\u5165\u5c42\u662f X \u4e0d\u540c\u7684\u7cfb\u6570 W \u5bf9\u5e94\u4e0d\u540c\u7684 Y \u503c\u3002w \u5168\u90e8\u5728\u9ed1\u76d2\u4e2d\u3002\\n\\n\u6240\u8c13\u7684\u68af\u5ea6\u4e0b\u964d\u4fbf\u662f\uff1a\u5c06\u8ba1\u7b97\u51fa\u6765\u7684\u68af\u5ea6\u53cd\u5411\u4f20\u64ad\u5230\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u8ba9\u6240\u6709\u7684 W \u8fdb\u884c\u4fee\u6539\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323193835793.png\\" alt=\\"image-20240323193835793\\" style={{zoom: \'50%;\'}} />\\n\\n\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\u9ebb\u70e6\u7684\u4e00\u70b9\u662f\uff1a\u4e0d\u540c\u7684 W \u4e4b\u95f4\u662f\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\uff0c\u4e0d\u662f\u5355\u72ec\u5b58\u5728\u3002\u8fd9\u4e2a\u4f9d\u8d56\u5173\u7cfb\u5c31\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u56fe\u3002\u56e0\u6b64\u8981\u60f3\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u7cfb\u6570\u5bf9\u5e94\u68af\u5ea6\u7684\u5206\u91cf\u8fd8\u9700\u8981\u5c06\u9ed1\u76d2\u62c6\u5f00\u624d\u884c\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u9ed1\u76d2\u91cc\u9762\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\\n\\n\u5176\u672c\u8d28\u5c31\u662f\u5982\u4e0b\u56fe\u4e2d\u7684\u4e09\u884c\u8868\u8fbe\u5f0f\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323194153127.png\\" alt=\\"image-20240323194153127\\" style={{zoom: \'50%;\'}} />\\n\\n\u8fd9\u91cc\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u5728\u8fdb\u884c\u5411\u91cf\u8ba1\u7b97\uff0c\u6240\u4ee5\u4e3a\u4e86\u540e\u9762\u7684\u8868\u8fbe\u65b9\u4fbf\uff0c\u5c06\u5176\u4f7f\u7528\u4e0b\u9762\u7684\u5f62\u5f0f\u8868\u793a\uff1a\\n\\n```latex\\n\\nReLU(X\xb7W^{[1]}) = A^{[1]}\\n\\\\\\\\\\nf_k^{[1]}(W^{[k]}_1) = a^{[1]}_k\\n\\\\\\\\\\\\\\\\\\nReLU(A^{[1]}\xb7W^{[2]}) = A^{[2]}\\n\\\\\\\\\\nf_j^{[2]}(A^{1},W^{[2]}_j) = a^{[2]}_j\\n\\\\\\\\\\\\\\\\\\nsoftmax(A^{2},W^{[3]})\\n\\\\\\\\\\nf_i^{[3]}(A^{2},W^{[3]}_i) = a^{[3]}_i\\n\\n```\\n\\n\u5176\u4e2d i,j,k \u5206\u522b\u5bf9\u5e94\u8fd9\u4e00\u5c42\u4e0d\u540c\u7684\u795e\u7ecf\u5143\u3002\\n\\n\u6211\u4eec\u5148\u6765\u5206\u6790\u6700\u4e0b\u9762\u8fd9\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a\u5b83\u8868\u793a\u7684\u662f\u67d0\u4e00\u4e2a\u8282\u70b9\u4e0a\u8981\u5b8c\u6210\u7684\u8ba1\u7b97\u3002\\n\\n<img src=\\"/img/machine_learning/image-20240323194928901.png\\" alt=\\"image-20240323194928901\\" style={{zoom: \'50%;\'}} />\\n\\n\u5b83\u7684\u68af\u5ea6\u7b49\u4e8e\uff1a\u5bf9\u6240\u6709\u53d8\u91cf\u7684\u7ef4\u5ea6\u6c42\u504f\u5bfc\u3002\\n\\n```latex\\n\\n\\\\nabla{f_i^{3}} = \\n\\\\left[\\n\\\\begin{matrix}\\n\\\\frac{\\\\partial{f^{[3]}_i}}{\\\\partial{w^{[3]}_{i,1}}}\\n\\\\\\\\\\n\\\\frac{\\\\partial{f^{[3]}_i}}{\\\\partial{w^{[3]}_{i,2}}}\\n\\\\\\\\ \\\\cdots\\n\\\\\\\\\\n\\\\frac{\\\\partial{f^{[3]}_i}}{\\\\partial{a^{[3]}_{1}}}\\n\\\\\\\\\\n\\\\frac{\\\\partial{f^{[3]}_i}}{\\\\partial{a^{[3]}_{2}}}\\n\\\\\\\\\\n\\\\cdots\\n\\\\end{matrix}\\n\\\\right]\\n\\n```\\n\\n\u8fd9\u91cc\u540c\u65f6\u4e5f\u8981\u5bf9 A \u6c42\u504f\u5bfc\uff0c\u56e0\u4e3a A \u4e5f\u662f\u4e00\u4e2a\u5f53\u524d\u8282\u70b9\u7684\u8f93\u5165\u6570\u636e\uff0c\u5173\u7cfb\u5982\u4e0b\uff1a\\n\\n<img src=\\"/img/machine_learning/image-20240323195607817.png\\" alt=\\"image-20240323195607817\\" style={{zoom: \'50%;\'}} />\\n\\n\u6211\u4eec\u5728\u8003\u8651\u4e4b\u524d\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u53c2\u6570\u6c42\u5bfc\u65f6\uff0c\u9700\u8981\u7ed3\u5408\u524d\u9762\u4e00\u5c42\u795e\u7ecf\u5143\u7684\u5f71\u54cd\uff0c\u5373 J \u5c42\u7684 a \u7cfb\u6570\u7684\u504f\u5bfc\u8868\u8fbe\u5f0f\u4e3a\uff1a\\n\\n```latex\\n\\nW_j^{[2]} \\\\pm \\\\eta^2\xb7\\\\frac{\\\\partial{f_j^{[2]}}}{\\\\partial{W_j^{[2]}}}\\\\sum_{i=1}^4\\\\frac{\\\\partial{f_i^{[3]}}}{\\\\partial{f_j^{[2]}}}\\n\\n```\\n\\nK \u5c42\u7684\u504f\u5bfc\u7cfb\u6570\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a\\n\\n```latex\\n\\nW_k^{[1]} \\\\pm \\\\eta^3\\\\sum_{j=1}^7\\\\sum_{i=1}^4\\\\frac{\\\\partial{f_k^{[1]}}}{\\\\partial{W_k^{[1]}}}\\\\frac{\\\\partial{f_j^{[2]}}}{\\\\partial{f_k^{[1]}}}\\\\frac{\\\\partial{f_i^{[3]}}}{\\\\partial{f_j^{[2]}}}\\n\\n```\\n\\n\u5982\u679c\u53cd\u5411\u4f20\u64ad\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u90a3\u4e48\u5b66\u4e60\u7387\u7684\u6b21\u6570\u5c31\u8d8a\u9ad8\u3002\u6211\u4eec\u77e5\u9053\u5b66\u4e60\u7387\u5f80\u5f80\u662f\u5c0f\u4e8e 1 \u7684\uff0c\u90a3\u4e48\u7ecf\u8fc7\u6b21\u65b9\u8fd0\u7b97\u4e4b\u540e\u518d\u548c\u68af\u5ea6\u76f8\u4e58\uff0c\u5c31\u4e0d\u4f1a\u5bf9\u53c2\u6570\u505a\u51fa\u591a\u5c11\u8c03\u6574\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u7ecf\u5e38\u8bf4\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002\\n\\n## \u603b\u7ed3\\n\\n\u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u5c31\u63cf\u8ff0\u5b8c\u4e86\u795e\u7ecf\u7f51\u7edc\u91cc\u7684\u6a21\u578b\uff0c\u7b97\u6cd5\u548c\u7b56\u7565\u3002"},{"id":"write-somethings","metadata":{"permalink":"/blog/write-somethings","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/essay/\u968f\u7b14.md","source":"@site/blog/essay/\u968f\u7b14.md","title":"\u968f\u7b14 2024/11/24","description":"&emsp;&emsp;\u4eca\u5929\u662f 24 \u5e74 11 \u6708 24 \u53f7\uff0c\u661f\u671f\u65e5\uff0c\u521a\u4ece\u676d\u5dde\u6765\u5230\u90d1\u5dde\u4e0d\u4e45\u3002\u60f3\u6765\u60f3\u53bb\u5e94\u8be5\u5199\u70b9\u4ec0\u4e48\uff0c\u7b97\u662f\u7ecf\u5386\u4e86\u4e00\u6bb5\u5927\u8d77\u5927\u843d\u3002","date":"2024-11-24T18:28:38.000Z","tags":[{"inline":true,"label":"\u968f\u7b14","permalink":"/blog/tags/\u968f\u7b14"}],"readingTime":2.45,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"write-somethings","title":"\u968f\u7b14 2024/11/24","date":"2024-11-24T18:28:38.000Z","authors":"yuluo","tags":["\u968f\u7b14"],"keywords":["life"],"image":"/img/other/other2.jpg"},"unlisted":false,"prevItem":{"title":"\u6df1\u5ea6\u5b66\u4e60\u521d\u63a2","permalink":"/blog/deep-learn-init"},"nextItem":{"title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001","permalink":"/blog/wechatminiapp-msg-push"}},"content":"\x3c!-- truncate --\x3e\\n\\n&emsp;&emsp;\u4eca\u5929\u662f 24 \u5e74 11 \u6708 24 \u53f7\uff0c\u661f\u671f\u65e5\uff0c\u521a\u4ece\u676d\u5dde\u6765\u5230\u90d1\u5dde\u4e0d\u4e45\u3002\u60f3\u6765\u60f3\u53bb\u5e94\u8be5\u5199\u70b9\u4ec0\u4e48\uff0c\u7b97\u662f\u7ecf\u5386\u4e86\u4e00\u6bb5\u5927\u8d77\u5927\u843d\u3002\\n\\n&emsp;&emsp;\u6765\u5230\u90d1\u5dde\u4e4b\u540e\u89c1\u8bc6\u5230\u4e86\u8bb8\u591a\u4e1c\u897f\uff0c\u4e0d\u540c\u4e8e\u8001\u5bb6\u548c\u676d\u5dde\u3002\u90d1\u5dde\u7ed9\u4eba\u7684\u611f\u89c9\u66f4\u6709\u70df\u706b\u6c14\uff0c\u6ca1\u6709\u676d\u5dde\u7684\u5c40\u4fc3\u611f\u3002\u7ed9\u4eba\u7684\u611f\u89c9\u662f\u4e00\u79cd\u6162\u8282\u594f\u7684\u751f\u6d3b\u6c14\u606f\u3002\u6211\u4f4f\u7684\u5730\u65b9\u5728\u4e00\u4e2a\u65e7\u5c0f\u533a\uff0c\u867d\u7136\u4e0d\u5982\u5f53\u521d\u5728\u676d\u5dde\u4f4f\u7684\u5c0f\u533a\u9ad8\u6863\u4e9b\uff0c\u4f46\u662f\u4e5f\u522b\u5177\u4e00\u683c\uff0c\u5728\u8def\u4e0a\u8fd8\u80fd\u770b\u5230\u5c0f\u65f6\u5019\u5728\u8001\u5bb6\u89c1\u5230\u7684\u624b\u6276\u62d6\u62c9\u673a\uff0c\u5c0f\u533a\u95e8\u53e3\u6709\u5f88\u591a\u5c0f\u5546\u8d29\uff0c\u4e70\u83dc\u7684\uff0c\u4e70\u6c34\u679c\u7684\uff0c\u7279\u522b\u662f\u5230\u4e86\u665a\u4e0a\uff0c\u6709\u5f88\u591a\u8def\u8fb9\u644a\u3002\u7ed9\u4eba\u4e00\u79cd\u5728\u676d\u5dde\u4e94\u5e38\u591c\u5e02\u7684\u611f\u89c9\u3002\u5473\u9053\u548c\u4e94\u5e38\u591c\u5e02\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u4ef7\u683c\u6bd4\u4e94\u5e38\u4f4e\u4e00\u6863\u3002\\n\\n&emsp;&emsp;\u6bcf\u5929\u8fc7\u7740\u65e5\u51fa\u800c\u4f5c\uff0c\u65e5\u843d\u800c\u606f\u7684\u751f\u6d3b\u3002\u623f\u5b50\u5230\u516c\u53f8\uff0c\u516c\u4ea4\u8f66\u76f4\u8fbe\u3002\u7ecf\u5e38\u5728\u60f3\uff0c\u6211\u4e5f\u7b97\u662f\u5e78\u8fd0\u513f\uff0c\u5728 24 \u5e74\u5927\u80cc\u666f\u4e0d\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u4e2a\u8fd8\u4e0d\u9519\u7684\u57ce\u5e02\u627e\u5230\u4e86\u4e00\u4e2a\u6ee1\u610f\u7684\u5de5\u4f5c\uff0c\u53ea\u662f\u76ee\u524d\u8fd8\u6ca1\u53d1\u5de5\u8d44\u3002\\n\\n&emsp;&emsp;\u6bcf\u5929\u4e0b\u73ed\u4e4b\u540e\uff0c\u6234\u7740\u8033\u673a\uff0c\u5750\u7740\u516c\u4ea4\u8f66\uff0c\u770b\u7740\u4e0a\u8f66\u4e0b\u8f66\u7684\uff0c\u8def\u65c1\u6765\u6765\u5f80\u5f80\u7684\u4eba\uff0c\u4e5f\u522b\u6709\u4e00\u756a\u6ecb\u5473\u5728\u5fc3\u5934\u3002\u56de\u5230\u623f\u5b50\u91cc\uff0c\u770b\u7740\u5f00\u6e90\u793e\u533a\u7fa4\u91cc\u7684\u804a\u5929\u4fe1\u606f\uff0c\u81ea\u5df1\u5728\u5f00\u6e90\u7fa4\u91cc\u7684\u53d1\u8a00\uff0c\u4e0d\u540c\u4eba\u5728\u7fa4\u91cc\u601d\u7ef4\u7684\u78b0\u649e\u3002\u4e00\u5929\u8fc7\u7684\u7b80\u5355\u5145\u5b9e\u53c8\u5e73\u6de1\u3002\\n\\n&emsp;&emsp;\u7279\u6709\u7f18\u5206\u7684\u4e00\u4ef6\u4e8b\u662f \u7adf\u7136\u6709\u4e00\u4e2a\u548c\u6211\u5728\u540c\u4e00\u7ad9\u516c\u4ea4\u4e0a\u8f66\u53c8\u540c\u4e00\u7ad9\u4e0b\u8f66\u7684\u5973\u751f\uff0c\u4e5f\u7b97\u633a\u6709\u7f18\u5206\u3002\\n\\n&emsp;&emsp;\u5468\u672b\u53cc\u4f11\uff0c\u53ef\u80fd\u662f\u5728\u676d\u5dde\u4e0d\u6562\u5962\u671b\u7684\u4e8b\u60c5\uff0c\u5728\u676d\u5dde\u4e0a\u73ed\uff0c\u7ed9\u4eba\u7684\u611f\u89c9\u662f \u53cc\u4f11\u662f\u72af\u6cd5\u7684\uff0c\u4e0a\u73ed\u65f6\u95f4\u4ee5\u5355\u4f11\u5c45\u591a\uff0c\u5076\u89c1\u5927\u5c0f\u5468\u3002\u5468\u672b\u4e24\u5929\uff0c\u4e00\u5929\u8eba\u5e73\u4e71\u901b\uff0c\u4e00\u5929\u6295\u8eab\u4e8e\u5f00\u6e90\u548c\u5174\u8da3\u7231\u597d\u3002\u521d\u6765\u4e4d\u5230\uff0c\u6bcf\u4e2a\u5730\u65b9\u90fd\u6709\u81ea\u5df1\u90fd\u6709\u7684\u7279\u70b9\uff0c\u4e0d\u53bb\u901b\u901b\uff0c\u7b97\u662f\u767d\u6765\u4e00\u8d9f\u4e86\uff01\\n\\n&emsp;&emsp;\u6709\u65f6\u5019\u8eba\u5728\u5e8a\u4e0a\uff0c\u60f3\u7740\u8fd9\u6837\u8fc7\u7740\u6e3a\u5c0f\u53c8\u91cd\u590d\u7684\u65e5\u5b50\u4e5f\u633a\u597d\u7684\u3002\u4e0d\u5982\u670b\u53cb\u5708\u89c1\u5230\u7684\u7cbe\u81f4\uff0c\u4f46\u662f\u7b80\u7b80\u5355\u5355\u4e5f\u4e0d\u4e4f\u5473\u3002\\n\\n&emsp;&emsp;\u4e8e\u6b64\u800c\u6765\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u5230\u5e95\u5e94\u8be5\u8fc7\u600e\u6837\u7684\u4eba\u751f\uff1f\u4e4b\u524d\u5237\u89c6\u9891\u5237\u5230\u8fc7\u5927\u51b0\u8001\u5e08\u7684\u76f4\u64ad\u89c6\u9891\uff0c\u4ece\u4e2d\u4e5f\u9886\u609f\u5230\u4e86\u4e00\u4e9b\u3002\u8bba\u8bed\u4e2d\u8bf4\uff0c\u4e8c\u5341\u800c\u51a0\uff0c\u4e09\u5341\u800c\u7acb\u3002\u56db\u5341\u800c\u4e0d\u60d1\u3002\u6b64\u65f6\u6b63\u76f4\u5f31\u51a0\u4e4b\u5e74\uff0c\u6240\u6709\u7684\u4e00\u5207\u90fd\u521a\u521a\u5f00\u59cb\u3002\\n\\n&emsp;&emsp;\u6211\u89c9\u5f97\u4eba\u751f\u4e0d\u80fd\u88ab\u8fc7\u65e9\u5b9a\u4e49\uff0c\u4e5f\u4e0d\u5e94\u8be5\u88ab\u8fc7\u65e9\u5b9a\u4e49\uff0c\u91d1\u65e0\u8db3\u8d64\u4eba\u65e0\u5b8c\u4eba\u3002\\n\\n---\\n\\n&emsp;&emsp;\u6700\u540e\uff0c\u9644\u4e00\u5f20\u4e8e\u4eca\u5929\u4e0b\u5348\u62cd\u7684\u7167\u7247\uff0c\u5e0c\u671b\u5e74\u8fc7\u534a\u767e\uff0c\u4e5f\u80fd\u6709\u8fd9\u6837\u7684\u72b6\u6001\u3002\\n\\n![\u90d1\u5dde\u4e1c\u5468\u8def\u5730\u94c1\u53e3\u5f39\u94a2\u7434\u7684\u8001\u4eba](/img/other/other2.jpg)"},{"id":"wechatminiapp-msg-push","metadata":{"permalink":"/blog/wechatminiapp-msg-push","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/wehchat-app/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001.md","source":"@site/blog/wehchat-app/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001.md","title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001","description":"\u9700\u6c42\u80cc\u666f","date":"2024-10-10T22:41:01.000Z","tags":[{"inline":true,"label":"Unipp","permalink":"/blog/tags/unipp"},{"inline":true,"label":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/tags/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"},{"inline":true,"label":"Vue3","permalink":"/blog/tags/vue-3"}],"readingTime":6.6,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"wechatminiapp-msg-push","title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001","date":"2024-10-10T22:41:01.000Z","authors":"yuluo","tags":["Unipp","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","Vue3"],"keywords":["msg","Unipp","Vue3","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"]},"unlisted":false,"prevItem":{"title":"\u968f\u7b14 2024/11/24","permalink":"/blog/write-somethings"},"nextItem":{"title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55","permalink":"/blog/wechatminiapp-login-get-use-info"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u9700\u6c42\u80cc\u666f\\n\\n\u7ba1\u7406\u5458\u5728\u540e\u53f0\u7ed9\u5c0f\u7a0b\u5e8f\u7528\u6237\u63a8\u9001\u4e00\u4e9b\u6d88\u606f\uff0c\u4f8b\u5982\u7528\u6237\u6536\u8d39\u901a\u77e5\uff0c\u5de5\u5355\u7ef4\u62a4\u901a\u77e5\u7b49\u3002\\n\\n### \u529f\u80fd\u6d41\u7a0b\u56fe\\n\\n![\u5fae\u4fe1\u7528\u6237\u6d88\u606f\u63a8\u9001\u6d41\u7a0b\u56fe](/img/wechat/uniapp/img6.png)\\n\\n## \u529f\u80fd\u5b9e\u73b0\\n\\n### \u5c0f\u7a0b\u5e8f\u9879\u76ee\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u5f00\u542f\u7528\u6237\u8ba2\u9605\\n\\n> \u7528\u6237\u8ba2\u9605\u6d88\u606f\u6587\u6863\uff1ahttps://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/subscribe-message.html\\n\\n\u5728\u5c0f\u7a0b\u5e8f\u4e2d\u52a0\u5165\u5982\u4e0b\u4ee3\u7801\uff0c\u5f00\u542f\u7528\u6237\u8ba2\u9605\uff1a\\n\\n```tsx\\n  uni.requestSubscribeMessage({\\n    // \u6a21\u677f\u6d88\u606f id\\n    tmplIds: [\'tmpId\'],\\n    success(res) {\\n      console.log(res);\\n    },\\n    fail(err) {\\n      console.log(err);\\n    }\\n  })\\n```\\n\\n> 1. \u5fae\u4fe1\u5f00\u53d1\u5de5\u5177\u663e\u793a\u7528\u6237\u8ba2\u9605\u6d88\u606f\u5f39\u7a97\u548c\u771f\u673a\u8c03\u8bd5\u4e2d\uff0c\u663e\u793a\u5f97\u5185\u5bb9\u4e0d\u4e00\u6837\uff0c\u6ce8\u610f\u7504\u522b\u3002\\n> 2. \u7528\u6237\u5728\u8ba2\u9605\u6d88\u606f\u4e4b\u540e\uff0c\u70b9\u51fb\u4e0b\u9762\u5f97\u5bf9\u53f7\u5c31\u662f\u6c38\u4e45\u8ba2\u9605\uff0c\u53ef\u4ee5\u5728\u5c0f\u7a0b\u5e8f\u8bbe\u7f6e\u4e2d\u5173\u95ed\u3002\uff08\u5b9e\u9645\u8fd8\u662f\u8d70\u4e86\u8ba2\u9605\uff0c\u4f46\u662f\u7528\u6237\u65e0\u611f\uff09\\n> 3. \u7528\u6237\u8ba2\u9605\u6d88\u606f\u4e00\u5b9a\u8981\u901a\u8fc7**\u7528\u6237\u70b9\u51fb\u4e8b\u4ef6\u6216\u8005\u652f\u4ed8\u56de\u8c03**\u89e6\u53d1\uff0c\u5728 await \u4e2d\u4e0d\u751f\u6548\u3002\\n> 4. [wx.getSetting()](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/setting/wx.getSetting.html) \u63a5\u53e3\u53ef\u83b7\u53d6\u7528\u6237\u5bf9\u76f8\u5173\u6a21\u677f\u6d88\u606f\u7684\u8ba2\u9605\u72b6\u6001\u3002\\n> 5. \u5728\u89e6\u53d1\u7528\u6237\u8ba2\u9605\u6d88\u606f\u4e8b\u4ef6\u4e4b\u540e\uff0c\u5fae\u4fe1\u670d\u52a1\u5668\u4f1a\u53d1\u9001\u9a8c\u8bc1\u8bf7\u6c42\u5230\u5f00\u53d1\u8005\u670d\u52a1\u5668\u8fdb\u884c\u4fe1\u606f\u9a8c\u8bc1\u3002\\n\\n### \u540e\u53f0\u529f\u80fd\\n\\n#### \u529f\u80fd\u63cf\u8ff0\\n\\n\u540e\u53f0\u529f\u80fd\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u4e2a\uff1a\\n\\n1. \u63a5\u53d7\u5fae\u4fe1\u670d\u52a1\u5668\u5f97\u7528\u6237\u8ba2\u9605\u6d88\u606f\u9a8c\u8bc1\uff1b\\n2. \u9a8c\u8bc1\u901a\u8fc7\u540e\uff0c\u63a5\u53d7\u5fae\u4fe1\u670d\u52a1\u5668\u5f97\u7528\u6237\u8ba2\u9605\u6d88\u606f\u4e8b\u4ef6\uff1b\\n3. \u53d1\u9001\u6d88\u606f\u7ed9\u6307\u5b9a openId \u7528\u6237\\n\\n#### \u4ee3\u7801\u5b9e\u73b0\\n\\n1. \u5fae\u4fe1\u670d\u52a1\u5668\u6743\u9650\u9a8c\u8bc1\\n\\n   > \u5fae\u4fe1\u6743\u9650\u9a8c\u8bc1\u7b56\u7565\uff1a\\n   >\\n   > \u5c06\u81ea\u5b9a\u4e49 token \u548c timestamp\u3001nonce \u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u4e4b\u540e SHA1 \u52a0\u5bc6\u548c signature \u8fdb\u884c\u5bf9\u6bd4\uff0c\u76f8\u540c\u8fd4\u56de echostr\u3002\\n\\n   ```java\\n   // controller\\n   /**\\n    * \u5fae\u4fe1\u670d\u52a1\u5668\u9274\u6743\u63a5\u53e3\\n    *\\n    * @param signature \u7b7e\u540d\\n    * @param timestamp \u65f6\u95f4\u6233\\n    * @param nonce     \u968f\u673a\u6570\\n    * @param echostr   \u968f\u673a\u5b57\u7b26\u4e32\\n    * @return \u9274\u6743\u901a\u8fc7\u8fd4\u56de echostr\\n    */\\n   @GetMapping(value = \\"/user\\")\\n   public String userAuth(String signature, String timestamp, String nonce, String echostr) {\\n   \\n       return messageService.auth(signature, timestamp, nonce, echostr);\\n   }\\n   \\n   // service\\n   public String auth(String signature, String timestamp, String nonce, String echostr) {\\n   \\n       log.info(\\"\u63a5\u6536\u5230\u7684\u53c2\u6570\uff1a{} {} {} {}\\", signature, timestamp, nonce, echostr);\\n   \\n       String[] arr = new String[]{wxConfigProperties.getMsgToken(), timestamp, nonce};\\n       Arrays.sort(arr);\\n   \\n       StringBuilder sb = new StringBuilder();\\n       for (String str : arr) {\\n           sb.append(str);\\n       }\\n   \\n       String computedSignature = SHAUtil.sha1(sb.toString());\\n   \\n       log.info(\\"\u5fae\u4fe1\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684 \u7b7e\u540d\uff1a{}\\", signature);\\n       log.info(\\"SHA1 \u8ba1\u7b97\u51fa\u7684\u7b7e\u540d\uff1a{}\\", computedSignature);\\n   \\n       if (computedSignature.equals(signature)) {\\n           return echostr;\\n       } else {\\n           return \\"\\";\\n       }\\n   }\\n   ```\\n\\n2. \u5fae\u4fe1\u7528\u6237\u8ba2\u9605\u4e8b\u4ef6\u63a5\u53d7\u63a5\u53e3\\n\\n   > \u7528\u6237\u4e8b\u4ef6\u63a5\u53e3\u5fc5\u987b\u548c\u6743\u9650\u9a8c\u8bc1\u63a5\u53e3\u540c\u540d\uff0c\u5fae\u4fe1\u670d\u52a1\u5668\u4f1a\u53d1\u9001 GET \u7528\u4e8e\u9a8c\u8bc1\uff0cPOST \u7528\u4e8e\u53d1\u9001\u7528\u6237\u8ba2\u9605\u4e8b\u4ef6\u6d88\u606f\u3002\\n\\n   ```java\\n   // controller\\n   /**\\n   * \u5fae\u4fe1\u670d\u52a1\u5668\u5904\u7406\u7528\u6237\u4e8b\u4ef6\u63a5\u53e3\\n   */\\n   @PostMapping(value = \\"/user\\")\\n   public void user(HttpServletRequest request) {\\n   \\n       messageService.auth(request);\\n   }\\n   \\n   // service\\n   /**\\n    * // \u63a5\u53e3\u8fd4\u56de JSON \u548c XML \u8fd4\u56de\u4f53\u53ef\u4ee5\u5728\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u81ea\u5b9a\u4e49\u8fd4\u56de\u683c\u5f0f\u3002\\n    * {\\n    * \\"ToUserName\\":\\"gh_ea84a199bf81\\",\\n    * \\"FromUserName\\":\\"oG0NJ5Oi_3Dd1HlZJ14xfnA0sJ6s\\",\\n    * \\"CreateTime\\":1686131943,\\n    * \\"MsgType\\":\\"event\\",\\n    * \\"Event\\":\\"subscribe_msg_popup_event\\",\\n    * \\"List\\":{\\n    * \\"PopupScene\\":\\"0\\",\\n    * \\"SubscribeStatusString\\":\\"accept\\",\\n    * \\"TemplateId\\":\\"4ondVRxk4L20ihrJ3iI15BDK72XatGPxE0MeCVwHasQ\\"\\n    * // \u9009\u62e9\u660e\u6587\u52a0\u5bc6\u517c\u5bb9\u6a21\u5f0f\u65f6\uff0c\u8fd8\u4f1a\u8fd4\u56de\u52a0\u5bc6\u5185\u5bb9\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002\\n    * }\\n    * }\\n    */\\n   public void user(HttpServletRequest request) {\\n   \\n       try {\\n           BufferedReader reader = new BufferedReader(new InputStreamReader(request.getInputStream()));\\n           StringBuilder requestContent = new StringBuilder();\\n           String line;\\n           while ((line = reader.readLine()) != null) {\\n               requestContent.append(line);\\n           }\\n           reader.close();\\n   \\n           if (!StringUtils.hasText(requestContent.toString())) {\\n               throw new ServiceException(\\"\u5fae\u4fe1\u670d\u52a1\u5668\u54cd\u5e94\u5931\u8d25\uff01\\");\\n           }\\n           log.info(\\"\u5fae\u4fe1\u670d\u52a1\u5668\u54cd\u5e94\uff1a{}\\", requestContent);\\n   \\n           JsonNode jsonNode = JsonUtils.fromJson(requestContent.toString(), new TypeReference<>() {\\n           });\\n   \\n           // \u89e3\u6790\u4e3a JSONNode\\n           String toUserName = jsonNode.get(\\"ToUserName\\").asText();\\n           String fromUserName = jsonNode.get(\\"FromUserName\\").asText();\\n           long createTime = jsonNode.get(\\"CreateTime\\").asLong();\\n           String msgType = jsonNode.get(\\"MsgType\\").asText();\\n           String event = jsonNode.get(\\"Event\\").asText();\\n           JsonNode listNode = jsonNode.get(\\"List\\");\\n           String subscribeStatus = listNode.get(\\"SubscribeStatusString\\").asText();\\n           String templateId = listNode.get(\\"TemplateId\\").asText();\\n   \\n           // \u9700\u8981\u4fdd\u5b58\u7684\u7528\u6237\u8ba2\u9605\u6d88\u606f\u5b9e\u4f53\u4fe1\u606f\\n           WeChatMsg dbWeChatMsg = this.weChatMsgMapper.selectOneByQuery(new QueryWrapper().eq(WeChatMsg::getFromUserName, fromUserName));\\n    \\n           // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u8986\u76d6\u5b57\u6bb5\u5373\u53ef\\n           if (Objects.nonNull(dbWeChatMsg)) {\\n               dbWeChatMsg.setSubscribeStatus(subscribeStatus);\\n               dbWeChatMsg.setTmplId(templateId);\\n               dbWeChatMsg.setToUserName(toUserName);\\n   \\n               this.weChatMsgMapper.update(dbWeChatMsg);\\n           } else {\\n               // \u6ca1\u6709\u5219\u63d2\u5165\u6570\u636e\\n               WeChatMsg weChatMsg = new WeChatMsg();\\n               weChatMsg.setId(SnowFlakeIdGenerator.generateId());\\n               weChatMsg.setToUserName(toUserName);\\n               weChatMsg.setFromUserName(fromUserName);\\n               weChatMsg.setCreateTime(String.valueOf(createTime));\\n               weChatMsg.setMsgType(msgType);\\n               weChatMsg.setEvent(event);\\n               weChatMsg.setTmplId(templateId);\\n               weChatMsg.setSubscribeStatus(subscribeStatus);\\n   \\n               this.weChatMsgMapper.insert(weChatMsg);\\n           }\\n   \\n       } catch (IOException e) {\\n           throw new ServiceException(\\"\u63a5\u53d7\u5fae\u4fe1\u670d\u52a1\u5668\u8ba2\u9605\u6d88\u606f\u5f02\u5e38\uff1aerr: \\" + e.getMessage());\\n       }\\n   \\n   }\\n   ```\\n\\n3. \u5b9e\u4f53\\n\\n   ```java\\n   @Table(value = \\"tbl_wechat_sub\\")\\n   public class WeChatMsg {\\n   \\n       private Long id;\\n   \\n       private String toUserName;\\n   \\n       private String fromUserName;\\n   \\n       private String createTime;\\n   \\n       private String msgType;\\n   \\n       private String event;\\n   \\n       private String subscribeStatus;\\n   \\n       private String tmplId;\\n   }\\n   ```\\n\\n\u81f3\u6b64\uff0c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u670d\u52a1\u5668\u7684\u4ea4\u4e92\u529f\u80fd\u5c31\u5b8c\u6210\u4e86\u3002\\n\\n### \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u5f00\u901a\u548c\u53d1\u9001\u6d88\u606f\\n\\n#### \u6d88\u606f\u53d1\u9001\u540e\u53f0\u529f\u80fd\u5b9e\u73b0\\n\\n1. \u6d88\u606f\u53d1\u9001\u5668\\n\\n   > \u540e\u53f0\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u9700\u8981\u83b7\u53d6 accessToken\uff0c\u4e00\u822c2\u4e2a\u5c0f\u65f6\u5237\u65b0\u4e00\u6b21\uff0c\u9700\u8981\u52a8\u6001\u83b7\u53d6\u3002\\n\\n   ```java\\n   @Component\\n   public class WeChatSubscribeMessageSender {\\n   \\n       private static final Logger logger = org.slf4j.LoggerFactory.getLogger(WeChatSubscribeMessageSender.class);\\n       \\n       public void sendSubscribeMessage(String accessToken, String openid, String templateId, String page, String data) {\\n          \\n           try {\\n               String url = GarageConstants.WeChatConstants.MsgBaseUrl + \\"?access_token=\\" + accessToken;\\n   \\n               URL apiUrl = new URL(url);\\n               HttpURLConnection connection = (HttpURLConnection) apiUrl.openConnection();\\n               connection.setRequestMethod(\\"POST\\");\\n               connection.setRequestProperty(\\"Content-Type\\", \\"application/json;charset=UTF-8\\");\\n               connection.setDoOutput(true);\\n   \\n               // \u6784\u5efa\u8bf7\u6c42\u4f53\\n               String body = buildRequestBody(openid, templateId, page, data);\\n               byte[] requestBodyBytes = body.getBytes(StandardCharsets.UTF_8);\\n   \\n               // \u53d1\u9001\u8bf7\u6c42\\n               connection.getOutputStream().write(requestBodyBytes);\\n   \\n               // \u8bfb\u53d6\u54cd\u5e94\\n               int responseCode = connection.getResponseCode();\\n               BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\\n               StringBuilder response = new StringBuilder();\\n               String line;\\n               while ((line = reader.readLine()) != null) {\\n                   response.append(line);\\n               }\\n               reader.close();\\n   \\n               if (responseCode == HttpURLConnection.HTTP_OK) {\\n                   // \u8bf7\u6c42\u6210\u529f\u5904\u7406\u903b\u8f91\\n                   logger.info(\\"\u53d1\u9001\u8ba2\u9605\u6d88\u606f\u6210\u529f. resp: {}\\", response);\\n               } else {\\n                   // \u8bf7\u6c42\u5931\u8d25\u5904\u7406\u903b\u8f91\\n                   logger.info(\\"\u53d1\u9001\u8ba2\u9605\u6d88\u606f\u5931\u8d25, \u54cd\u5e94\uff1a{}\\", response);\\n               }\\n   \\n               connection.disconnect();\\n           } catch (IOException e) {\\n               throw new ServiceException(\\"\u5fae\u4fe1\u6d88\u606f\u63a8\u9001\u5931\u8d25\uff01err: \\" + e.getMessage());\\n           }\\n       }\\n   \\n       /**\\n        * \u6784\u5efa\u8bf7\u6c42\u4f53\u7684JSON\u5b57\u7b26\u4e32\\n        */\\n       private String buildRequestBody(String openid, String templateId, String page, String data) {\\n           \\n           return String.format(\\n                   \\"{\\\\\\"touser\\\\\\":\\\\\\"%s\\\\\\",\\\\\\"template_id\\\\\\":\\\\\\"%s\\\\\\",\\\\\\"page\\\\\\":\\\\\\"%s\\\\\\",\\\\\\"data\\\\\\":%s}\\",\\n                   openid, templateId, page, data\\n           );\\n       }\\n   }\\n   ```\\n\\n2. \u53d1\u9001\u5fae\u4fe1\u6d88\u606f\\n\\n   ```java\\n   public class WeChatMsgHelper {\\n   \\n       private static final Logger logger = LoggerFactory.getLogger(WeChatMsgHelper.class);\\n   \\n       // \u63a8\u9001\u6d88\u606f\u7684\u65f6\u5019\u9700\u8981 accessToken\uff0c\u8fd9\u91cc\u662f\u83b7\u53d6\\n       // token \u7684\u65b9\u6cd5\uff0c\u5728\u5b9e\u9645\u73af\u5883\u4e2d\uff0c\u4e00\u822c\u662f\u5b9a\u65f6\u5237\u65b0\uff0c\\n       // \u4e24\u4e2a\u5c0f\u65f6\u5185\u6709\u6548\uff0c\u83b7\u53d6accesstoken\u65f6\u9700\u8981appid\u548csecret\u4fe1\u606f\uff0c\u4e00\u822c\u662f\u540e\u53f0\u53c2\u6570\u6216\u5e38\u91cf\u8fdb\u884c\u914d\u7f6e\\n       // \u83b7\u53d6 accessToken \u7684\u8bf7\u6c42\u63a5\u53e3\\n       private final static String GetAccessToken = GarageConstants.WeChatConstants.TokenBaseUrl + \\"&appid={appid}&secret={secret}\\";\\n   \\n       public static String refreshAccessToken(String appid, String secret, RestTemplate restTemplate){\\n   \\n           if(!StringUtils.hasText(appid) || !StringUtils.hasText(secret)){\\n               logger.error(\\"\u5237\u65b0\u5fae\u4fe1 AccessToken \u65f6\uff0c\u7f3a\u5c11 appid \u6216 secret \u53c2\u6570\uff01\\");\\n               throw new ServiceException(\\"\u5237\u65b0\u5fae\u4fe1 AccessToken \u65f6\uff0c\u7f3a\u5c11 appid \u6216 secret \u53c2\u6570\uff01\\");\\n           }\\n   \\n           Map<String, Object> param = new HashMap<>();\\n           param.put(\\"appid\\",appid);\\n           param.put(\\"secret\\",secret);\\n   \\n           ResponseEntity<JSONObject> resp = restTemplate.getForEntity(\\n                   GetAccessToken,\\n                   JSONObject.class,\\n                   param\\n           );\\n   \\n           JSONObject jsonObj = resp.getBody();\\n           String accessToken = null;\\n           if(jsonObj != null){\\n               accessToken = jsonObj.getStr(\\"access_token\\");\\n           }\\n   \\n           return accessToken;\\n       }\\n   \\n       public static Map<String, Object> createDataItem(String name, String value) {\\n   \\n           Map<String, Object> item = new HashMap<>();\\n           item.put(\\"value\\", value);\\n   \\n           return item;\\n       }\\n   \\n       /**\\n        * \u53d1\u9001\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\\n        * @param configProperties \u5fae\u4fe1\u914d\u7f6e\u5c5e\u6027\\n        * @param restTemplate restTemplate \u6a21\u677f\\n        * @param openId \u7528\u6237 openId\\n        * @param templateId \u6a21\u677f Id\\n        * @param page \u70b9\u51fb\u8df3\u8f6c\u7684\u9875\u9762\u8def\u5f84\\n        * @param jsonData \u53d1\u9001\u7684 json \u6570\u636e\\n        * @param messageSender \u6d88\u606f\u53d1\u9001\u5668\\n        */\\n       public static void send(\\n               WXConfigProperties configProperties,\\n               RestTemplate restTemplate,\\n               String openId,\\n               String templateId,\\n               String page,\\n               String jsonData,\\n               WeChatSubscribeMessageSender messageSender\\n       ) {\\n   \\n           // \u5237\u65b0 token\\n           String accessToken = WeChatMsgHelper.refreshAccessToken(\\n                   configProperties.getAppId(),\\n                   configProperties.getAppSecret(),\\n                   restTemplate\\n           );\\n   \\n           messageSender.sendSubscribeMessage(accessToken, openId, templateId, page, jsonData);\\n       }\\n   \\n   }\\n   ```\\n\\n3. \u5728\u4e1a\u52a1\u903b\u8f91\u4e2d\u8c03\u7528\\n\\n   > \u4e00\u822c\u9700\u8981\u83b7\u53d6\u901a\u77e5\u7528\u6237\u7684 openId\uff0c\u53bb\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u5230 templateId\uff0c\u4e4b\u540e\u7ec4\u88c5\u6d88\u606f\u7136\u540e\u53d1\u9001\u7ed9\u7528\u6237\u3002\\n\\n   ```java\\n   // \u914d\u7f6e\u7684 JSON \u6570\u636e\u4fe1\u606f\u9700\u8981\u770b\u540e\u9762\u7684 \u5fae\u4fe1\u6a21\u677f\u53c2\u6570\u3002\\n   JSONObject messageData = new JSONObject();\\n   messageData.set(\\"thing8\\", createDataItem(\\"\u670d\u52a1\u5185\u5bb9\\", projectInfoById.getName()));\\n   messageData.set(\\"thing5\\", createDataItem(\\"\u5907\u6ce8\\", userNotify.getText()));\\n   String jsonData = messageData.toJSONString(0);\\n   \\n   // \u7ec4\u88c5\u53d1\u9001\u6d88\u606f\u9700\u8981\u7684\u53c2\u6570\\n   WeChatMsgHelper.send(\\n       configProperties,\\n       restTemplate,\\n       user.getOpenId(),\\n       weChatMsg.getTmplId(),\\n       \\"pages/index\\",\\n       jsonData,\\n       messageSender\\n   );\\n   ```\\n\\n#### \u5c0f\u7a0b\u5e8f\u540e\u53f0\u914d\u7f6e\\n\\n##### \u6d88\u606f\u63a8\u9001\u914d\u7f6e\\n\\n\u5728\u5c0f\u7a0b\u5e8f\u540e\u53f0 -> \u7ba1\u7406 -> \u5f00\u53d1\u7ba1\u7406 -> \u6d88\u606f\u63a8\u9001\u4e2d\u914d\u7f6e\u540e\u53f0\u670d\u52a1\u5668\u5730\u5740\u5730\u5740\u4fe1\u606f\u3002\\n\\n> \u6ce8\u610f\uff1a\u5728\u914d\u7f6e\u65f6\u9700\u8981\u53d1\u9001\u9a8c\u8bc1\u5230\u540e\u53f0\u670d\u52a1\u5668\u9a8c\u8bc1\uff0c\u6240\u4ee5\u9700\u8981\u90e8\u7f72\u5230\u516c\u7f51\u53ef\u8bbf\u95ee\u5f97\u73af\u5883\u4e2d\u6d4b\u8bd5\u3002\\n\\n\u5b8c\u6210\u76f8\u5173\u914d\u7f6e\u5982\u4e0b\uff1a\\n\\n![\u5fae\u4fe1\u6d88\u606f\u63a8\u9001\u914d\u7f6e](/img/wechat/uniapp/img3.png)\\n\\n##### \u6a21\u677f\u6d88\u606f\u914d\u7f6e\\n\\n\u5c0f\u7a0b\u5e8f\u540e\u53f0 -> \u57fa\u7840\u529f\u80fd -> \u8ba2\u9605\u6d88\u606f  -> \u5728\u6211\u7684\u6a21\u677f\u4e2d\u9009\u62e9\u6a21\u677f\u914d\u7f6e\u3002\\n\\n![\u5fae\u4fe1\u6d88\u606f\u6a21\u677f\u914d\u7f6e](/img/wechat/uniapp/img4.png)\\n\\n## \u6d4b\u8bd5\\n\\n### \u624b\u52a8\u7f16\u5199 controller \u63a5\u53e3\\n\\n```java\\n/**\\n * \u6d4b\u8bd5\u4f7f\u7528\\n * \u6a21\u62df\u6d88\u606f\u63a8\u9001\uff0c\u5199\u6b7b\u6240\u6709\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u5b9e\u9645\u4e2d\u5e94\u8be5\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u5230\u5df2\u7ecf\u8ba2\u9605\u6d88\u606f\u7684\u7528\u6237\u53d1\u9001\u6d88\u606f\u901a\u77e5\u3002\\n */\\n@GetMapping(\\"/push\\")\\npublic void push() {\\n\\n    String openid = \\"ooaER7ctq6G_5CNrs0LE2vR2wCzk\\";\\n    String templateId = \\"3gMbhH_bFuZlXiaJffCqXlNoqKvJwz_zUSmr-z1jEyo\\";\\n    String page = \\"/pages/index\\";\\n\\n    JSONObject messageData = new JSONObject();\\n    messageData.set(\\"thing1\\", createDataItem(\\"\u516c\u53f8\u540d\u79f0\\", \\"\u6d4b\u8bd5\u516c\u53f8\\"));\\n    messageData.set(\\"thing4\\", createDataItem(\\"\u5730\u5740\\", \\"\u5929\u5ead\\"));\\n    messageData.set(\\"name2\\", createDataItem(\\"\u7528\u6237\u59d3\u540d\\", \\"\u6d4b\u8bd5-\u7267\u751f\\"));\\n    messageData.set(\\"phone_number3\\", createDataItem(\\"\u8054\u7cfb\u65b9\u5f0f\\", \\"18198086793\\"));\\n    messageData.set(\\"thing19\\", createDataItem(\\"\u62a5\u4fee\u539f\u56e0\\", \\"\u6d4b\u8bd5\u6d88\u606f\u63a8\u9001\\"));\\n    String jsonData = messageData.toJSONString(0);\\n\\n    WeChatMsgHelper.send(configProperties, restTemplate, openid, templateId, page, jsonData, messageSender);\\n}\\n```\\n\\n### \u5b9e\u9645\u4f7f\u7528\\n\\n\u5b9e\u9645\u4f7f\u7528\u9700\u8981\u5728\u4e1a\u52a1\u4ee3\u7801\u903b\u8f91\u4e2d\u8c03\u7528\u3002\\n\\n## \u6548\u679c\u9884\u89c8\\n\\n\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u63a5\u6536\u5982\u4e0b\uff1a\\n\\n![\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u63a5\u6536](/img/wechat/uniapp/img5.png)"},{"id":"wechatminiapp-login-get-use-info","metadata":{"permalink":"/blog/wechatminiapp-login-get-use-info","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/wehchat-app/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55.md","source":"@site/blog/wehchat-app/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55.md","title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55","description":"\u80cc\u666f\u9700\u6c42","date":"2024-10-07T21:10:15.000Z","tags":[{"inline":true,"label":"Unipp","permalink":"/blog/tags/unipp"},{"inline":true,"label":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/tags/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"},{"inline":true,"label":"Vue3","permalink":"/blog/tags/vue-3"}],"readingTime":7.823333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"wechatminiapp-login-get-use-info","title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55","date":"2024-10-07T21:10:15.000Z","authors":"yuluo","tags":["Unipp","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","Vue3"],"keywords":["login","getUserInfo","Unipp","Vue3","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"]},"unlisted":false,"prevItem":{"title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6d88\u606f\u63a8\u9001","permalink":"/blog/wechatminiapp-msg-push"},"nextItem":{"title":"Element-plus Upload Debug \u8bb0\u5f55","permalink":"/blog/element-plus-upload-debug"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\u9700\u6c42\\n\\n\u5c0f\u7a0b\u5e8f\u7528\u6237\u8fdb\u5165\u5c0f\u7a0b\u5e8f\uff0c\u5224\u65ad\u7528\u6237\u672a\u767b\u5f55\u5219\u8df3\u8f6c\u81f3\u767b\u5f55\u72b6\u6001\u8fdb\u884c\u767b\u5f55\u64cd\u4f5c\uff0c\u767b\u5f55\u65f6\u540e\u5982\u679c\u540e\u53f0\u6ca1\u6709\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u8df3\u8f6c\u81f3\u83b7\u53d6\u4fe1\u606f\u4fe1\u606f\u9875\u9762\u83b7\u53d6\u4e4b\u540e\u518d\u8fdb\u884c\u767b\u5f55\u3002\\n\\n![img](/img/wechat/uniapp/a6dba8d0a0b07e688f3eb741121d1704.jpeg)\\n\\n## \u5c0f\u7a0b\u5e8f\u524d\u53f0\\n\\n\u68c0\u6d4b\u7528\u6237\u662f\u5426\u767b\u5f55\uff0c\u6211\u5c06\u7528\u6237\u4fe1\u606f\u5b58\u5230\u4e86 storage \u4e2d\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\uff0c\u5728 onMounted \u4e2d\u8c03\u7528\uff1a\\n\\n```ts\\nconst checkUserLogin = () => {\\n  if (uni.getStorageSync(\\"user\\") === \\"\\") {\\n    uni.redirectTo({ url: \'login\' })\\n  } else {\\n    console.log(uni.getStorageSync(\\"user\\"));\\n  }\\n}\\n```\\n\\n\u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u5219\u8df3\u8f6c\u81f3\u767b\u5f55\u9875\u9762\u3002\u767b\u5f55\u9875\uff1a\\n\\n```html\\n<view>\\n    <up-button open-type=\\"get\\" @click=\\"userLogin()\\" type=\\"primary\\" size=\\"normal\\" shape=\\"circle\\" text=\\"\u767b\u5f55\\"\\n               :hairline=\\"true\\"></up-button>\\n</view>\\n\\n// script\\nconst userLogin = () => {\\n\\n // \u4f7f\u7528 uniapp \u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u63a5\u53e3\\n    uni.login({\\n        \\"provider\\": \\"weixin\\",\\n        // \u5fae\u4fe1\u767b\u5f55\u4ec5\u8bf7\u6c42\u6388\u6743\u8ba4\u8bc1\\n        \\"onlyAuthorize\\": true,\\n        success: function (event) {\\n            const { code } = event\\n            console.log(\\"weixin code: \\", code);\\n   \\n   // \u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u81ea\u5b9a\u4e49\u7684\u4e1a\u52a1\u903b\u8f91\\n            if (uni.getStorageSync(\\"dbFlag\\") && uni.getStorageSync(\\"userData\\")) {\\n                const userData = uni.getStorageSync(\\"userData\\")\\n                wxUserLogin({\\n                    code: code,\\n                    phone: userData.phone,\\n                    nickName: userData.nickName,\\n                    avatar: userData.avatar\\n                }).then((res: any) => {\\n                    if (res.statusCode === 200) {\\n                        if (res.data.code === ResponseCode.Success) {\\n                            // \u8bbe\u7f6e\u767b\u5f55\u6001\\n                            currentUser.value = res.data.data\\n                            let user: UserAuth = {}\\n                            user.token = currentUser.value.token\\n                            user.type = Number(currentUser.value.type)\\n                            user.userId = currentUser.value.id\\n\\n                            uni.removeStorageSync(\\"user\\")\\n                            uni.setStorageSync(\\"user\\", JSON.stringify(user))\\n                            uni.removeStorageSync(\\"userData\\")\\n                            uni.removeStorageSync(\\"dbFlag\\")\\n\\n                            uni.redirectTo({\\n                                url: \\"index\\"\\n                            })\\n                        } else {\\n                            uni.showModal({\\n                                title: \'\u767b\u5f55\u5931\u8d25\',\\n                                content: \\"\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u91cd\u8bd5\\",\\n                                success(res) {\\n                                    if (res.confirm) {\\n                                    } else if (res.cancel) {\\n                                    }\\n                                }\\n                            })\\n                        }\\n                    } else {\\n                        uni.showModal({\\n                            title: \'\u767b\u5f55\u5931\u8d25\',\\n                            content: res.message,\\n                            success(res) {\\n                                if (res.confirm) {\\n                                    // \u518d\u6b21\u5c1d\u8bd5\u767b\u5f55\\n                                    userLogin()\\n                                } else if (res.cancel) {\\n                                }\\n                            }\\n                        })\\n                    }\\n                })\\n            } else {\\n                wxUserLogin({\\n                    code: code\\n                }).then((res: any) => {\\n                    if (res.statusCode === 200) {\\n                        if (res.data.code === ResponseCode.Success) {\\n                            if (res.data.data.dbFlag == 1) {\\n                                // \u8868\u660e\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u5728\u540e\u53f0\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5bf9\u5e94\u7684\u7528\u6237\u6635\u79f0\\n                                // \u7b49\u4fe1\u606f\uff0c\u9700\u8981\u83b7\u53d6\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002\\n                                uni.setStorageSync(\\"dbFlag\\", res.data.data.dbFlag)\\n                                setUserInfo()\\n                                console.log(\\"\u540e\u53f0\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7528\u6237\u4fe1\u606f\uff0c\u8df3\u8f6c\u81f3\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u9875\uff01\\");\\n                                return\\n                            }\\n\\n                            // \u8bbe\u7f6e\u767b\u5f55\u6001\\n                            currentUser.value = res.data.data\\n                            let user: UserAuth = {}\\n                            user.token = currentUser.value.token\\n                            user.type = Number(currentUser.value.type)\\n                            user.userId = currentUser.value.id\\n\\n                            uni.removeStorageSync(\\"user\\")\\n                            uni.setStorageSync(\\"user\\", JSON.stringify(user))\\n\\n                            uni.redirectTo({\\n                                url: \\"index\\"\\n                            })\\n                        } else {\\n                            uni.showModal({\\n                                title: \'\u767b\u5f55\u5931\u8d25\',\\n                                content: \\"\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u91cd\u8bd5\\",\\n                                success(res) {\\n                                    if (res.confirm) {\\n                                        // \u518d\u6b21\u5c1d\u8bd5\u767b\u5f55\\n                                        userLogin()\\n                                    } else if (res.cancel) {\\n                                    }\\n                                }\\n                            })\\n                        }\\n                    } else {\\n                        uni.showModal({\\n                            title: \'\u767b\u5f55\u5931\u8d25\',\\n                            content: res.message,\\n                            success(res) {\\n                                if (res.confirm) {\\n                                    // \u518d\u6b21\u5c1d\u8bd5\u767b\u5f55\\n                                    userLogin()\\n                                } else if (res.cancel) {\\n                                }\\n                            }\\n                        })\\n                    }\\n                })\\n            }\\n        },\\n        fail: function (err) {\\n            console.log(\\"\u5fae\u4fe1\u767b\u5f55\u5931\u8d25\uff1a\\", err);\\n        }\\n    })\\n}\\n```\\n\\n\u5982\u679c\u540e\u53f0\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7528\u6237\u7684\u8eab\u4efd\u4fe1\u606f\uff0c\u5219\u8fd4\u56de\u7684\u6807\u5fd7\u4f4d\u4e3a 1 \uff0c\u5c0f\u7a0b\u5e8f\u8df3\u8f6c\u5230\u83b7\u53d6\u7528\u6237\u8eab\u4efd\u4fe1\u606f\u7684\u9875\u9762\uff0c\u8fdb\u884c\u83b7\u53d6\uff1a\\n\\n```ts\\n// \u7528\u6237\u5728\u767b\u5f55\u4e4b\u540e\uff0c\u9700\u8981\u83b7\u53d6\u7528\u6237\u7684\u6635\u79f0\u548c\u5934\u50cf\u4fe1\u606f\u7528\u4e8e\u5c55\u793a\\nconst setUserInfo = () => {\\n    uni.redirectTo({ url: \'getUserInfo\' })\\n}\\n```\\n\\n\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684 vue \u9875\u9762\uff1a\\n\\n```vue\\n<template>\\n    <up-navbar leftIconColor=\\"#f5f5f5\\" :placeholder=\\"true\\" :safeAreaInsetTop=\\"true\\" title=\\"\u83b7\u53d6\u7528\u6237\u5934\u50cf\u6635\u79f0\\" :autoBack=\\"true\\">\\n    </up-navbar>\\n    <up-toast ref=\\"uToastRef\\"></up-toast>\\n    <view class=\\"containar\\">\\n        <view class=\\"index\\">\\n            <view class=\\"avatarUrl\\">\\n                <button open-type=\\"chooseAvatar\\" @chooseavatar=\\"onChooseavatar\\">\\n                    <image :src=\\"avatarUrl\\" class=\\"refreshIcon\\"></image>\\n                </button>\\n            </view>\\n            <view class=\\"userName\\">\\n                <text>\u6635\u79f0\uff1a</text>\\n                <input :clearable=\\"false\\" type=\\"nickname\\" class=\\"weui-input\\" :value=\\"userName\\" @blur=\\"bindblur\\"\\n                    placeholder=\\"\u8bf7\u9009\u62e9\u6216\u8f93\u5165\u6635\u79f0\\" @input=\\"bindinput\\" />\\n            </view>\\n            <view class=\\"userPhone\\">\\n                <text>\u624b\u673a\u53f7\uff1a</text>\\n                <up-button class=\\"phone\\" type=\\"success\\" open-type=\\"getPhoneNumber\\"\\n                    @getphonenumber=\\"getPhoneNumber\\">\u83b7\u53d6\u624b\u673a\u53f7</up-button>\\n            </view>\\n        </view>\\n\\n        <view style=\\"width: 100%;height: 1px; background: #EEE;\\">\\n\\n        </view>\\n        <view class=\\"tips_1\\" style=\\"width: 700rpx; height: 20px; font-size: 13px; margin: auto; margin-top: 40rpx;\\">\\n            \xb7 \u7533\u8bf7\u83b7\u53d6\u4ee5\u4e0b\u6743\u9650\\n        </view>\\n        <view class=\\"tips\\">\\n            \xb7 \u83b7\u5f97\u4f60\u7684\u4fe1\u606f\uff08\u6635\u79f0\u3001\u5934\u50cf\u3001\u624b\u673a\u53f7\u7b49\uff09\\n        </view>\\n\\n        <view>\\n            <br>\\n            <up-button @click=\\"onSubmit\\" type=\\"primary\\">\u4fdd\u5b58</up-button>\\n        </view>\\n    </view>\\n</template>\\n\\n<script lang=\\"ts\\" setup>\\nimport { ResponseCode } from \\"@/types\\";\\nimport { getUserPhone } from \\"../alova/service\\"\\nimport { BASE_URL } from \'@/config\';\\n\\nconst avatarUrl = ref<any>()\\nconst userName = ref<string>(\'\')\\nconst avatarPath = ref<string>(\'\')\\nconst userPhone = ref<string>(\'\')\\nconst uToastRef = ref(null)\\nconst list = ref([\\n    {\\n        type: \'success\',\\n        position: \'top\',\\n        icon: false,\\n        duration: 3000,\\n        message: \\"\u5c0f\u7a0b\u5e8f\u68c0\u6d4b\u5230\u6ca1\u6709\u60a8\u7684\u7528\u6237\u4fe1\u606f\uff0c\u8bf7\u4f9d\u6b21\u70b9\u51fb\u4e0b\u65b9\u5934\u50cf\u548c\u6635\u79f0\u4ee5\u83b7\u53d6\uff01\\"\\n    }\\n])\\n\\nonReady(() => {\\n    showToast(list.value[0])\\n})\\n\\n// \u65b9\u6cd5\\nconst showToast = (params: any) => {\\n    uToastRef.value.show({\\n        ...params,\\n        complete() {\\n            params.url && uni.navigateTo({\\n                url: params.url\\n            });\\n        }\\n    });\\n}\\n\\nconst getPhoneNumber = (e: any) => {\\n\\n    console.log(\\"\u5fae\u4fe1\u83b7\u53d6\u7535\u8bdd\u53f7\u7801\u7684 code: \\", e.detail.code);\\n\\n    uni.login({\\n        provider: \'weixin\',\\n        success: (_: any) => {\\n            // \u8c03\u7528\u540e\u7aef\u63a5\u53e3\u83b7\u53d6\u7528\u6237\u624b\u673a\u53f7\u7801\\n            getUserPhone({ code: e.detail.code }).then((res: any) => {\\n                if (res.data.code === ResponseCode.Success) {\\n                    const data = JSON.parse(res.data.data)\\n                    // console.log(data);\\n                    userPhone.value = data.phone_info.phoneNumber;\\n                }\\n            })\\n        },\\n        fail: ((err: any) => {\\n            uni.showModal({\\n                title: \'\u9519\u8bef\',\\n                content: \'\u83b7\u53d6\u7528\u6237\u624b\u673a\u53f7\u5931\u8d25\uff0c err: \' + err,\\n                success(res) {\\n                    if (res.confirm) {\\n                    } else if (res.cancel) {\\n                    }\\n                }\\n            })\\n        })\\n    });\\n\\n    // \u624b\u52a8\u8d4b\u503c\uff0cdev \u8df3\u8fc7\u83b7\u53d6\u624b\u673a\u53f7\\n    // userPhone.value=\'18198086793\'\\n\\n}\\n\\nconst bindblur = (e: any) => {\\n    userName.value = e.detail.value;\\n}\\n\\nconst bindinput = (e: any) => {\\n    userName.value = e.detail.value;\\n}\\n\\nconst onChooseavatar = (e: any) => {\\n\\n    avatarUrl.value = e.detail.avatarUrl\\n}\\n\\n/**\\n * \u4e0a\u4f20\u5934\u50cf\uff0c\u8fd4\u56de\u5934\u50cf\u7684\u8def\u5f84\u4fe1\u606f\\n */\\nconst onSubmit = () => {\\n\\n    if (userName.value == \'\' || userPhone.value == \'\' || avatarUrl.value == \'\') {\\n        uni.showModal({\\n            title: \'\u4e2a\u4eba\u4fe1\u606f\u672a\u8bbe\u7f6e\',\\n            content: \'\u8bf7\u70b9\u51fb\u76f8\u5e94\u9009\u9879\u4ee5\u8bbe\u7f6e\',\\n        })\\n        return\\n    }\\n\\n    // \u5728\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5de5\u5177\u548c\u771f\u673a\u8c03\u8bd5\u4e2d\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5982\u679c\u5728\u4f53\u9a8c\u7248\u4e2d\uff0c\u9700\u8981\u5728\u5c0f\u7a0b\u5e8f\u540e\u53f0\u8bbe\u7f6e\u4e0a\u4f20\u6587\u4ef6\u57df\u540d\uff0c\u4e0d\u7136\u62a5\u9519\uff01\\n    // \u5728\u63d0\u4ea4\u4e2d\uff0c\u5c06\u7528\u6237\u7684\u6635\u79f0\u548c\u5934\u50cf\u4fe1\u606f\u63d0\u4ea4\u5230\u6570\u636e\u5e93\u5b58\u50a8\\n    // \u5148\u4e0a\u4f20\u56fe\u7247\u83b7\u5f97 \u56fe\u7247\u8def\u5f84\\n    uni.uploadFile({\\n        url: BASE_URL + \'upload/avatar\',\\n        filePath: avatarUrl.value,\\n        name: \'file\',\\n        success: function (res) {\\n            let resp = JSON.parse(res.data)\\n            avatarPath.value = resp.data\\n\\n            // \u4fdd\u5b58\u7528\u6237\u4fe1\u606f\\n            save()\\n        },\\n        fail: function (err) {\\n            uni.showModal({\\n                title: \'\u4e0a\u4f20\u5934\u50cf\u6587\u4ef6\u5931\u8d25\',\\n                content: err.errMsg,\\n            })\\n            console.log(err)\\n        }\\n    })\\n}\\n\\nconst save = () => {\\n\\n    const data = {\\n        nickName: userName.value,\\n        avatar: avatarPath.value,\\n        phone: userPhone.value,\\n    }\\n\\n    // \u6682\u65f6\u5b58\u50a8\u5230 storage \u4e2d\uff0c\u5728 login \u4e2d\u4f7f\u7528\\n    uni.removeStorageSync(\\"userData\\")\\n    uni.setStorageSync(\\"userData\\", data)\\n\\n    // \u8df3\u8f6c\u81f3\u767b\u5f55\u9875\\n    uni.redirectTo({\\n        url: \\"login\\"\\n    })\\n}\\n<\/script>\\n\\n<style lang=\\"scss\\" scoped>\\n.containar {\\n    width: 100vw;\\n    height: 100vh;\\n    background: #fff;\\n    box-sizing: border-box;\\n    padding: 0 30rpx;\\n\\n    .index {\\n        display: flex;\\n        align-items: center;\\n        flex-direction: column;\\n    }\\n\\n    .avatarUrl {\\n        padding: 80rpx 0 40rpx;\\n        background: #fff;\\n\\n        button {\\n            background: #fff;\\n            line-height: 80rpx;\\n            height: auto;\\n            border: none !important;\\n            width: auto;\\n            // padding: 20rpx 30rpx;\\n            margin: 0;\\n            display: flex;\\n            border: none;\\n            justify-content: center;\\n            align-items: center;\\n\\n            &::after {\\n                border: none;\\n            }\\n\\n            .refreshIcon {\\n                width: 160rpx;\\n                height: 160rpx;\\n                border-radius: 50%;\\n                background-color: #ccc;\\n            }\\n\\n            .jt {\\n                width: 14rpx;\\n                height: 28rpx;\\n            }\\n        }\\n    }\\n\\n    .userName {\\n        background: #fff;\\n        padding: 20rpx 30rpx 80rpx;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n\\n        // set font color\\n        color: black;\\n\\n        .weui-input {\\n            width: 110px;\\n            padding-left: 60rpx;\\n        }\\n    }\\n\\n    .userPhone {\\n        display: flex;\\n        width: 233px;\\n        align-items: center;\\n        margin-bottom: 10px;\\n\\n        // \u89e3\u51b3\u5982\u679c\u7528\u6237\u624b\u673a\u8bbe\u7f6e\u4e86\u9ed1\u6697\u6a21\u5f0f\uff0c\u5b57\u4e0d\u663e\u793a\u7684\u95ee\u9898\\n        color: black;\\n    }\\n}\\n\\n.tips {\\n    width: 700rpx;\\n    height: 20px;\\n    font-size: 13px;\\n    margin: 5px 0 15px 19px;\\n    color: #cbcbcb;\\n}\\n\\n.tips_1 {\\n    color: black;\\n}\\n\\n::v-deep .u-button {\\n    border-radius: 10px !important;\\n    width: 160px !important;\\n}\\n</style>\\n```\\n\\n\u7528\u6237\u70b9\u51fb\u786e\u8ba4\u4e4b\u540e\uff0c\u8df3\u8f6c\u81f3 login \u9875\u9762\uff0c\u5b8c\u6210\u767b\u5f55\u64cd\u4f5c\u3002\\n\\n## Spring Boot \u540e\u53f0\u903b\u8f91\\n\\n### \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7528\u6237\u767b\u5f55\u63a5\u53e3\\n\\n\u5728\u524d\u9762\u7684\u6d41\u7a0b\u56fe\u4e2d\uff0c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7684\u767b\u5f55\u64cd\u4f5c\u662f\u5148\u8bf7\u6c42\u5fae\u4fe1\u670d\u52a1\u5668\uff0c\u83b7\u53d6 code\uff0c\u5728\u5c06 code \u4f20\u9012\u81f3\u5e94\u7528\u540e\u53f0\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u63a5\u53e3\u83b7\u53d6 sessionId \u548c openId \u7b49\u4fe1\u606f\u3002\\n\\ncontroller \u4ee3\u7801\uff1a\\n\\n```java\\n@PostMapping(\\"/user/weixin/login\\")\\npublic Result<Map<String, String>> login(@RequestBody User user) {\\n\\n    log.info(\\"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7528\u6237\u767b\u5f55....\\");\\n    Map<String, String> userInfo = garageUserService.weChatLogin(user);\\n\\n    return Result.success(userInfo);\\n}\\n```\\n\\nService \u4ee3\u7801\uff1a\\n\\n```java\\npublic Map<String, String> weChatLogin(User user) {\\n\\n    // \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u901a\u7528\u767b\u5f55\u903b\u8f91\\n    String url = GarageConstants.WeChatConstants.baseUrl +\\n        \\"?appid=\\" +\\n        configProperties.getAppId() +\\n        \\"&secret=\\" +\\n        configProperties.getAppSecret() +\\n        \\"&js_code=\\" +\\n        user.getCode() +\\n        \\"&grant_type=authorization_code\\";\\n\\n    String resp = restTemplate.getForObject(url, String.class);\\n    WxCode2SessionResp wxCode2SessionResp = JsonUtils.fromJson(resp, WxCode2SessionResp.class);\\n\\n    Map<String, String> res = new HashMap<>();\\n    if (Objects.isNull(wxCode2SessionResp) || Objects.isNull(wxCode2SessionResp.getSession_key())) {\\n        log.error(\\"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u5931\u8d25\uff0c\u67e5\u770b\u65e5\u5fd7\uff01\uff01\uff01\\");\\n        throw new ServiceException(\\"\u5fae\u4fe1\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01\\");\\n    }\\n\\n    // \u4e1a\u52a1\u903b\u8f91\\n    // \u6839\u636e openId \u67e5\u8be2\\n    int dbFlag;\\n    // \u5982\u679c openId \u4e3a\u7a7a\uff0c\u5219\u8bc1\u660e\u7528\u6237\u4ece\u672a\u767b\u9646\u8fc7\uff0c\u5219\u9700\u8981\u8bbe\u7f6e\u7528\u6237\u76f8\u5173\u4fe1\u606f\uff0c\u624b\u673a\u53f7\uff0c\u5934\u50cf\uff0c\u6635\u79f0\u7b49\u3002\\n    User openIdUser = this.userMapper.selectOneByQuery(new QueryWrapper().eq(User::getOpenId, wxCode2SessionResp.getOpenid()));\\n    if (openIdUser == null) {\\n        // \u8bc1\u660e\u7528\u6237\u672a\u767b\u9646\u8fc7\\n        if (user.getPhone() == null) {\\n            // \u7528\u6237\u672a\u767b\u5f55\u8fc7\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709\u643a\u5e26\u7528\u6237\u4fe1\u606f\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u3002\\n            dbFlag = 1;\\n            res.put(\\"dbFlag\\", dbFlag + \\"\\");\\n\\n        } else {\\n            User phoneUser = this.userMapper.selectOneByQuery(new QueryWrapper().eq(User::getPhone, user.getPhone()));\\n            if (phoneUser == null) {\\n                // \u4e3a\u7528\u6237\uff0c\u63d2\u5165\u6570\u636e\\n                var wxUser = new User();\\n                wxUser.setId(SnowFlakeIdGenerator.generateId());\\n                wxUser.setType(2);\\n                wxUser.setAvatar(user.getAvatar());\\n                wxUser.setNickName(user.getNickName());\\n                wxUser.setOpenId(wxCode2SessionResp.getOpenid());\\n\\n                this.userMapper.insert(wxUser);\\n\\n                // \u767b\u5f55\\n                StpUtil.login(wxUser.getId());\\n                res.put(\\"token\\", StpUtil.getTokenValue());\\n                res.put(\\"id\\", wxUser.getId() + \\"\\");\\n                res.put(\\"type\\", wxUser.getType() + \\"\\");\\n\\n            } else {\\n                // \u7ef4\u62a4\u4eba\u5458\uff0c\u66f4\u65b0\u6570\u636e\\n                phoneUser.setAvatar(user.getAvatar());\\n                phoneUser.setNickName(user.getNickName());\\n                phoneUser.setOpenId(wxCode2SessionResp.getOpenid());\\n\\n                this.userMapper.update(phoneUser);\\n\\n                // \u767b\u5f55\\n                StpUtil.login(phoneUser.getOpenId());\\n                res.put(\\"token\\", StpUtil.getTokenValue());\\n                res.put(\\"id\\", phoneUser.getId() + \\"\\");\\n                res.put(\\"type\\", phoneUser.getType() + \\"\\");\\n\\n            }\\n        }\\n    } else {\\n        // \u7528\u6237\u4fe1\u606f\u5df2\u7ecf\u5b58\u5728\uff0c\u76f4\u63a5\u767b\u5f55\\n        StpUtil.login(openIdUser.getId());\\n        res.put(\\"token\\", StpUtil.getTokenValue());\\n        res.put(\\"id\\", openIdUser.getId() + \\"\\");\\n        res.put(\\"type\\", openIdUser.getType() + \\"\\");\\n\\n    }\\n\\n    return res;\\n}\\n```\\n\\nentity \uff1a\u7528\u6765\u63a5\u53d7\u5fae\u4fe1 API \u8fd4\u56de\u7684\u6570\u636e\u4fe1\u606f\u3002\\n\\n```java\\npublic class WxCode2SessionResp {\\n\\n    // openId \u7528\u6237\u552f\u4e00\u6807\u8bc6\\n    private String openid; \\n\\n    // \u4f1a\u8bdd\u5bc6\u94a5\\n    private String session_key; \\n\\n    // \u7528\u6237\u5728\u5f00\u653e\u5e73\u53f0\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u82e5\u5f53\u524d\u5c0f\u7a0b\u5e8f\u5df2\u7ed1\u5b9a\u5230\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u5e10\u53f7\u4e0b\u4f1a\u8fd4\u56de\uff0c\u8be6\u89c1 UnionID \u673a\u5236\u8bf4\u660e\u3002\\n    private String unionid;         \\n\\n    // number \u9519\u8bef\u7801\\n    private String errcode;         \\n\\n    // \u9519\u8bef\u4fe1\u606f\\n    private String errmsg;    \\n}\\n```\\n\\n### \u83b7\u53d6\u7528\u6237\u624b\u673a\u53f7\u63a5\u53e3\\n\\n\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5728\u83b7\u53d6\u7528\u6237\u624b\u673a\u53f7\u65f6\uff0c\u9700\u8981\u5728\u540e\u53f0\u8c03\u7528 API \u63a5\u53e3\u5b8c\u6210\\n\\n```java\\n// controller\\n@PostMapping(GarageConstants.WeChatConstants.apiPrefix + \\"/getPhoneNumber\\")\\npublic Result<String> getPhoneNumber(@RequestBody User user) {\\n\\n    return Result.success(garageUserService.getPhoneNumber(user));\\n}\\n\\n// service\\n@Override\\npublic String getPhoneNumber(User user) {\\n\\n    String accessToken = WeChatMsgHelper.refreshAccessToken(\\n            configProperties.getAppId(),\\n            configProperties.getAppSecret(),\\n            restTemplate);\\n\\n    // String PhoneBaseUrl = \\"https://api.weixin.qq.com/wxa/business/getuserphonenumber?access_token=\\";\\n    String url = GarageConstants.WeChatConstants.PhoneBaseUrl + accessToken;\\n    Map<String, String> paramMap = new HashMap<>();\\n    paramMap.put(\\"code\\", user.getCode());\\n    String body = JsonUtils.toJson(paramMap);\\n\\n    HttpHeaders headers = new HttpHeaders();\\n    headers.setContentType(MediaType.APPLICATION_JSON);\\n    // spring boot 3.x \u4ee5\u4e0a\u5fc5\u987b\u8bbe\u7f6e\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0 412 \u9519\u8bef\u72b6\u6001\u7801\\n    headers.setContentLength(body.getBytes(StandardCharsets.UTF_8).length);\\n\\n    HttpEntity<String> httpEntity = new HttpEntity<>(body, headers);\\n    ResponseEntity<String> response = restTemplate.postForEntity(url, httpEntity, String.class);\\n\\n    return response.getBody();\\n}\\n\\n// helper\\npublic class WeChatMsgHelper {\\n\\n    private static final Logger logger = LoggerFactory.getLogger(WeChatMsgHelper.class);\\n\\n    // \u63a8\u9001\u6d88\u606f\u7684\u65f6\u5019\u9700\u8981 accessToken\uff0c\u8fd9\u91cc\u662f\u83b7\u53d6\\n    // token\u7684\u65b9\u6cd5\uff0c\u5728\u5b9e\u9645\u73af\u5883\u4e2d\uff0c\u4e00\u822c\u662f\u5b9a\u65f6\u5237\u65b0\uff0c\\n    // \u4e24\u4e2a\u5c0f\u65f6\u5185\u6709\u6548\uff0c\u83b7\u53d6accesstoken\u65f6\u9700\u8981appid\u548csecret\u4fe1\u606f\uff0c\u4e00\u822c\u662f\u540e\u53f0\u53c2\u6570\u6216\u5e38\u91cf\u8fdb\u884c\u914d\u7f6e\\n    // \u83b7\u53d6 accessToken \u7684\u8bf7\u6c42\u63a5\u53e3\\n    // String TokenBaseUrl = \\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential\\";\\n    private final static String GetAccessToken = GarageConstants.WeChatConstants.TokenBaseUrl + \\"&appid={appid}&secret={secret}\\";\\n\\n    public static String refreshAccessToken(String appid, String secret, RestTemplate restTemplate){\\n\\n        if(!StringUtils.hasText(appid) || !StringUtils.hasText(secret)){\\n            logger.error(\\"\u5237\u65b0\u5fae\u4fe1 AccessToken \u65f6\uff0c\u7f3a\u5c11 appid \u6216 secret \u53c2\u6570\uff01\\");\\n            throw new ServiceException(\\"\u5237\u65b0\u5fae\u4fe1 AccessToken \u65f6\uff0c\u7f3a\u5c11 appid \u6216 secret \u53c2\u6570\uff01\\");\\n        }\\n\\n        Map<String, Object> param = new HashMap<>();\\n        param.put(\\"appid\\",appid);\\n        param.put(\\"secret\\",secret);\\n\\n        ResponseEntity<JSONObject> resp = restTemplate.getForEntity(\\n                GetAccessToken,\\n                JSONObject.class,\\n                param\\n        );\\n\\n        JSONObject jsonObj = resp.getBody();\\n        String accessToken = null;\\n        if(jsonObj != null){\\n            accessToken = jsonObj.getStr(\\"access_token\\");\\n        }\\n\\n        return accessToken;\\n    }\\n}\\n```"},{"id":"element-plus-upload-debug","metadata":{"permalink":"/blog/element-plus-upload-debug","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/Bug-summary/Element-plus-Upload-Debug-\u8bb0\u5f55.md","source":"@site/blog/Bug-summary/Element-plus-Upload-Debug-\u8bb0\u5f55.md","title":"Element-plus Upload Debug \u8bb0\u5f55","description":"\u80cc\u666f","date":"2024-09-20T22:34:07.000Z","tags":[{"inline":true,"label":"Element-plus","permalink":"/blog/tags/element-plus"}],"readingTime":1.4266666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"element-plus-upload-debug","title":"Element-plus Upload Debug \u8bb0\u5f55","date":"2024-09-20T22:34:07.000Z","authors":"yuluo","tags":["Element-plus"],"keywords":["Element-plus","upload","Debug"]},"unlisted":false,"prevItem":{"title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u767b\u5f55\u548c\u83b7\u53d6\u4fe1\u606f\u529f\u80fd\u8bb0\u5f55","permalink":"/blog/wechatminiapp-login-get-use-info"},"nextItem":{"title":"Vue3 + Vite \u6574\u5408 LuckySheet \u5b8c\u6210 Excel \u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91","permalink":"/blog/vue3-vite-merge-lucky-sheet-preview-excel-edit"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\\n\\n\u5728 Vue3 \u4e2d\u4f7f\u7528 Element-plus \u7684\u6587\u4ef6\u4e0a\u4f20\u7ec4\u4ef6 el-upload \u7ec4\u4ef6\u4e0a\u4f20\u81f3 Spring Boot \u540e\u53f0\u670d\u52a1\u7aef\u5931\u8d25\uff0c\u4f46 Postman \u6210\u529f\uff01\\n\\n## \u95ee\u9898\u539f\u56e0\\n\\nElement-plus \u4e2d\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u7c7b\u578b\u53c8\u505a\u4e86\u4e00\u6b21\u5c01\u88c5\uff0c\u5bfc\u81f4\u548c\u540e\u53f0\u5bf9\u5e94\u7684\u6587\u4ef6\u63a5\u53d7\u5931\u8d25\uff0c\u51fa\u73b0\u5404\u79cd\u5404\u6837\u7684\u9519\u8bef\uff1a\\n\\nElement-plus \u6587\u4ef6\u4e0a\u4f20\u5bf9\u8c61\u5b9a\u4e49\uff1a\\n\\n```ts\\nexport interface UploadFile {\\n    name: string;\\n    percentage?: number;\\n    status: UploadStatus;\\n    size?: number;\\n    response?: unknown;\\n    uid: number;\\n    url?: string;\\n    raw?: UploadRawFile;\\n}\\n\\nexport interface UploadRawFile extends File {\\n    uid: number;\\n}\\n```\\n\\nspring boot \u540e\u53f0\u63a5\u53e3\\n\\n```java\\n    @PostMapping(\\"/avatar\\")\\n    public Result<String> uploadAvatar(@RequestParam MultipartFile file) {\\n\\n        return Result.success(uploadService.uploadAvatar(file));\\n    }\\n```\\n\\n## \u8e29\u5751\\n\\n### no multipart boundary was found\\n\\n\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e header \u4e2d Content-typ\uff0c\u5728 postman \u4e2d\uff0c\u4f7f\u7528 form-data \u5f62\u5f0f\u4e0a\u4f20\u6587\u4ef6\uff0c\u4f1a\u81ea\u5df1\u8bbe\u7f6e content-type\u3002\u5728 axios \u4e2d\uff0c\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\\n\\n### the request was rejected because no multipart boundary was found\\n\u4e0a\u4f20 formdata \u7c7b\u578b\u7684\u53d8\u91cf\uff1a\\n\\n```ts\\nconst form = new FormData()\\nform.append(\'file\', file)\\n```\\n\\n### Required part \'file\' is not present.\\n\\n\u6ce8\u610f\u4e0a\u4f20\u6587\u4ef6\u65f6\uff0c\u4f7f\u7528 Element-plus UploadFile \u5c5e\u6027\u4e2d\u7684 raw \u5c5e\u6027\u503c\u4e0a\u4f20\uff0c\u4e0d\u7136\u5c31\u4f1a\u51fa\u73b0\u6b64\u9519\u8bef\uff01\\n\\n```ts\\n// \u9519\u8bef\u4ee3\u7801\\nconst uploadFile = async (file: File) => {\\n    await FileAPI.uploadAvatar(file).then((res) => {\\n        log(res)\\n    })\\n}\\n\\n// \u6b63\u786e\u4ee3\u7801\\nconst uploadFile = async (file: UploadFile) => {\\n    await FileAPI.uploadAvatar(file.raw).then((res) => {\\n        log(res)\\n    })\\n}\\n```\\n\\n## \u5b8c\u6574\u4ee3\u7801\u793a\u4f8b\\n\\naxios \u63a5\u53e3\u5c01\u88c5\\n\\n```ts\\nupload: async (\\n    url: string,\\n    file: File,\\n    config?: AxiosRequestConfig\\n): Promise<Result<string>> => {\\n    const form = new FormData()\\n    form.append(\'file\', file)\\n    return axiosInstance.post(\\n        url,\\n        form,\\n        {\\n            headers: {\\n                \'Content-Type\': \'multipart/form-data\',\\n                ...(config?.headers || {}),\\n            },\\n            ...config,\\n        });\\n},\\n```\\n\\nvue \u6587\u4ef6\u4e2d\u4ee3\u7801\\n\\n```vue\\n// template\\n<el-upload class=\\"avatar-uploader\\"\\n           action=\\"/\\" :show-file-list=\\"false\\" :auto-upload=\\"false\\" \\n           :on-change=\\"uploadFile\\" accept=\\".jpg, .jpeg, .png\\">\\n    <el-avatar :size=\\"75\\" :src=\\"userAvatar\\" />\\n</el-upload>\\n\\n// script\\nconst uploadFile = async (file: UploadFile) => {\\n    await FileAPI.uploadAvatar(file.raw).then((res) => {\\n        log(res)\\n    })\\n}\\n```\\n\\nspring boot\uff1a\\n\\n```java\\n@PostMapping(\\"/avatar\\")\\npublic Result<String> uploadAvatar(@RequestParam MultipartFile file) {\\n\\n    // \u5c06\u6240\u6709\u7684 HttpServletRequest \u53c2\u6570\u6253\u5370\u51fa\u6765\uff0c\u4ee5 debug \u53c2\u6570\u533a\u522b\\n    // System.out.println(file);\\n    // request.getParameterMap().forEach((k, v) -> System.out.println(k + \\" \\" + Arrays.toString(v)));\\n    // return Result.success(\\"success\\");\\n\\n    return Result.success(uploadService.uploadAvatar(file));\\n}\\n```"},{"id":"vue3-vite-merge-lucky-sheet-preview-excel-edit","metadata":{"permalink":"/blog/vue3-vite-merge-lucky-sheet-preview-excel-edit","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/frontend/Vue3-Vite-\u6574\u5408-LuckySheet-\u5b8c\u6210-Excel-\u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91.md","source":"@site/blog/frontend/Vue3-Vite-\u6574\u5408-LuckySheet-\u5b8c\u6210-Excel-\u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91.md","title":"Vue3 + Vite \u6574\u5408 LuckySheet \u5b8c\u6210 Excel \u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91","description":"\u9700\u6c42\u80cc\u666f","date":"2024-09-14T22:49:58.000Z","tags":[{"inline":true,"label":"Unipp","permalink":"/blog/tags/unipp"},{"inline":true,"label":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/tags/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"},{"inline":true,"label":"Vue3","permalink":"/blog/tags/vue-3"}],"readingTime":4.096666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"vue3-vite-merge-lucky-sheet-preview-excel-edit","title":"Vue3 + Vite \u6574\u5408 LuckySheet \u5b8c\u6210 Excel \u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91","date":"2024-09-14T22:49:58.000Z","authors":"yuluo","tags":["Unipp","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","Vue3"],"keywords":["Excel","Unipp","Vue3","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"]},"unlisted":false,"prevItem":{"title":"Element-plus Upload Debug \u8bb0\u5f55","permalink":"/blog/element-plus-upload-debug"},"nextItem":{"title":"\u4f7f\u7528 Vitesse unipp & Alovajs \u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/use-vitesse-unipp-and-alovajs-build-wechatminiapp"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u9700\u6c42\u80cc\u666f\\n\\n\u7532\u65b9\u7528\u6237\u8bbe\u5907\u4fdd\u4fee\uff0c\u4e59\u65b9\u5458\u5de5\u6839\u636e\u8bbe\u5907\u7ef4\u62a4\u9700\u8981\uff0c\u5728\u7ef4\u62a4\u5b8c\u6210\u4e4b\u540e\uff0c\u5728 Excel \u7ef4\u4fee\u4efb\u52a1\u6587\u4ef6\u4e0a\u5bf9\u68c0\u67e5\u7ef4\u4fee\u7684\u9879\u76ee\u8fdb\u884c\u6253\u52fe\uff0c\u6700\u540e\u5728\u4e0b\u9762\u8f93\u5165\u4e00\u4e9b\u5907\u6ce8\u4fe1\u606f\u3002\\n\\n## \u8c03\u7814\\n\\n1. \u7814\u7a76\u4e86 XLSX \u7b49\u5176\u4ed6\u5e93\uff0c\u5747\u4e0d\u80fd\u5b8c\u5168\u5b9e\u73b0\u9700\u6c42\uff0c\u6216\u662f API \u592a\u96be\u7528\uff0c\u6216\u662f\u6837\u5f0f\u663e\u793a\u6709\u95ee\u9898\uff0cExcel \u6587\u4ef6\u4e2d\u6709\u56fe\u7247\uff0c\u663e\u793a\u4e0d\u5168\u7b49\u7b49\u3002\u6700\u540e\u5728 Univer \u548c LuckySheet \u4e0a\u7814\u7a76\u3002\\n2. Univer \u6587\u6863\u5e76\u4e0d\u662f\u5f88\u5168\u9762**\uff08\u662f\u6211\u592a\u83dc\u4e86\uff0c\u770b\u4e0d\u61c2\ud83d\ude2d\uff09**\uff0c\u600e\u4e48\u5c06\u6570\u636e\u5bfc\u5165\u5230 Univer \u4e2d\uff0c\u5728 UI \u4e0a\u663e\u793a\u3002\u90fd\u4e0d\u662f\u5f88\u597d\u5b9e\u73b0\uff0c\u770b\u6587\u6863\uff0c\u9700\u8981\u501f\u52a9\u4ed6\u4eec\u7684\u540e\u7aef\u670d\u52a1\u7b49\u7b49\uff0c\u6700\u540e\u6ca1\u80fd\u5b9e\u73b0\u3002\u76f8\u5173 discussion\uff1ahttps://github.com/dream-num/univer/discussions/3425 \u3002\u7ed3\u8bba\u95ee\u9898\u5e76\u6ca1\u6709\u89e3\u51b3\uff0c\u56e0\u4e3a\u6211\u6362\u4e86 LuckySheet\u3002\ud83e\udd23\\n3. LuckySheet \u662fUniver \u7684\u524d\u8eab\uff0c\u4e0d\u540c\u7684\u662f Univer \u652f\u6301 Word Excel PPT \u4e09\u79cd\uff0c\u524d\u8005\u53ea\u652f\u6301\u4e00\u79cd\u3002\u5b8c\u5168\u5b9e\u73b0\u4e86\u6211\u7684\u9700\u6c42\u3002\\n\\n## \u5b9e\u64cd\\n\\n\u6211\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5728\u540e\u7aef\u5c06 Excel \u6a21\u677f\u6587\u4ef6\u4f20\u7ed9\u524d\u7aef\uff0c\u524d\u7aef\u4f5c\u5c55\u793a\u548c\u7f16\u8f91\u3001\u3002\u4e4b\u540e\u4e59\u65b9\u7ef4\u62a4\u4eba\u5458\u5b8c\u6210 Excel \u6587\u4ef6\u7f16\u8f91\u3002\u518d\u4f20\u7ed9\u540e\u7aef\u548c\u5de5\u5355\u8fdb\u884c\u7ed1\u5b9a\u3002\\n\\n### \u521d\u59cb\u5316\u9879\u76ee\\n\\n\u6211\u4f7f\u7528\u7684\u662f Vue3 + Vite + LuckySheet\u3002\\n\\n### \u51c6\u5907 LuckySheet\\n\\n\u53c2\u8003\uff1ahttps://blog.csdn.net/m0_59415345/article/details/136749058\\n\\n\u5728\u9879\u76ee\u4e2d \u5f15\u5165 LuckySheet \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\\n\\n#### \u901a\u8fc7 CDN \u5f15\u5165\\n\\n\u76f4\u63a5\u5728\u9879\u76ee\u7684 `index.html` \u6587\u4ef6\u4e2d\u5f15\u5165 CDN \u914d\u7f6e\u5373\u53ef\\n\\n```html\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/css/pluginsCss.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/plugins.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/css/luckysheet.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/assets/iconfont/iconfont.css\' />\\n<script src=\\"https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/js/plugin.js\\"><\/script>\\n<script src=\\"https://cdn.jsdelivr.net/npm/luckysheet/dist/luckysheet.umd.js\\"><\/script>\\n```\\n\\n#### \u672c\u5730\u6253\u5305\u4e4b\u540e\u5f15\u5165\\n\\n> \u672c\u5730\u5f15\u5165\u662f\u5c06 CDN \u9700\u8981\u7684\u6587\u4ef6\u5728\u672c\u5730\u6253\u5305\u4e4b\u540e\u5728\u5f15\u5165\uff0c\u907f\u514d\u7f51\u7edc\u8bf7\u6c42\u3002\\n\\n1. \u62c9\u53d6\u4ee3\u7801\\n\\n   ```shell\\n   git clone https://github.com/dream-num/Luckysheet.git\\n   ```\\n\\n2. \u6784\u5efa\\n\\n   ```shell\\n   # \u6309\u7167\u4f9d\u8d56\\n   npm install\\n   npm install gulp -g  \\n   ```\\n\\n3. \u542f\u52a8\u9884\u89c8\\n\\n   ```shell\\n   npm run dev\\n   ```\\n\\n   \u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u5982\u4e0b\u9875\u9762\uff1a\\n\\n   ![Luckysheet \u9884\u89c8](../../static/img/wechat/uniapp/img2.png)\\n\\n4. \u6253\u5305\\n\\n   ```shell\\n   npm run build\\n   ```\\n\\n   \u4e4b\u540e\u5c06 dist \u4e2d\u7684\u6587\u4ef6\u5168\u90e8\u590d\u5236\u5230\u9879\u76ee\u7684 public \u6587\u4ef6\u4e2d\uff0c**\u53ef\u4ee5\u6839\u636e\u9700\u8981\u590d\u5236\u5230\u4e0d\u540c\u4f4d\u7f6e\uff0c\u5728\u5f15\u5165\u65f6\uff0c\u6ce8\u610f\u8def\u5f84\u5373\u53ef\u3002**\u4e0d\u9700\u8981\u5f15\u5165 `index.html`\u3002\\n\\n#### \u9879\u76ee\u4f7f\u7528\\n\\n\u8fd9\u90e8\u5206 CDN \u5f15\u5165\u548c\u672c\u5730\u5f15\u5165\u533a\u522b\u4e0d\u5927\u3002\u53ea\u9700\u8981\u6ce8\u610f\u8def\u5f84\u5373\u53ef\uff1a\\n\\n```html\\n\x3c!-- CDN \u5f15\u5165 --\x3e\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/css/pluginsCss.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/plugins.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/css/luckysheet.css\' />\\n<link rel=\'stylesheet\' href=\'https://cdn.jsdelivr.net/npm/luckysheet/dist/assets/iconfont/iconfont.css\' />\\n<script src=\\"https://cdn.jsdelivr.net/npm/luckysheet/dist/plugins/js/plugin.js\\"><\/script>\\n<script src=\\"https://cdn.jsdelivr.net/npm/luckysheet/dist/luckysheet.umd.js\\"><\/script>\\n\\n\x3c!-- \u672c\u5730\u6784\u5efa\u4e4b\u540e\u5f15\u5165 --\x3e\\n<link rel=\'stylesheet\' href=\'./public/plugins/css/pluginsCss.css\' />\\n<link rel=\'stylesheet\' href=\'./public/plugins/plugins.css\' />\\n<link rel=\'stylesheet\' href=\'./public/css/luckysheet.css\' />\\n<link rel=\'stylesheet\' href=\'./public/assets/iconfont/iconfont.css\' />\\n<script src=\\"./public/plugins/js/plugin.js\\"><\/script>\\n<script src=\\"./public/luckysheet.umd.js\\"><\/script>  \\n\\n\x3c!-- \u6ce8\u610f\u8def\u5f84\u4e0d\u540c --\x3e\\n```\\n\\n### \u9879\u76ee\u9875\u9762\\n\\n\u5728\u521d\u59cb\u5316\u597d\u7684 Vite \u9879\u76ee\u4e2d App.vue \u4e2d\u5199\u5165\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n\u6ce8\u610f\u9700\u8981\u5b89\u88c5 `luckysheet`\u3002\u4e0d\u7136\u4f1a\u62a5\u9519\uff01\uff01\uff01\\n\\n```shell\\nnpm i luckysheet\\n```\\n\\n```vue\\n<template>\\n  <div class=\\"upload\\">\\n    <input id=\\"uploadBtn\\" type=\\"file\\" @change=\\"loadExcel\\" />\\n  </div>\\n  <div id=\\"luckysheet\\" class=\\"luckysheet\\"></div>\\n</template>\\n\\n<script lang=\\"ts\\" setup>\\nimport { onMounted } from \\"vue\\"\\nimport LuckyExcel from \'luckyexcel\'\\nimport axios from \'axios\';\\n\\nonMounted(() => {\\n  //\u5982\u679c\u8fd9\u91ccluckysheet.create\u62a5\u9519\\n  //\u8bf7\u4f7f\u7528 window.luckysheet.create\\n  luckysheet.create({\\n    container: \'luckysheet\'//\u8fd9\u91cc\u9700\u8981\u548c\u5bb9\u5668\u7684id\u540d\u79f0\u4e00\u81f4\\n  })\\n\\n  // \u4ece\u540e\u7aef\u63a5\u53e3\u83b7\u53d6 excel \u6587\u4ef6\u4f7f\u7528\\n  loadExcel()\\n})\\n\\n// \u6309\u94ae\u4e0a\u4f20\u4f7f\u7528\uff0c\u6ce8\u610f\u533a\u5206\\n// const loadExcel = (evt) => {\\n//   const files = evt.target.files\\n//   if (files == null || files.length == 0) {\\n//     alert(\'\u8bf7\u4e0a\u4f20\u6587\u4ef6\')\\n//     return\\n//   }\\n\\n//   let name = files[0].name\\n//   let suffixArr = name.split(\'.\'),\\n//     suffix = suffixArr[suffixArr.length - 1]\\n//   if (suffix != \'xlsx\' && suffix != \\"xls\\") {\\n//     alert(\'\u53ea\u80fd\u5bfc\u5165xlsx\u6587\u4ef6\u683c\u5f0f\u7684Excel\')\\n//     return\\n//   }\\n//   LuckyExcel.transformExcelToLucky(files[0], function (exportJson, luckysheetfile) {\\n//     if (exportJson.sheets == null || exportJson.sheets.length == 0) {\\n//       alert(\'\u5bfc\u5165\u5931\u8d25!\')\\n//       return\\n//     }\\n//     window.luckysheet.destroy()\\n//     window.luckysheet.create({\\n//       container: \'luckysheet\', //\u5bb9\u5668\u7684Id\\n//       showinfobar: false,\\n//       data: exportJson.sheets,\\n//       title: exportJson.info.name,\\n//       userInfo: exportJson.info.name.creator\\n//     })\\n//   })\\n// }\\n\\nconst loadExcel = async () => {\\n  // \u53d1\u9001 POST \u8bf7\u6c42\u5230\u540e\u7aef\u4ee5\u83b7\u53d6 Excel \u6587\u4ef6\\n  try {\\n    // \u63a5\u53e3\u5730\u5740\\n    const response = await axios.post(\'http://localhost:8080/api/v1/download/task\', {\\n      // taskId: \'922364778947073\' \\n      taskId: \'822364778947073\' \\n      // taskId: \'722364778947073\' \\n      // taskId: \'622364778947073\'\\n    }, {\\n      headers: {\\n        \'Content-Type\': \\"application/json\\"\\n      },\\n      responseType: \'blob\'\\n    }\\n    );\\n\\n    // \u5c06\u54cd\u5e94\u8f6c\u6362\u4e3a Blob\\n    // const blob = await response.blob();\\n\\n    // \u5c06 ArrayBuffer \u8f6c\u6362\u4e3a Blob\\n    const blob = new Blob([response.data])\\n\\n    const file = new File([blob], \'downloaded_file.xlsx\', {\\n      type: \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\',\\n    });\\n\\n    console.log(file);\\n\\n    // // \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684 URL\\n    // const url = URL.createObjectURL(file);\\n\\n    // // \u521b\u5efa\u4e00\u4e2a\u94fe\u63a5\u5143\u7d20\\n    // const a = document.createElement(\'a\');\\n    // a.href = url;\\n    // a.download = file.name; // \u8bbe\u7f6e\u4e0b\u8f7d\u6587\u4ef6\u540d\\n\\n    // // \u89e6\u53d1\u4e0b\u8f7d\\n    // document.body.appendChild(a);\\n    // a.click();\\n\\n    // // \u6e05\u7406\\n    // document.body.removeChild(a);\\n    // URL.revokeObjectURL(url); // \u91ca\u653e\u5185\u5b58\\n\\n    LuckyExcel.transformExcelToLucky(file, function (exportJson, luckysheetfile) {\\n      if (exportJson.sheets == null || exportJson.sheets.length == 0) {\\n        alert(\'1221332, \u5bfc\u5165\u5931\u8d25!\');\\n        return;\\n      }\\n      window.luckysheet.destroy();\\n      window.luckysheet.create({\\n        container: \'luckysheet\', // \u5bb9\u5668\u7684Id\\n        showinfobar: false,\\n        data: exportJson.sheets,\\n        title: exportJson.info.name,\\n        userInfo: exportJson.info.name.creator,\\n      });\\n    });\\n\\n  } catch (error) {\\n    alert(`\u5bfc\u5165\u5931\u8d25: ${error.message}`);\\n  }\\n}\\n\\n<\/script>\\n\\n<style scoped>\\n.luckysheet {\\n  margin: 0;\\n  padding: 0;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 30px;\\n  /* \u8c03\u6574\u6b64\u503c\u4ee5\u5411\u4e0b\u79fb\u52a8 */\\n}\\n\\n.upload {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 10;\\n  /* \u786e\u4fdd\u6309\u94ae\u5728\u6700\u4e0a\u5c42 */\\n  background-color: white;\\n  /* \u53ef\u9009 */\\n  border: 1px solid #ccc;\\n  /* \u53ef\u9009 */\\n  padding: 5px;\\n  /* \u53ef\u9009 */\\n}\\n</style>\\n```\\n\\n> \u6ce8\u610f\u4e0a\u8ff0\u4ee3\u7801\u7684\u533a\u522b\uff0c\u4e00\u4e2a LoadExcel \u65b9\u6cd5\u662f\u4e0a\u4f20\u4f7f\u7528\uff0c\u6709\u53c2\u6570\u3002\u53e6\u5916\u4e00\u4e2a\u662f onMounted \u4f7f\u7528\uff0c\u6ca1\u6709\u53c2\u6570\u3002\u5982\u679c\u4ece\u540e\u7aef\u4f20\u9012\uff0c\u6ce8\u610f\u4fee\u6539\u63a5\u53e3\u5730\u5740\u3002\\n\\n### \u8fd0\u884c\\n\\n\u6700\u7ec8\u6548\u679c\u5982\u4e0b\uff1a\\n\\n![\u672c\u5730\u8fd0\u884c\u6548\u679c\u56fe](../../static/img/wechat/uniapp/img1.png)\\n\\n## \u4ed3\u5e93\\n\\n\u76f8\u5173\u4ee3\u7801\u548c\u4f9d\u8d56\u5df2\u7ecf\u653e\u5230\uff1ahttps://github.com/yuluo-yx/deigmata-paideias/tree/main/vue3-vite-lucksheet \u4e2d\u3002"},{"id":"use-vitesse-unipp-and-alovajs-build-wechatminiapp","metadata":{"permalink":"/blog/use-vitesse-unipp-and-alovajs-build-wechatminiapp","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/frontend/\u4f7f\u7528-Vitesse-unipp-Alovajs-\u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f.md","source":"@site/blog/frontend/\u4f7f\u7528-Vitesse-unipp-Alovajs-\u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f.md","title":"\u4f7f\u7528 Vitesse unipp & Alovajs \u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","description":"\u7ec4\u4ef6\u4ecb\u7ecd","date":"2024-09-10T22:57:50.000Z","tags":[{"inline":true,"label":"Unipp","permalink":"/blog/tags/unipp"},{"inline":true,"label":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/tags/\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"}],"readingTime":2.42,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"use-vitesse-unipp-and-alovajs-build-wechatminiapp","title":"\u4f7f\u7528 Vitesse unipp & Alovajs \u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","date":"2024-09-10T22:57:50.000Z","authors":"yuluo","tags":["Unipp","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"],"keywords":["vitesse","Unipp","alovajs","\u5fae\u4fe1\u5c0f\u7a0b\u5e8f"]},"unlisted":false,"prevItem":{"title":"Vue3 + Vite \u6574\u5408 LuckySheet \u5b8c\u6210 Excel \u6587\u4ef6\u7684\u9884\u89c8\u548c\u7f16\u8f91","permalink":"/blog/vue3-vite-merge-lucky-sheet-preview-excel-edit"},"nextItem":{"title":"\u6210\u4e3a Apache Committer, \u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a","permalink":"/blog/become-apache-committer"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u7ec4\u4ef6\u4ecb\u7ecd\\n\\n> Vitesse Uni App\uff1ahttps://vitesse-docs.netlify.app/\\n>\\n> UI\uff1ahttps://uview-plus.jiangruyi.com/components/intro.html\\n>\\n> \u7f16\u8f91\u5668\uff1aVScode \u5b89\u88c5 Volar\uff08Vue Offices\uff09\u63d2\u4ef6\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n```shell\\npnpm create uni <project-name> -t vitesse\\n```\\n\\n## \u521b\u5efa\u9875\u9762\\n\\n\u53c2\u8003\uff1ahttps://vitesse-docs.netlify.app/getting-started/views\\n\\n\u521b\u5efa\u65b9\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u5373\u770b\u5373\u4f1a\\n\\n## \u5f15\u5165 UI \u5e93\\n\\n> \u8fd9\u6b65\u7a0d\u5fae\u6709\u4e9b\u9ebb\u70e6\u3002\\n>\\n> \u5b89\u88c5\u6587\u6863\u5730\u5740\uff1ahttps://uview-plus.jiangruyi.com/components/install.html\\n>\\n> \u914d\u7f6e\u6587\u6863\u5730\u5740\uff1ahttps://uview-plus.jiangruyi.com/components/npmSetting.html\\n\\n### \u5b89\u88c5 Sass\\n\\n```shell\\n// \u5b89\u88c5sass\\nnpm i sass -D\\n\\n// \u5b89\u88c5sass-loader\uff0c\u6ce8\u610f\u9700\u8981\u7248\u672c10\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4vue\u4e0esass\u7684\u517c\u5bb9\u95ee\u9898\u800c\u62a5\u9519\\nnpm i sass-loader@10 -D\\n```\\n\\n#### \u5b89\u88c5\u4f9d\u8d56\\n\\n```shell\\nnpm install uview-plus\\nnpm install dayjs\\nnpm install clipboard\\n```\\n\\n#### \u5f15\u5165 JS \u5e93\\n\\n```js\\n// main.js\\nimport uviewPlus from \'uview-plus\'\\n\\n// #ifdef VUE3\\nimport { createSSRApp } from \'vue\'\\nexport function createApp() {\\n  const app = createSSRApp(App)\\n  app.use(uviewPlus)\\n  return {\\n    app\\n  }\\n}\\n// #endif\\n```\\n\\n#### \u5f15\u5165\u5168\u5c40 CSS\\n\\n```css\\n/* uni.scss */\\n@import \'uview-plus/theme.scss\';\\n```\\n\\n#### \u5f15\u5165\u57fa\u7840\u6837\u5f0f\\n\\n```css\\n<style lang=\\"scss\\">\\n /* \u6ce8\u610f\u8981\u5199\u5728\u7b2c\u4e00\u884c\uff0c\u540c\u65f6\u7ed9style\u6807\u7b7e\u52a0\u5165lang=\\"scss\\"\u5c5e\u6027 */\\n @import \\"uview-plus/index.scss\\";\\n</style>\\n```\\n\\n#### \u914d\u7f6e easycom \u6a21\u5f0f\\n\\n\u53c2\u8003\uff1ahttps://uview-plus.jiangruyi.com/components/npmSetting.html#%E9%85%8D%E7%BD%AEeasycom%E7%BB%84%E4%BB%B6%E6%A8%A1%E5%BC%8F\\n\\n```json\\n// pages.json\\n{\\n \\"easycom\\": {\\n  \\"autoscan\\": true,\\n  // \u6ce8\u610f\u4e00\u5b9a\u8981\u653e\u5728custom\u91cc\uff0c\u5426\u5219\u65e0\u6548\uff0chttps://ask.dcloud.net.cn/question/131175\\n  \\"custom\\": {\\n   \\"^u--(.*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\",\\n   \\"^up-(.*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\",\\n         \\"^u-([^-].*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\"\\n  }\\n },\\n \\n // \u6b64\u4e3a\u672c\u8eab\u5df2\u6709\u7684\u5185\u5bb9\\n \\"pages\\": [\\n  // ......\\n ]\\n}\\n```\\n\\n#### \u914d\u7f6e typescript \u652f\u6301\\n\\n```json\\n{\\n \\"compilerOptions\\": {\\n    \\"sourceMap\\": true,\\n    \\"baseUrl\\": \\".\\",\\n    \\"paths\\": {\\n      \\"@/*\\": [\\"./src/*\\"]\\n    },\\n    \\"lib\\": [\\"esnext\\", \\"dom\\"],\\n    \\"types\\": [\\n        \\"@dcloudio/types\\",\\n        \\"uview-plus/types\\"\\n    ]\\n  },\\n  \\"include\\": [\\"src/**/*.ts\\", \\"src/**/*.d.ts\\", \\"src/**/*.tsx\\", \\"src/**/*.vue\\"]\\n}\\n```\\n\\n## \u542f\u52a8\u9879\u76ee\u67e5\u770b\\n\\n```shell\\nnpm run dev:h5\\n```\\n\\n![\u9884\u89c8\u56fe\u7247](/img/wechat/image.png)\\n\\n### \u8e29\u5751\u8bb0\u5f55\\n\\n\u5728 pages.json \u4e2d\u914d\u7f6e easycom \u914d\u7f6e\u65f6\uff0c\u518d\u6b21\u91cd\u65b0\u542f\u52a8\u9879\u76ee\uff0c\u4f1a\u5bfc\u81f4 pages.json \u4e2d\u7684\u6587\u4ef6\u5237\u65b0\uff0c\u7136\u540e ui \u6837\u5f0f\u5f15\u5165\u5931\u6548\uff0c\u9700\u8981\u5728 pages.config.json \u4e2d\u914d\u7f6e\\n\\n```ts\\nimport { defineUniPages } from \'@uni-helper/vite-plugin-uni-pages\'\\n\\nexport default defineUniPages({\\n  pages: [],\\n  globalStyle: {\\n    backgroundColor: \'@bgColor\',\\n    backgroundColorBottom: \'@bgColorBottom\',\\n    backgroundColorTop: \'@bgColorTop\',\\n    backgroundTextStyle: \'@bgTxtStyle\',\\n    navigationBarBackgroundColor: \'#000000\',\\n    navigationBarTextStyle: \'@navTxtStyle\',\\n    navigationBarTitleText: \'Vitesse-Uni\',\\n    navigationStyle: \'custom\',\\n  },\\n  // tabBar: {\\n  //   backgroundColor: \\"@tabBgColor\\",\\n  //   borderStyle: \\"@tabBorderStyle\\",\\n  //   color: \\"@tabFontColor\\",\\n  //   selectedColor: \\"@tabSelectedColor\\",\\n  // },\\n  \\"easycom\\": {\\n  \\"autoscan\\": true,\\n  \\"custom\\": {\\n   \\"^u--(.*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\",\\n   \\"^up-(.*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\",\\n         \\"^u-([^-].*)\\": \\"uview-plus/components/u-$1/u-$1.vue\\"\\n  }\\n },\\n})\\n]\\n```\\n\\n## \u4f7f\u7528 alova.js \u4f5c\u4e3a\u5c0f\u7a0b\u5e8f\u7684\u8bf7\u6c42\u5de5\u5177\\n\\n\u5b98\u7f51\uff1ahttps://alova.js.org/zh-CN/\\n\\nunipp \u63d2\u4ef6\uff1ahttps://alova.js.org/zh-CN/resource/request-adapter/uniapp\\n\\n### \u5b89\u88c5\\n\\n```shell\\nnpm install @alova/adapter-uniapp --save\\n```\\n\\n### \u5c01\u88c5\\n\\nindex.ts\\n\\n```ts\\n//index.ts\\nimport { createAlova } from \'alova\'\\nimport AdapterUniapp from \'@alova/adapter-uniapp\';\\n \\nexport const AlovaInstance = createAlova({\\n  \\n  baseURL: \'http://localhost:8080/api/v1/\',\\n\\n  // https://alova.js.org/zh-CN/resource/request-adapter/uniapp#%E5%88%9B%E5%BB%BA-alova\\n  ...AdapterUniapp(),\\n \\n  // \u8bf7\u6c42\u62e6\u622a\u5668\\n  beforeRequest() {\\n    \\n  },\\n  // \u54cd\u5e94\u62e6\u622a\u5668\\n  responded: {\\n     \\n  }\\n\\n})\\n```\\n\\napi.ts\\n\\n```ts\\nimport { AlovaInstance } from \'./index\'\\n \\nconst headers = { \'Content-Type\': \'application/json;charset=UTF-8\' }\\nconst timeout = 5000\\n \\nexport const Alova = {\\n\\n  createGet(url: string, params?: Record<string, any>) {\\n    return AlovaInstance.Get(url, {\\n      headers,\\n      params,\\n      timeout\\n    })\\n  },\\n\\n  createPost(url: string, data: Record<string, any>, params: Record<string, any>) {\\n    return AlovaInstance.Post(url, data, {\\n      params\\n    })\\n  },\\n\\n  createTodoPut(url: string, data: Record<string, any>, params: Record<string, any>) {\\n    return AlovaInstance.Put(url,data, {\\n      params\\n    })\\n  },\\n\\n  createDelete(url: string, data?: Record<string, any>, params?: Record<string, any>) {\\n    return AlovaInstance.Put(url,data, {\\n      params\\n    })\\n  }\\n\\n}\\n```\\n\\nservice.ts\\n\\n```ts\\nimport {Alova} from \\"./api\\"\\n\\n// Law notice\\nexport const getLawNotice = () => {return Alova.createGet(\\"law\\")}\\n\\n```\\n\\n\u8c03\u7528\uff1a\\n\\n```ts\\n<script lang=\\"ts\\" setup>\\nimport {getLawNotice} from \\"../alova/service\\"\\nimport {concatenate, ulg} from \\"../utils/strings/index\\";\\n\\n// data\\nconst content = ref<string>(\\"\\")\\n// const law \\n\\n// request api\\nconst getLawList = async () => {\\n  await getLawNotice().then((result: any) => {\\n    // check status code\\n    if (result.statusCode === 200) {\\n      // get data\\n      let lawList = result.data.data;\\n      for (let i = 0; i < lawList.length; i++) {\\n        let text = lawList[i].text;\\n        // ulg(text)\\n        content.value = concatenate(content.value, \\" \\", text)\\n      }\\n    }\\n  }).catch((err: any) => {\\n    alert(err)\\n  })\\n}\\n```"},{"id":"become-apache-committer","metadata":{"permalink":"/blog/become-apache-committer","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/open-source/\u6210\u4e3a-Apache-Committer-\u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a.md","source":"@site/blog/open-source/\u6210\u4e3a-Apache-Committer-\u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a.md","title":"\u6210\u4e3a Apache Committer, \u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a","description":"\u6211\u7684\u5f00\u6e90\u5386\u7a0b","date":"2024-08-17T16:21:54.000Z","tags":[{"inline":true,"label":"Open Source","permalink":"/blog/tags/open-source"},{"inline":true,"label":"Apache","permalink":"/blog/tags/apache"},{"inline":true,"label":"Committer","permalink":"/blog/tags/committer"}],"readingTime":6.336666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"become-apache-committer","title":"\u6210\u4e3a Apache Committer, \u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a","date":"2024-08-17T16:21:54.000Z","authors":"yuluo","tags":["Open Source","Apache","Committer"],"keywords":["Open Source","Apache","Committer"]},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Vitesse unipp & Alovajs \u6784\u5efa\u5fae\u4fe1\u5c0f\u7a0b\u5e8f","permalink":"/blog/use-vitesse-unipp-and-alovajs-build-wechatminiapp"},"nextItem":{"title":"\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801 Bug","permalink":"/blog/case-by-unit-test"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u6211\u7684\u5f00\u6e90\u5386\u7a0b\\n\\n\u8bf4\u8d77\u5f00\u6e90\uff0c\u6211\u5728\u5927\u4e09\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5c31\u63a5\u89e6\u5230\u4e86\u3002\u5f53\u65f6\u7684\u573a\u666f\u4ecd\u7136\u5386\u5386\u5728\u76ee\u3002\\n\\n\u56de\u60f3\u8d77\u6765\uff0c\u6211\u7b2c\u4e00\u4e2a\u6b63\u5f0f\u7684 Github Pull Request \u662f\u7ed9 Spring Cloud Alibaba \u9879\u76ee\u5220\u9664\u4e86\u4e00\u4e2a\u591a\u4f59\u7684 Pom \u4f9d\u8d56\u9879\u3002\u5f53\u65f6\u624b\u5fd9\u811a\u4e71\uff0c\u5728\u6349\u6478\u4e86\u4e24\u4e2a\u591a\u5c0f\u65f6\u540e\uff0c\u624d\u7b97\u662f\u6210\u529f\u63d0\u4ea4\u4e86\u7b2c\u4e00\u4e2a Pull Request\u3002\u975e\u5e38\u611f\u8c22[\u94d6\u6734](https://github.com/steverao)\uff0c\u662f\u4ed6\u5e26\u7740\u6211\u8ba4\u8bc6\u4e86\u5f00\u6e90\uff0c\u8e0f\u51fa\u4e86\u53c2\u4e0e\u5f00\u6e90\u81f3\u5173\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u3002\\n\\n\u4ece\u521a\u5f00\u59cb\u4f7f\u7528 Git \u7684\u624b\u5fd9\u811a\u4e71\uff0c\u5230\u73b0\u5728 `git c -m XXX`\uff0c\u4ee5\u53ca Github \u4e0a\u53c2\u4e0e\u7684\u5404\u4e2a PR/Issue\u3002\u56de\u60f3\u8d77\u6765\uff0c\u771f\u662f\u601d\u7eea\u4e07\u5343\u3002\u6211\u89c9\u5f97\u4eba\u751f\u83ab\u8fc7\u4e8e\u5982\u6b64\u3002\u5b66\u4e60\u6478\u7d22 -> \u719f\u7ec3\u4f7f\u7528 -> \u505a\u51fa\u6210\u7ee9\u3002\\n\\n\u4ece\u5927\u4e09\u81f3\u4eca\uff0c\u6211\u4ecd\u7136\u4fdd\u6301\u7740\u5bf9\u5f00\u6e90\u7684\u70ed\u60c5\uff0c\u53c2\u4e0e\u5f00\u6e90\uff0c\u76f4\u81f3\u4eca\u65e5\uff0c\u6211\u5df2\u7ecf\u662f\u4e09\u4e2a\u9879\u76ee\u7684 Committer \u4e86\u3002\\n\\n## \u53c2\u4e0e Apache Community\\n\\n[Apache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff08Apache Software Foundation\uff0c\u7b80\u79f0\u4e3aASF\uff09](https://community.apache.org/)\uff0c\u662f\u4e00\u5bb6\u7f8e\u56fd\u7684\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u65e8\u5728\u652f\u6301\u5404\u7c7b\u5f00\u6e90\u8f6f\u4ef6\u9879\u76ee\u3002ASF\u6700\u521d\u7531 Apache HTTP Server \u7684\u4e00\u7fa4\u5f00\u53d1\u8005\u7ec4\u6210\uff0c\u5e76\u57281999\u5e743\u670825\u65e5\u6b63\u5f0f\u6210\u7acb\u3002 \u622a\u81f32021\u5e74\uff0c\u5176\u603b\u6210\u5458\u6570\u5927\u7ea6\u57281000\u540d\u3002\u547d\u540d\u662f\u6839\u636e\u5317\u7f8e\u5f53\u5730\u7684\u4e00\u652f\u5370\u7b2c\u5b89\u90e8\u843d\u800c\u6765\uff0c\u8fd9\u652f\u90e8\u843d\u4ee5\u9ad8\u8d85\u7684\u519b\u4e8b\u7d20\u517b\u548c\u8d85\u4eba\u7684\u5fcd\u8010\u529b\u8457\u79f0\uff0c19\u4e16\u7eaa\u540e\u534a\u671f\u5bf9\u4fb5\u5360\u4ed6\u4eec\u9886\u571f\u7684\u5165\u4fb5\u8005\u8fdb\u884c\u4e86\u53cd\u6297\u3002\u4e3a\u4e86\u5bf9\u8fd9\u652f\u5370\u7b2c\u5b89\u90e8\u843d\u8868\u793a\u656c\u4ef0\u4e4b\u610f\uff0c\u53d6\u8be5\u90e8\u843d\u540d\u79f0\uff08Apache\uff09\u4f5c\u4e3a\u670d\u52a1\u5668\u540d\u3002\u4f46\u4e00\u63d0\u5230\u8fd9\u4e2a\u547d\u540d\uff0c\u8fd9\u91cc\u8fd8\u6709\u6d41\u4f20\u7740\u4e00\u6bb5\u6709\u610f\u601d\u7684\u6545\u4e8b\u3002\u56e0\u4e3a\u8fd9\u4e2a\u670d\u52a1\u5668\u662f\u5728 NCSA HTTPd \u670d\u52a1\u5668\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u901a\u8fc7\u4f17\u4eba\u52aa\u529b\uff0c\u4e0d\u65ad\u5730\u4fee\u6b63\u3001\u6253\u8865\u4e01\uff08Patchy\uff09\u7684\u4ea7\u7269\uff0c\u88ab\u620f\u79f0\u4e3a\u201cA Patchy Server\u201d\uff08\u4e00\u4e2a\u8865\u4e01\u670d\u52a1\u5668\uff09\u3002\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u201cA Patchy\u201d\u4e0e\u201cApache\u201d\u662f\u8c10\u97f3\uff0c\u6545\u6700\u540e\u6b63\u5f0f\u547d\u540d\u4e3a\u201cApache Server\u201d\u3002\\n\\n\u4ee5\u4e0a\u662f\u6765\u81ea\u4e8e\u7ef4\u57fa\u767e\u79d1\u4e2d\u5bf9 Apache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7684\u4ecb\u7ecd\u3002\\n\\nApache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\u8d77\u521d\u662f\u7531\u5f00\u53d1 [Apache HTTPd](https://httpd.apache.org/) \u7684\u5f00\u53d1\u4eba\u5458\u7ec4\u6210\uff0c\u4ed6\u4eec\u4ee5 Apache HTTPd \u8fd9\u4e00\u7f51\u7edc\u670d\u52a1\u5668\u9879\u76ee\u4e3a\u8d77\u70b9\uff0c\u521b\u5efa\u4e86\u8bb8\u591a\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5438\u5f15\u5168\u7403\u5171\u540c\u7684\u5f00\u6e90\u7231\u597d\u8005\u53c2\u4e0e\u9879\u76ee\u7684\u7ef4\u62a4\u4e0e\u8fed\u4ee3\u3002\u4e0d\u65ad\u6709\u9879\u76ee\u9000\u4f11\uff0c\u4e0d\u65ad\u6709\u65b0\u9879\u76ee\u88ab\u5b75\u5316\uff0c\u53cd\u53cd\u590d\u590d\u3002\u624d\u6709\u4e86\u4eca\u5929\u7684 Apache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\u3002\\n\\n![Apache HTTPd Server Logo](/img/apache/committer/4.jpg)\\n\\n### \u7b2c\u4e00\u6b21\u8d21\u732e\\n\\n\u5728 Apache \u793e\u533a\u4e2d\u7684\u7b2c\u4e00\u6b21\u8d21\u732e\u5e94\u8be5\u662f\u7ed9 Dubbo \u9879\u76ee\u5220\u9664\u4e86\u4e00\u4e2a `{@link}` \u4ee3\u7801\u94fe\u63a5\u3002\u8bf4\u6765\u60ed\u6127\uff0c[Dubbo](https://github.com/apache/dubbo) \u662f\u6211\u53c2\u4e0e Apache \u7684\u7b2c\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5230\u73b0\u5728\u4e3a\u6b62\u4ec5\u6709 6 \u4e2a\u63d0\u4ea4\u30025 \u6708\u4efd\u7684\u65f6\u5019\u901a\u8fc7 [Rick](https://github.com/LinuxSuRen) \u63a5\u89e6\u5230\u4e86 [Apache Hertzbeat](https://github.com/apache/hertzbeat) \u9879\u76ee\uff0c\u4ece\u5355\u5143\u6d4b\u8bd5\u5f00\u59cb\u4e86\u6211\u7684 Apache \u8d21\u732e\u4e4b\u8def\u3002\\n\\n### \u83b7\u5f97\u63d0\u540d\uff0c\u6210\u4e3a Committer\\n\\n\u6b64\u6b21\u63d0\u540d\u662f Apache HertzbeatP(Incubating) \u7684 PMC Member [Logic](https://github.com/zqr10159) \u4e3e\u8350\u7684\uff0c\u611f\u8c22 Apache Hertzbeat Team\u3002\u987a\u5229\u63d0\u540d\u6210\u4e3a\u4e86 Hertzbeat Committer\uff0c\u6709\u4e86\u81ea\u5df1\u7684 Apache \u90ae\u7bb1\u3002\\n\\n![Apache ID Email](/img/apache/committer/3.jpg)\\n\\n### Apache Committer \u7684\u610f\u4e49\\n\\n\u4fd7\u8bdd\u8bf4\uff0c\u80fd\u529b\u8d8a\u5927\uff0c\u4efb\u52a1\u8d8a\u5927\u3002\u6210\u4e3a\u4e86\u9879\u76ee\u7684 Committer \u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u8eab\u4efd\u7684\u8f6c\u6362\uff0c\u66f4\u662f\u4e00\u4e2a\u5bf9\u81ea\u5df1\u81ea\u8eab\u80fd\u529b\u7684\u8ba4\u540c\u548c\u80af\u5b9a\u3002\u5728 Review PR \u65f6\uff0c\u6211\u7684 `LGTM` \u4e0d\u518d\u662f\u4e00\u4e2a\u7070\u8272\u6837\u5f0f\uff0c\u800c\u662f\u53d8\u6210\u4e86\u84dd\u8272\uff08\u56e0\u4e2a\u4eba Github \u4e3b\u9898\u4e0d\u540c\uff0c\u5c55\u73b0\u7684\u989c\u8272\u4e5f\u4e0d\u540c\uff09\u3002\u4e0d\u7528\u5728\u7b49\u5f85\u5176\u4ed6\u7684 Committer Approve CI\u3002\u610f\u5473\u7740\u5bf9\u9879\u76ee\u6709\u4e86\u7ba1\u7406\u6743\u5229\u3002\\n\\n![PR Approve](/img/apache/committer/5.jpg)\\n\\n## \u53c2\u4e0e\u5f00\u6e90\u7684\u65b9\u6cd5\\n\\n\u4efb\u4f55\u4eba\u53bb\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u90fd\u9700\u8981\u4e00\u4e2a\u5951\u673a\u548c\u5f15\u8def\u4eba\u3002\u5728\u8bb8\u8bb8\u591a\u591a\u7684 Apache \u9879\u76ee\u4e2d\uff0c\u4e0d\u4e4f\u5173\u6ce8\u9879\u76ee Issue List \u7684\u4eba\u3002\u8bb0\u5fc6\u72b9\u65b0\u7684\u4e00\u6b21\u662f\uff1a\u67d0\u4e2a\u665a\u4e0a\u5728\u5199\u5b8c\u5de5\u5177\u7c7b\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u5c0f Bug\u3002\u5f53\u65f6\u5fc3\u91cc\u60f3\u7684\u662f\uff0c\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4fe1\u606f\u592a\u591a\u4e86\uff0c\u5199\u5728 PR \u91cc\u9762\u4e0d\u592a\u597d\uff0c\u4e8e\u662f\u5f00\u4e86\u4e00\u4e2a Issue \u8bb0\u5f55\u4e0a\u4e0b\u6587\u3002\u8fd9\u4e2a Bug \u5c0f\u5230\u4ec0\u4e48\u7a0b\u5ea6\u5462\uff1f\u5c0f\u5230\u6211\u521a\u521b\u5efa\u5b8c Issue\uff0c\u5728\u5c06\u5355\u5143\u6d4b\u8bd5\u548c\u4fee\u590d Bug \u7684\u4ee3\u7801\u4e00\u8d77\u63d0\u4ea4\u4e4b\u540e\uff0c\u518d\u6b21\u5237\u65b0 PR List\uff0c\u770b\u5230\u4e86\u4e00\u4e2a\u4fee\u590d Bug \u7684 PR Title\u3002\\n\\n\u5176\u5b9e\u4e0d\u7f3a\u4e4f\u5173\u6ce8\u9879\u76ee\u7684\u4eba\uff0c\u66f4\u591a\u7684\u662f\u9700\u8981\u4e00\u4e2a\u5951\u673a\uff01\u53c2\u4e0e\u9879\u76ee\u7684\u5951\u673a\u3002\\n\\n### The Apache Way\\n\\nApache Community \u5949\u884c\u7684 [The Apache Way](https://www.apache.org/theapacheway/)\u3002\u793e\u533a\u5927\u4e8e\u4ee3\u7801\uff0c\u597d\u7684\u793e\u533a\u5f80\u5f80\u6bd4\u4f18\u79c0\u7684\u4ee3\u7801\u66f4\u91cd\u8981\uff0c\u793e\u533a\u7684\u7ec4\u6210\u6210\u5206\u5305\u62ec\u5f00\u53d1\u8005\uff0c\u7528\u6237\u7b49\u7b49\u3002\u7528\u6237\u624d\u662f\u9879\u76ee\u4ee3\u7801\u7684\u7b2c\u4e00\u4f7f\u7528\u8005\uff0c\u5065\u5eb7\u7684\u793e\u533a\u72b6\u6001\u662f\u7528\u6237\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff1a\u53d1\u73b0\u95ee\u9898\uff0c\u800c\u540e\u62a5\u544a\u95ee\u9898\uff0c\u6700\u540e\u89e3\u51b3\u95ee\u9898\u3002\u66f4\u53ef\u80fd\u53d1\u751f\u7684\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u7528\u6237\u62a5\u544a\u95ee\u9898\uff0c\u4ece\u7528\u6237\u8eab\u4efd\u8f6c\u4e3a\u5f00\u53d1\u8005\uff0c\u89e3\u51b3\u95ee\u9898\u3002\u5e76\u5728\u4e4b\u540e\u6301\u7eed\u53c2\u4e0e\u793e\u533a\u9879\u76ee\u7684\u7ef4\u62a4\u3002\\n\\n### \u53c2\u4e0e\u5f00\u6e90\u7684\u8def\u5f84\\n\\n\u5f00\u6e90\u5f80\u5f80\u5f88\u7eaf\u7cb9\uff0cApache \u57fa\u91d1\u4f1a\u5b58\u5728\u7684\u610f\u4e49\u4e5f\u662f\u4e3a\u4e86\u4fdd\u62a4\u9879\u76ee\u548c\u5f00\u53d1\u8005\u3002\\n\\n#### Apache \u793e\u533a\u8eab\u4efd\u5b9a\u4e49\\n\\n\u53c2\u4e0e\u793e\u533a\u8d21\u732e\u4e4b\u524d\uff0c\u5148\u8981\u4e86\u89e3\u793e\u533a\u7684\u8eab\u4efd\u5b9a\u4e49\u662f\u600e\u6837\u7684\uff0c\u9879\u76ee\u7684 Committer \u5230\u5e95\u4f4d\u4e8e\u54ea\u4e00\u5c42\u7ea7\uff0c\u600e\u4e48\u624d\u80fd\u6210\u4e3a Committer\u3002Apache \u793e\u533a\u5bf9[\u8d21\u732e\u8005\u8eab\u4efd](https://community.apache.org/contributor-ladder.html)\u6709\u5f88\u660e\u786e\u7684\u5b9a\u4e49\uff1a\\n\\n![Apache contributor label](/img/apache/committer/6.jpg)\\n\\n#### \u9879\u76ee Committer \u63d0\u540d\u6761\u4ef6\\n\\n\u9879\u76ee PMC Team \u63d0\u540d Committer \u7684\u6761\u4ef6\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4ee5 Apache Hertzbeat \u4e3a\u4f8b\uff1a\\n\\n![Apache Hertzbeat becoming committer](/img/apache/committer/7.jpg)\\n\\n\u6bcf\u4e2a\u9879\u76ee\u90fd\u6709\u81ea\u5df1\u7684\u6807\u51c6\uff0c\u8fd9\u4e9b\u6807\u51c6\u4e5f\u4e0d\u662f\u4e00\u6210\u4e0d\u53d8\uff0c\u5728\u9879\u76ee\u7684\u6bcf\u4e2a\u9636\u6bb5\u4f1a\u8fdb\u884c\u8c03\u6574\u3002\\n\\n#### \u5982\u4f55\u53c2\u4e0e\u5f00\u6e90\\n\\n\u63a5\u4e0b\u6765\u662f\u6b64\u7ae0\u8282\u7684\u91cd\u5934\u620f\uff0c\u5982\u4f55\u53c2\u4e0e\u5f00\u6e90\u5e76\u83b7\u5f97 Committer \u63d0\u540d\uff1f\\n\\n##### \u5f00\u6e90\u6d3b\u52a8\\n\\n\u5b66\u751f\u56e0\u4e3a\u8eab\u4efd\u7279\u6b8a\uff0c\u6ca1\u6709\u5927\u578b\u9879\u76ee\u7684\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4e5f\u6ca1\u6709\u673a\u4f1a\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5207\u8eab\u4f7f\u7528\u3002\u56e0\u6b64\u53c2\u4e0e\u5f00\u6e90\u5f80\u5f80\u5f88\u56f0\u96be\uff0c\u7f3a\u5c11\u5951\u673a\u3002\\n\\n\u6211\u89c9\u5f97\u53c2\u4e0e\u5f00\u6e90\u5e76\u83b7\u5f97\u63d0\u540d\u7684\u6700\u597d\u65b9\u5f0f\u662f**\u5f00\u6e90\u4e4b\u590f\uff08OSPP\uff09\u6216\u8005\u8c37\u6b4c\u5f00\u6e90\u4e4b\u590f\uff08GSOC\uff09\u6d3b\u52a8**\u3002\u5728\u5b8c\u6210\u76f8\u5173\u8bfe\u9898\u4e4b\u540e\uff0c\u9010\u6b65\u719f\u6089\u9879\u76ee\u529f\u80fd\u3001\u4ee3\u7801\u3001\u6301\u7eed\u53c2\u4e0e\u5c31\u4f1a\u83b7\u5f97\u63d0\u540d\u3002\u4e5f\u4e0d\u4e4f\u4e00\u4e9b\u5b66\u751f\u5728\u5b8c\u6210\u9898\u76ee\u4e4b\u540e\u88ab\u76f4\u63a5\u63d0\u540d\u6210\u4e3a\u9879\u76ee Committer\u3002\\n\\n\u5176\u6b21\u662f**\u63d0\u9ad8\u81ea\u5df1\u7684 Coding \u80fd\u529b**\uff0c\u53d1\u73b0\u9879\u76ee\u4e2d\u7f3a\u5c11\u7684\u5355\u5143\u6d4b\u8bd5\u548c\u4ee3\u7801 Bug\uff0c\u7136\u540e\u63d0\u4ea4 PR \u4fee\u590d\u3002\u8fd9\u5bf9\u521a\u5f00\u59cb\u7684\u540c\u5b66\u5f80\u5f80\u662f\u6bd4\u8f83\u96be\u5f97\u3002Coding \u80fd\u529b\u5f80\u5f80\u662f\u5728\u4f18\u5316\u9879\u76ee\u4ee3\u7801\uff0c\u4e86\u89e3\u6bcf\u4e00\u6b21 Change \u4e4b\u540e\u6162\u6162\u79ef\u7d2f\u7684\u3002\\n\\n\u4e00\u4e2a\u597d\u7684\u9879\u76ee\uff0c**\u5468\u8fb9\u751f\u6001\u5f80\u5f80\u662f\u81f3\u5173\u91cd\u8981\u7684**\u3002\u4e00\u4efd\u597d\u7684\u6587\u6863\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237/\u5f00\u53d1\u8005\u5feb\u901f\u4e0a\u624b\u4f7f\u7528\uff0c\u53c2\u4e0e\u8d21\u732e\u3002\u591a\u8bed\u8a00\u6269\u5c55\uff0c\u53ef\u4ee5\u8ba9\u9879\u76ee\u4f7f\u7528\u5728\u5176\u4ed6\u8bed\u8a00\u6784\u5efa\u7684\u9879\u76ee\u4e2d\uff0c\u6269\u5927\u9879\u76ee\u53d7\u4f17\u3002\u4e00\u4e2a\u597d\u7684 Example \u4ed3\u5e93\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u53d1\u73b0\u66f4\u591a\u9879\u76ee\u7684\u4f7f\u7528\u59ff\u52bf\u3002\u56e0\u6b64\u53c2\u4e0e Example \u4ed3\u5e93\u7684\u5efa\u8bbe\u548c\u6587\u6863\u7f16\u5199\u3001\u7ffb\u8bd1\u7b49\u5de5\u4f5c\uff0c\u4e5f\u662f\u719f\u6089\u9879\u76ee\u83b7\u5f97\u63d0\u540d\u7684\u65b9\u5f0f\u4e4b\u4e00\u3002\\n\\n\u6700\u540e\uff0c\u6211\u8981\u8bf4\u7684\u662f\uff1a\u83b7\u5f97\u63d0\u540d\u662f`\u6c34\u5230\u6e20\u6210`\u7684\u4e8b\u60c5\uff0c\u4e0d\u80fd\u4e3a\u4e86\u83b7\u5f97\u63d0\u540d\u800c\u53bb\u53c2\u4e0e\u5f00\u6e90\uff0c\u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u8981\u5fd8\u8bb0\u81ea\u5df1\u7684\u521d\u5fc3\u3002\\n\\n\u9879\u76ee\u793e\u533a\u5f80\u5f80\u6b22\u8fce\u5404\u79cd\u65b9\u5f0f\u7684\u8d21\u732e\uff1a\u4e0d\u8bba\u662f\u4ee3\u7801\u3001\u6587\u6863\u8fd8\u662f\u5e03\u9053\u3002\\n\\n## \u968f\u60f3\\n\\n\u5199\u4e0b\u6b64\u6587\uff0c\u662f\u4e3a\u4e86\u7eaa\u5ff5\u6210\u4e3a Apache Hertzbeat Committer \u8fd9\u4e2a\u7279\u6b8a\u7684\u4e8b\u60c5, \u540c\u65f6\u4e5f\u662f\u5bf9\u6211\u4e4b\u540e\u53c2\u4e0e\u5f00\u6e90\u7684\u6fc0\u52b1\u3002\\n\u4fdd\u6301\u70ed\u60c5\uff0c\u4fdd\u6301 Coding\u3002\u611f\u8c22\u5728\u53c2\u4e0e\u5f00\u6e90\u7684\u65f6\u5019\u7ed9\u4e0e\u6211\u5e2e\u52a9\u7684\u5404\u4f4d\u3002"},{"id":"case-by-unit-test","metadata":{"permalink":"/blog/case-by-unit-test","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/Bug-summary/\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801-Bug.md","source":"@site/blog/Bug-summary/\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801-Bug.md","title":"\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801 Bug","description":"\u80cc\u666f\u6982\u8ff0","date":"2024-08-05T15:51:51.000Z","tags":[{"inline":true,"label":"Spring Data JPA","permalink":"/blog/tags/spring-data-jpa"}],"readingTime":2.4233333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"case-by-unit-test","title":"\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801 Bug","date":"2024-08-05T15:51:51.000Z","authors":"yuluo","tags":["Spring Data JPA"],"keywords":["Spring Data JPA","Pageable"]},"unlisted":false,"prevItem":{"title":"\u6210\u4e3a Apache Committer, \u5bf9\u6211\u53c2\u4e0e\u5f00\u6e90\u7684\u80af\u5b9a","permalink":"/blog/become-apache-committer"},"nextItem":{"title":"Spring Boot Web \u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5","permalink":"/blog/spring-boot-web-app-request-debug"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\u6982\u8ff0\\n\\n\u80cc\u666f\u6765\u81ea\u4e8e\u7ed9 Apache Hertzbeat \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u8fd9\u4e2a\u95ee\u9898\u4e5f\u662f\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u4e4b\u524d\u7684\u6d4b\u8bd5\u7c7b\u662f\u6ce8\u91ca\u7684\u72b6\u6001\u3002\\n\\n```shell\\n15:18:38.013 [main] WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver -- Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: (was java.lang.UnsupportedOperationException)]\\n\\njava.lang.AssertionError: Status expected:<200> but was:<500>\\nExpected :200\\nActual   :500\\n```\\n\\n\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u4fe1\u606f\uff0c\u62a5\u9519\u5982\u4e0a\u3002\\n\\n\u5355\u5143\u6d4b\u8bd5\u548c\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\n@GetMapping\\n@Operation(summary = \\"Example Query the alarm definition list\\",\\n           description = \\"You can obtain the list of alarm definitions by querying filter items\\")\\npublic ResponseEntity<Message<Page<AlertDefine>>> getAlertDefines(\\n    @Parameter(description = \\"Alarm Definition ID\\", example = \\"6565463543\\") @RequestParam(required = false) List<Long> ids,\\n    @Parameter(description = \\"Search-Target Expr Template\\", example = \\"x\\") @RequestParam(required = false) String search,\\n    @Parameter(description = \\"Alarm Definition Severity\\", example = \\"6565463543\\") @RequestParam(required = false) Byte priority,\\n    @Parameter(description = \\"Sort field, default id\\", example = \\"id\\") @RequestParam(defaultValue = \\"id\\") String sort,\\n    @Parameter(description = \\"Sort mode: asc: ascending, desc: descending\\", example = \\"desc\\") @RequestParam(defaultValue = \\"desc\\") String order,\\n    @Parameter(description = \\"List current page\\", example = \\"0\\") @RequestParam(defaultValue = \\"0\\") int pageIndex,\\n    @Parameter(description = \\"Number of list pages\\", example = \\"8\\") @RequestParam(defaultValue = \\"8\\") int pageSize) {\\n\\n    Page<AlertDefine> alertDefinePage = alertDefineService.getAlertDefines(ids, search, priority, sort, order, pageIndex, pageSize);\\n    return ResponseEntity.ok(Message.success(alertDefinePage));\\n}\\n```\\n\\n\u6d4b\u8bd5\u7c7b\uff1a\\n\\n```java\\n@Test\\nvoid getAlertDefines() throws Exception {\\n\\n    when(alertDefineService.getAlertDefines(List.of(1L), \\"Test\\", (byte) 1, \\"id\\", \\"desc\\", 1, 10))\\n        .thenReturn(new PageImpl<>(Collections.singletonList(alertDefine)));\\n\\n    mockMvc.perform(MockMvcRequestBuilders.get(\\n        \\"/api/alert/defines\\")\\n                    .param(\\"ids\\", \\"1\\")\\n                    .param(\\"search\\", \\"Test\\")\\n                    .param(\\"priority\\", \\"1\\")\\n                    .param(\\"sort\\", \\"id\\")\\n                    .param(\\"order\\", \\"desc\\")\\n                    .param(\\"pageIndex\\", \\"1\\")\\n                    .param(\\"pageSize\\", \\"10\\")\\n                    .accept(MediaType.APPLICATION_JSON))\\n        .andExpect(status().isOk())\\n        .andExpect(jsonPath(\\"$.code\\").value((int) CommonConstants.SUCCESS_CODE))\\n        .andExpect(jsonPath(\\"$.data.content[0].app\\").value(\\"linux\\"))\\n        .andExpect(jsonPath(\\"$.data.content[0].id\\").value(\\"9\\"))\\n        .andExpect(jsonPath(\\"$.data.content[0].metric\\").value(\\"disk\\"))\\n        .andReturn();\\n}\\n```\\n\\n## \u5206\u6790\\n\\n\u7ecf\u8fc7 google \u786e\u5b9a\u4e86\u53ef\u80fd\u53d1\u751f\u95ee\u9898\u7684\u539f\u56e0\uff1a\\n\\n1. \u4f7f\u7528\u4e86 Arrays.asList(T t) \u65b9\u6cd5\\n2. \u5b9e\u4f53\u7c7b\u79cd\u5c5e\u6027\u4e3a null \u503c\uff0c\u800c\u6ca1\u6709\u4f7f\u7528 `@JsonIgnore` \u7b49\u6ce8\u89e3\\n3. \u6ca1\u6709\u4f7f\u7528\u5305\u88c5\u7c7b\u578b\u800c\u4f7f\u7528\u4e86 int\uff0clong \u7b49\u57fa\u5143\u7c7b\u578b\\n4. \u5728 spring \u53cd\u5411\u89e3\u6790\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528 is \u5f00\u5934\u8fd4\u56de boolean \u7c7b\u578b\u7684\u65b9\u6cd5\\n\\n\u603b\u5171 google \u5230\u4e86\u4ee5\u4e0a\u56db\u79cd\u539f\u56e0\uff0c\u7ecf\u8fc7\u548c\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u5b9e\u4f53\u7c7b\u5bf9\u6bd4\u548c\u5206\u6790\uff0c\u8fdb\u884c\u9010\u4e00\u6392\u9664\u3002\u6700\u540e\u53d1\u73b0\u90fd\u6ca1\u6709\u7b26\u5408\u4e0a\u8ff0\u95ee\u9898\u7684\u9009\u9879\u3002\\n\\n\u7ee7\u800c\u770b\u5230\u4e86\u8fd4\u56de\u503c\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u53d1\u73b0\u4e0d\u662f\u5355\u72ec\u7684\u5b9e\u4f53\u7c7b\u578b\uff0c\u800c\u662f\u4e00\u4e2a `Page<T>` \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u60f3\u5230\uff0c\u4f1a\u4e0d\u4f1a\u662f Page \u4e2d\u67d0\u4e2a\u5c5e\u6027\u4e3a\u7a7a\u9020\u6210\u7684 Json \u5e8f\u5217\u5316\u5f02\u5e38\u3002\\n\\n\u5728 Controller \u4e2d\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\uff1a\\n\\n```java\\nPage<AlertDefine> alertDefinePage = alertDefineService.getAlertDefines(ids, search, priority, sort, order, pageIndex, pageSize);\\n\\n// \u6a21\u62df\u5e8f\u5217\u5316\u8fc7\u7a0b\u8fdb\u884c\u8c03\u8bd5\\nString json = JsonUtil.toJson(alertDefinePage);\\nSystem.out.println(json);\\n\\nreturn ResponseEntity.ok(Message.success(alertDefinePage));\\n}\\n```\\n\\n\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u786e\u5b9e\u62a5\u9519\uff1a\\n\\n```shell\\n15:32:00.342 [main] ERROR org.apache.hertzbeat.common.util.JsonUtil -- (was java.lang.UnsupportedOperationException) (through reference chain: org.springframework.data.domain.PageImpl[\\"pageable\\"]->org.springframework.data.domain.Unpaged[\\"offset\\"])\\ncom.fasterxml.jackson.databind.JsonMappingException: (was java.lang.UnsupportedOperationException) (through reference chain: org.springframework.data.domain.PageImpl[\\"pageable\\"]->org.springframework.data.domain.Unpaged[\\"offset\\"])\\n```\\n\\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4ece\u63a7\u5236\u53f0\u770b\u5230\u4e86\u66f4\u591a\u7684\u9519\u8bef\u4fe1\u606f\uff0c`Unpaged \u4e2d\u7684 offset` \u8c8c\u4f3c\u6709\u70b9\u95ee\u9898\u3002\u8f93\u51fa\u5b83\u770b\u770b\\n\\n```java\\nSystem.out.println(alertDefinePage.getPageable().getOffset());\\n\\njakarta.servlet.ServletException: Request processing failed: java.lang.UnsupportedOperationException\\n```\\n\\n\u679c\u4e0d\u5176\u7136\uff0c\u786e\u5b9e\u6709\u95ee\u9898\u3002\u518d\u6b21 google \u4e4b\u540e\uff0c\u627e\u5230\u4e86\u793e\u533a issue\uff1ahttps://github.com/spring-projects/spring-data-commons/issues/2987\uff0c\u5176\u4e2d\u4e00\u4f4d\u5e94\u8be5\u662f\u793e\u533a\u7ef4\u62a4\u8005\uff0c\u66f4\u662f\u8bf4\u51fa Pageable \u4ece\u672a\u6253\u7b97\u88ab\u5e8f\u5217\u5316\u3002\ud83e\udd72\\n\\n![Spring Data \u793e\u533a\u56de\u590d](/img/bug/1.png)\\n\\n## \u4fee\u590d\\n\\n\u786e\u5b9a\u4e86\u95ee\u9898\u4e4b\u540e\uff0c\u5bfb\u627e\u4fee\u590d\u7684\u529e\u6cd5\u3002\\n\\n\u6839\u636e\u793e\u533a issue \u8fdb\u5c55\uff0c\u603b\u5171\u6709\u4e24\u79cd\u4fee\u590d\u529e\u6cd5\uff1a\\n\\n1. \u901a\u8fc7 PageImpl \u91cd\u65b0\u5305\u88c5 Page \u5bf9\u8c61\uff1a\\n\\n   ```java\\n   Pageable pageable = PageRequest.of(0, 10);\\n   PageImpl page = new PageImpl<>(myArraylist, pageable, myArraylist.size());\\n   ```\\n\\n2. \u5c06 **SpringDataJacksonConfiguration.PageModule** \u6dfb\u52a0\u5230 **Jackson2ObjectMapperBuilder** \\n\\n   ```java\\n   @Bean\\n   public Jackson2ObjectMapperBuilder objectMapperBuilder(SpringDataJacksonConfiguration.PageModule pageModule) {\\n          Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder();\\n          builder.modules(pageModule);\\n         return builder;\\n   }\\n   ```"},{"id":"spring-boot-web-app-request-debug","metadata":{"permalink":"/blog/spring-boot-web-app-request-debug","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/Bug-summary/Spring-Boot-Web-\u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5.md","source":"@site/blog/Bug-summary/Spring-Boot-Web-\u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5.md","title":"Spring Boot Web \u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5","description":"\u7ebf\u4e0a\u63a5\u53e3\u54cd\u5e94\u592a\u6162\uff0cSpring Boot + \u5185\u5d4c\u7684 Tomcat \u670d\u52a1\u5668\uff0cTomcat \u5904\u7406\u8bf7\u6c42\u7684\u6700\u5927\u7ebf\u7a0b\u6570\u666e\u901a\u60c5\u51b5\u662f 150 \u5de6\u53f3\uff0c\u6700\u5927\u662f 200\uff0c\u6240\u4ee5\u5f53\u540c\u65f6\u5904\u7406\u7684\u8bf7\u6c42\u8fc7\u591a\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bf7\u6c42\u4e00\u76f4\u6ca1\u6709\u5904\u7406\u5b8c\u6210\u3002\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5728\u7e41\u5fd9\uff0c\u6ca1\u6709\u529e\u6cd5\u5904\u7406\u65b0\u7684\u8bf7\u6c42\uff0c\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u8bf7\u6c42\u6392\u961f\u7b49\u5f85\u5904\u7406\uff0c\u4ece\u800c\u9020\u6210\u4e86\u8fdf\u8fdf\u65e0\u6cd5\u54cd\u5e94\u7684\u7ebf\u4e0a\u4e8b\u6545\uff0c\u7528\u6237\u4f53\u9a8c\u592a\u5dee\u3002","date":"2024-08-01T16:09:46.000Z","tags":[{"inline":true,"label":"Spring Boot","permalink":"/blog/tags/spring-boot"}],"readingTime":2.5633333333333335,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-boot-web-app-request-debug","title":"Spring Boot Web \u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5","date":"2024-08-01T16:09:46.000Z","authors":"yuluo","tags":["Spring Boot"],"keywords":["Spring Boot","Bugs","Debug"]},"unlisted":false,"prevItem":{"title":"\u7531\u5355\u5143\u6d4b\u8bd5\u53d1\u73b0\u7684\u4ee3\u7801 Bug","permalink":"/blog/case-by-unit-test"},"nextItem":{"title":"CocA 2024","permalink":"/blog/coca-2024"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u7ebf\u4e0a\u63a5\u53e3\u54cd\u5e94\u592a\u6162\uff0cSpring Boot + \u5185\u5d4c\u7684 Tomcat \u670d\u52a1\u5668\uff0cTomcat \u5904\u7406\u8bf7\u6c42\u7684\u6700\u5927\u7ebf\u7a0b\u6570\u666e\u901a\u60c5\u51b5\u662f 150 \u5de6\u53f3\uff0c\u6700\u5927\u662f 200\uff0c\u6240\u4ee5\u5f53\u540c\u65f6\u5904\u7406\u7684\u8bf7\u6c42\u8fc7\u591a\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bf7\u6c42\u4e00\u76f4\u6ca1\u6709\u5904\u7406\u5b8c\u6210\u3002\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5728\u7e41\u5fd9\uff0c\u6ca1\u6709\u529e\u6cd5\u5904\u7406\u65b0\u7684\u8bf7\u6c42\uff0c\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u8bf7\u6c42\u6392\u961f\u7b49\u5f85\u5904\u7406\uff0c\u4ece\u800c\u9020\u6210\u4e86\u8fdf\u8fdf\u65e0\u6cd5\u54cd\u5e94\u7684\u7ebf\u4e0a\u4e8b\u6545\uff0c\u7528\u6237\u4f53\u9a8c\u592a\u5dee\u3002\\n\\n## \u573a\u666f\u590d\u73b0\\n\\n\u4e00\u4e2a\u7b80\u5355\u7684 controller \u63a5\u53e3\\n\\n```java\\n@RestController\\npublic class SpringBootController {\\n\\n @GetMapping(\\"/\\")\\n public String index() throws InterruptedException {\\n\\n  // \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u7761\u7720\uff0c\u6a21\u62df\u4e1a\u52a1\u63a5\u53e3\u54cd\u5e94\u6162\u7684\u95ee\u9898\\n  Thread.sleep(60 * 30 * 1000);\\n  System.out.println(\\"current thread: \\" + Thread.currentThread().getName());\\n\\n  return \\"Hello Spring Boot!\\";\\n }\\n\\n}\\n```\\n\\n\u968f\u540e\u8bbe\u7f6e tomcat \u670d\u52a1\u5668\u7684\u6700\u5927\u7ebf\u7a0b\u4e3a 5 \uff1a\\n\\n```yml\\nserver:\\n  port: 8080\\n  tomcat:\\n    threads:\\n      max: 5\\n\\nspring:\\n  application:\\n    name: simple-application\\n    \\n```\\n\\n## \u6d4b\u8bd5\\n\\n\u4e4b\u540e\u6211\u4eec\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u6a21\u62df 10 \u4e2a\u7ebf\u7a0b\u5bf9\u63a5\u53e3\u53d1\u8d77\u8bf7\u6c42\\n\\n```java\\npublic class RequestTest {\\n\\n public static void main(String[] args) {\\n  \\n  for (int i = 0; i < 10; i++) {\\n   new Thread(new RequestTask()).start();\\n  }\\n }\\n\\n private static class RequestTask implements Runnable {\\n  @Override\\n  public void run() {\\n   try {\\n    URL url = new URL(\\"http://localhost:8080/\\");\\n    HttpURLConnection connection = (HttpURLConnection) url.openConnection();\\n    connection.setRequestMethod(\\"GET\\");\\n    int responseCode = connection.getResponseCode();\\n    System.out.println(\\"Response Code: \\" + responseCode);\\n   }\\n   catch (IOException e) {\\n    e.printStackTrace();\\n   }\\n  }\\n }\\n \\n}\\n```\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u91ca\u6389 controller \u4e2d\u7684\u7761\u7720\u4ee3\u7801\uff0c\u8fd0\u884c\u6d4b\u8bd5\u5f97\u5230\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a\\n\\n```java\\nspring boot web \u5e94\u7528\u54cd\u5e94\u8f93\u51fa\uff1a\\n2024-08-01T15:56:25.369+08:00  INFO 7304 --- [simple-application] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms\\ncurrent thread: http-nio-8080-exec-4\\ncurrent thread: http-nio-8080-exec-5\\ncurrent thread: http-nio-8080-exec-1\\ncurrent thread: http-nio-8080-exec-2\\ncurrent thread: http-nio-8080-exec-3\\ncurrent thread: http-nio-8080-exec-5\\ncurrent thread: http-nio-8080-exec-2\\ncurrent thread: http-nio-8080-exec-4\\ncurrent thread: http-nio-8080-exec-1\\ncurrent thread: http-nio-8080-exec-3\\n    \\n\u6d4b\u8bd5\u8f93\u51fa\uff1a\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\nResponse Code: 200\\n```\\n\\n\u6211\u4eec\u770b\u5230\u7ebf\u7a0b\u5728\u54cd\u5e94\u8f93\u51fa\u3002\u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u6ce8\u91ca\u4ee3\u7801\uff0c\u6a21\u62df\u4e8b\u6545\u73b0\u573a\u3002\u5c06\u4f1a\u5728\u63a7\u5236\u53f0\u770b\u4e0d\u5230\u4efb\u4f55\u8f93\u51fa\uff0c\u6d4b\u8bd5\u65b9\u6cd5\u4e5f\u4f1a\u5361\u4f4f\u4e0d\u52a8\u3002\\n\\n## \u6392\u67e5\\n\\n\u6211\u4eec\u4f7f\u7528 JVM \u7684\u4e00\u4e9b\u547d\u4ee4\u6765\u8fdb\u884c\u6392\u67e5\uff1a\\n\\n```shell\\n# \u9996\u5148\u67e5\u770b java \u7684\u8fdb\u7a0b id\\nC:\\\\Users\\\\Administrator>jps -l\\n18400 indi.yuluo.tomcat.SpringBootApplication\\n10324 jdk.jcmd/sun.tools.jps.Jps\\n16872 org.jetbrains.jps.cmdline.Launcher\\n18072 org.jetbrains.idea.maven.server.RemoteMavenServer36\\n9624\\n7372 inid.yuluo.tomcat.RequestTest\\n```\\n\\n\u6211\u4eec\u770b\u5230 SpringBootApplication \u548c RequestTest \u5728\u8fd0\u884c\uff0c\u4e4b\u540e\u4f7f\u7528 jstack \u547d\u4ee4\u751f\u6210\u7ebf\u7a0b\u5feb\u7167\uff0c\u5e76\u4fdd\u5b58\u4e3a\u6587\u4ef6\u3002\\n\\n```shell\\nC:\\\\Users\\\\Administrator>jstack 18400 > C:\\\\Users\\\\Administrator\\\\Desktop\\\\spring-boot-thread_dump.txt\\n```\\n\\n\u6253\u5f00\u7ebf\u7a0b\u5feb\u7167\u6587\u4ef6\uff0c\u641c\u7d22 `http-nio` \u5c31\u80fd\u770b\u5230 Tomcat \u7684\u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\u72b6\u6001\u90fd\u662f `TIMED_WAITING` \uff0c\u8868\u793a\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7279\u5b9a\u7684\u52a8\u4f5c\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u6307\u5b9a\u7684\u7b49\u5f85\u65f6\u95f4\u3002\u800c\u4e14\u80fd\u76f4\u63a5\u770b\u5230\u8bf7\u6c42\u662f\u963b\u585e\u5728\u4e86\u54ea\u4e2a\u4ee3\u7801\u4f4d\u7f6e\u3002\\n\\n```shell\\n\\"http-nio-8080-exec-2\\" #28 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=187.14s tid=0x0000015ffe6089f0 nid=0x1ee4 waiting on condition  [0x00000026eb5fc000]\\n      # `TIMED_WAITING`\\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\\n at java.lang.Thread.sleep(java.base@17.0.1/Native Method)\\n # \u963b\u585e\u4f4d\u7f6e\uff1a\\n at indi.yuluo.tomcat.controller.SpringBootController.index(SpringBootController.java:18)\\n```\\n\\n## \u89e3\u51b3\u65b9\u6848\\n\\n\u9002\u5f53\u4fee\u6539 Tomcat \u7684\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u53ef\u4ee5\u589e\u52a0\u5e76\u53d1\u8bf7\u6c42\u7684\u5904\u7406\u80fd\u529b\u3002\\n\\n\u9002\u5f53\u8c03\u5927 Tomcat \u7684\u6700\u5c0f\u7a7a\u95f2\u7ebf\u7a0b\u6570\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728\u5e76\u53d1\u9ad8\u5cf0\u65f6\u523b\uff0cTomcat \u80fd\u8fc5\u901f\u54cd\u5e94\u65b0\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u521b\u5efa\u7ebf\u7a0b\u3002\\n\\n\u4fee\u6539\u503c\u9700\u8981\u5bf9\u7528\u6237\u4f53\u91cf\u505a\u51fa\u9884\u4f30\u4e4b\u540e\uff0c\u8fdb\u884c\u6d4b\u8bd5\u4e4b\u540e\u786e\u5b9a\u3002"},{"id":"coca-2024","metadata":{"permalink":"/blog/coca-2024","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/open-source/CocA-2024.md","source":"@site/blog/open-source/CocA-2024.md","title":"CocA 2024","description":"\u4e1c\u65b9\u6b32\u6653\uff0c\u65e9\u65e9\u8d77\u5e8a\u3002\u51c6\u5907\u5c06\u8fd9\u4e09\u5929\u7684 CommunityOverCode Asia 2024 \u7684\u53c2\u4f1a\u7ecf\u5386\u8bb0\u5f55\u4e00\u4e0b\u3002\u4e5f\u7b97\u662f\u4e00\u6b21\u96be\u5f97\u7684\u7ecf\u5386\uff0c\u4e0b\u6b21\u4e0d\u77e5\u9053\u5230\u4ec0\u4e48\u65f6\u5019\u4e86\u3002\uff08PS\uff1a\u5c01\u9762\u56fe\u6765\u81ea @pil0txia \u7684\u9152\u5e97\u5916\u666f\u3002","date":"2024-07-28T22:13:42.000Z","tags":[{"inline":true,"label":"Apache","permalink":"/blog/tags/apache"},{"inline":true,"label":"CocA","permalink":"/blog/tags/coc-a"}],"readingTime":4.486666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"coca-2024","title":"CocA 2024","date":"2024-07-28T22:13:42.000Z","authors":"yuluo","tags":["Apache","CocA"],"keywords":["Apache","CocA","2024"]},"unlisted":false,"prevItem":{"title":"Spring Boot Web \u5e94\u7528\u8bf7\u6c42\u6545\u969c\u6392\u67e5","permalink":"/blog/spring-boot-web-app-request-debug"},"nextItem":{"title":"\u65e0\u9898","permalink":"/blog/life-run"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u4e1c\u65b9\u6b32\u6653\uff0c\u65e9\u65e9\u8d77\u5e8a\u3002\u51c6\u5907\u5c06\u8fd9\u4e09\u5929\u7684 CommunityOverCode Asia 2024 \u7684\u53c2\u4f1a\u7ecf\u5386\u8bb0\u5f55\u4e00\u4e0b\u3002\u4e5f\u7b97\u662f\u4e00\u6b21\u96be\u5f97\u7684\u7ecf\u5386\uff0c\u4e0b\u6b21\u4e0d\u77e5\u9053\u5230\u4ec0\u4e48\u65f6\u5019\u4e86\u3002\uff08PS\uff1a\u5c01\u9762\u56fe\u6765\u81ea [@pil0txia](https://www.pil0txia.com) \u7684\u9152\u5e97\u5916\u666f\u3002\\n\\n## One Day\\n\\n\u8fd9\u4e00\u5b9a\u662f\u4e09\u5929\u5185\u6700`\u5c34\u5c2c`\u7684\u4e00\u5929\uff0c\u524d\u5929\u665a\u4e0a\u5931\u7720\u6ca1\u7761\u7740\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\u8d77\u6765\u8fdf\u4e86\u3002\u6d17\u55fd\u4e86\u4e0b\u901f\u901f\u51fa\u95e8\uff0c\u521a\u5230\u697c\u4e0b\u51c6\u5907\u53bb\u505a\u5730\u94c1\u3002\u5c4b\u6f0f\u504f\u9022\u8fde\u591c\u96e8\uff0c\u7adf\u7136\u4e0b\u96e8\u4e86\u3002\u4e8e\u662f\u4e4e\uff0c\u4e0a\u53bb\u62ff\u4e86\u4e2a\u628a\u4f1e\u3002\u4e00\u770b\u65f6\u95f4\u7adf\u7136\u4e5d\u70b9\u4e86\uff0c\u60f3\u5230\u516b\u70b9\u534a\u5c31\u5f00\u59cb\u7b7e\u5230\u4e86\u3002\u9042\u539f\u5730\u6253\u8f66...\\n\\n\u5230\u4e86\u4e4b\u540e\uff0c\u641e\u4e86\u4e00\u4e2a\u53c2\u4f1a\u724c\u5b50\u3002\u724c\u5b50\u62ff\u5230\u624b\u91cc\u611f\u89c9\u771f\u4e0d\u9519\u3002\ud83d\ude06\\n\\n![CocA 2024 \u53c2\u4f1a\u724c](/img/apache/2024/11.png)\\n\\n\u5370\u8c61\u4e2d\uff0c\u8fdb\u53bb\u4e4b\u540e\uff0c\u5df2\u7ecf\u5230\u4e86 Craig \u5728\u8bb2 Apache@25\u3002\u5168\u7a0b\u82f1\u8bed\uff0c\u542c\u7740\u8fd8\u4e0d\u9519\uff0c\u6bd4\u8d77\u4e4b\u524d Api7 \u5b9e\u4e60\u7684\u5c3c\u6cca\u5c14\u548c\u5370\u5ea6\u8001\u54e5\u7684\u65b9\u8a00\u82f1\u8bed\uff0c\u4e0d\u77e5\u9053\u597d\u4e86\u591a\u5c11\u500d\u3002\ud83e\udd72\\n\\n\u53c2\u4f1a\u9014\u4e2d\uff0c\u4e0e GSOC \u7fa4\u91cc\u7684 [@pil0txia](https://www.pil0txia.com) \u804a\u4e86\u8d77\u6765\uff0c\u7136\u540e\u5c31\u8fc7\u53bb\u4e00\u8d77\u5750\u4e86\u3002\u4e5f\u662f\u804a\u4e86\u5f88\u591a\uff0cBut \u90a3\u5929\u65e9\u4e0a\u611f\u5192\uff0c\u6234\u4e86\u53e3\u7f69\uff0c\u591a\u591a\u5c11\u5c11\u6709\u70b9\u5f71\u54cd\u4ea4\u6d41\u4e86\u3002\u4ee5\u81f3\u4e8e\u4e4b\u540e\u7684\u4e00\u5929\u4e5f\u662f\u5982\u6b64\u3002\u6700\u540e\u4e00\u5929\u597d\u4e86\u4e0d\u5c11\u3002\u7ec8\u4e8e\u662f\u53d6\u4e0b\u4e86\u53e3\u7f69\u3002\\n\\n\u7b2c\u4e00\u5929\u4e2d\u5348\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u548c GSOC \u7fa4\u91cc\u7684\u5c0f\u4f19\u4f34\u4e00\u8d77\u62cd\u4e86\u5408\u7167\uff08\u5fd8\u8bb0\u6ca1\u6709\u6458\u53e3\u7f69...\\n\\n![GSOC](/img/apache/2024/3.png)\\n\\n\u4e0b\u5348\u7684\u5206\u4f1a\u573a\u8bae\u9898\u662f\u5728\u4e00\u697c\u7684\u5fae\u670d\u52a1\u5385\u91cc\u9762\uff0c\u4e5f\u662f\u770b\u5230\u4e86\u719f\u6089\u4f46\u662f\u6ca1\u6709\u89c1\u8fc7\u9762\u7684\u519b\u54e5\uff08\u5218\u519b\uff09\u3002\u56e0\u4e3a\u6ca1\u6709\u8ba4\u51fa\u6765\uff0c\u4ee5\u81f3\u4e8e\u7b2c\u4e8c\u5929\u624d\u53bb\u6253\u4e86\u62db\u547c\u3002\u7136\u540e\u5306\u5306\u5206\u5f00\u3002\uff08\u672c\u6765\u4e5f\u6ca1\u5565\u4e8b\u60c5\uff0c\u6253\u62db\u547c\u4e0d\u5c0f\u5fc3\u770b\u5230\u4e86\u7535\u8111\u5c4f\u5e55\uff0c\u5728\u5199\u4e0b\u5348 Spring Cloud Alibaba AI \u3010\u4e0b\u6587\u7b80\u79f0 SCA AI\u3011 \u7684 PPT\u3002\u770b\u6765\u4e5f\u662f\u4e34\u65f6\u62b1\u4f5b\u811a\u4e86\u3002\\n\\n## Two Day\\n\\n\u7b2c\u4e8c\u5929\u4e5f\u7b97\u662f`\u7279\u6b8a`\u7684\u7ecf\u5386\uff0c\u672c\u6765\u60f3\u591a\u7761\u4f1a\u3002\u638f\u51fa\u624b\u673a\u770b\u4f1a\u8bae\u65e5\u7a0b\uff0c\u600e\u4e48\u963f\u91cc\u4e91\u4e13\u573a\u7684 SCA AI \u6f14\u8bb2\u5728\u65e9\u4e0a\uff1femmm...\\n\\n\u7136\u540e\u5306\u5306\u53bb\u8d76\u5730\u94c1\u3002\u5230\u4e86\u4e4b\u540e\uff0c\u95ee\u4e86\u4f55\u4eae\uff0c\u65f6\u95f4\u6539\u5230\u4e0b\u5348\uff0c\u8fd8\u662f\u5728\u4e4b\u524d\u7684\u5fae\u670d\u52a1\u5385\u4e3e\u884c\u3002\u5fc3\u91cc\u90c1\u95f7\uff0c\u53bb\u5403\u4e86\u996d\uff0c\u627e\u4e86\u4e2a\u7a7a\u4f1a\u8bae\u5385\u6253\u6e38\u620f\u5230\u4e0b\u5348\u4e00\u70b9\u3002\u53c8\u7ea6\u4e0a\u4e86 [@pil0txia](https://www.pil0txia.com) \u53bb\u4e8c\u697c\u7ad9\u53f0\u8585\u4e86\u4e00\u888b\u5b50\u7eaa\u5ff5\u54c1\u3002\\n\\n![\u7b2c\u4e8c\u5929\u7ad9\u53f0\u7eaa\u5ff5\u54c1](/img/apache/2024/12.jpg)\\n\\n\u4e2d\u9014\u548c [@pil0txia](https://www.pil0txia.com) \u4e00\u8d77\uff0c\u4ee5\u81f3\u4e8e\u4e5f\u88ab\u5f53\u6210\u4e86`\u5c0f\u7ea2\u4e66\u7684\u8001\u5e08`\u3002\ud83e\udd23\\n\\n\u5b8c\u4e86\u4e4b\u540e\uff0c\u8d76\u53bb\u963f\u91cc\u4e91\u7684\u4f1a\u573a\uff0c\u770b\u519b\u54e5\u7684 SCA AI\u3002\u6ca1\u60f3\u5230\u53c8\u6362\u4e86\u4f4d\u7f6e...\\n\\n\u627e\u5230\u4f1a\u8bae\u5385\u4f4d\u7f6e\uff0c\u8fdb\u53bb\u5750\u7740\uff0c\u519b\u54e5\u5bf9\u6211\u8bf4\uff1a\u4eca\u5929\u8fd9\u4e2a\u672c\u6765\u5e94\u8be5\u4f60\u53bb\u8bb2\uff08\ud83d\ude06\uff09\u6211\u56de\u7b54\u8bf4\u8d44\u5386\u4e0d\u591f\uff0c\u8eab\u4efd\u4e0d\u5408\u9002\uff0c\u8fd8\u662f\u5e94\u8be5\u519b\u54e5\u8bb2\u3002\u7136\u540e\u4ed4\u7ec6\u542c\u5b8c\u4e86 SCA AI \u7684\u6f14\u8bb2\uff0c\u867d\u7136 SCA AI \u7684\u4ee3\u7801\u662f\u6211\u5199\u7684\uff0c\u4f46\u662f\u542c\u519b\u54e5\u8bb2\uff0c\u4e5f\u6536\u83b7\u5f88\u591a\u3002\u7279\u522b\u662f\u5bf9 Spring AI \u63a5\u53e3\u7684\u62bd\u8c61\u89e3\u91ca\u3002\u56e0\u4e3a\u5750\u7684\u9760\u540e\uff0c\u62cd\u7684\u7167\u7247\u4e0d\u6e05\u6670\uff0c\u5c31\u4e0d\u653e\u4e86\u63a5\u53e3\u7167\u7247\u4e86\u3002\\n\\n![\u519b\u54e5\u5728\u8bb2 SCA AI](/img/apache/2024/4.png)\\n\\n## Three Day\\n\\n\u7b2c\u4e09\u5929\u53bb\u7684\u8fdf\u4e86\u4e9b\uff0c\u5230\u4f1a\u573a\u90fd\u4e24\u70b9\u4e86\u3002\u4e5f\u662f\u94c1\u4e86\u5fc3\u8981\u5403\u5230\u4f1a\u573a\u7684\u8336\u6b47\u70b9\u5fc3\u3002\u5728\u4e8c\u697c\u8f6c\u60a0\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u65f6\u95f4\u5230\u5c31\u53bb room4 \u524d\u9762\u7684\u5403\u5230\u4e86\u3002\uff08\u633a\u7cbe\u81f4...\\n\\n![\u8336\u6b47\u70b9\u5fc3](/img/apache/2024/5.png)\\n\\n\u56e0\u4e3a [@pil0txia](https://www.pil0txia.com) \u5728\u542c APISIX \u7684\u6f14\u8bb2\uff0c\u5e2e\u4ed6\u63d0\u524d\u62ff\u4e86\u4efd\u3002\u4e4b\u540e\u4e5f\u662f\u4e00\u8d77\u62cd\u4e86\u5f20\u5408\u7167\u3002\\n\\n![\u7b2c\u4e09\u5929\u8336\u6b47\u5408\u7167](/img/apache/2024/7.png)\\n\\n\u4e2d\u9014\u8e6d\u8fdb\u53bb room4 \u62cd\u4e86\u5f20\u5206\u4f1a\u573a\u5408\u7167\u3002\ud83e\udd23\\n\\n![Gateway & observability \u4f1a\u573a\u5408\u7167](/img/apache/2024/8.png)\\n\\n\u4e4b\u540e\u94d6\u6734\u5927\u4f6c\u8bf4\u4ed6\u7b2c\u4e09\u5929\u8981\u6765\uff0c\u770b\u4e86\u65e5\u7a0b\u3002\u7adf\u7136\u4e5f\u5728 room4 \u6f14\u8bb2\u3002\u771f\u5de7\uff0c\u8fdb\u53bb\u542c\u4e86\u94d6\u6734\u5206\u4eab\u7684 `WebServe/Tomcat \u53ef\u89c2\u6d4b` \u8bae\u9898\uff0c\u4ecb\u7ecd\u7684\u662f `Graalvm` \u5e94\u7528\u7684\u53ef\u89c2\u6d4b\u6027\uff0c\u6280\u672f\u6027\u633a\u5f3a\uff0c\u819c\u62dc\u4e00\u6ce2\uff01\ud83d\ude06\\n\\n![\u94d6\u6734\u53ef\u89c2\u6d4b\u6027\u6f14\u8bb2](/img/apache/2024/9.png)\\n\\n\u7ed3\u675f\u4e86\u4e4b\u540e\uff0c\u8fc7\u53bb\u52a0\u4e86\u5fae\u4fe1\u3002\u4e4b\u540e\u51fa\u53bb\u804a\u4e86\u4f1a\u3002\u4e3b\u8981\u662f SCA \u793e\u533a\u548c\u627e\u5de5\u4f5c\u4e0a\uff0c\u8fd8\u6709\u600e\u4e48\u5728\u5f00\u6e90\u548c\u65e5\u5e38\u7684\u5de5\u4f5c\u4e4b\u95f4\u5747\u8861\u81ea\u5df1\u3002\u5b66\u5230\u4e86\u4e0d\u5c11\uff08\u94d6\u6734\u5927\u4f6c\u548c\u6211\u8111\u6d77\u4e2d\u8111\u8865\u7684\u6837\u5b50\u5dee\u4e0d\u591a\u3002\\n\\n\u804a\u5b8c\u4e86\u4e4b\u540e\uff0c[@pil0txia](https://www.pil0txia.com) \u6765\u4e86\uff0c\u6211\u8bf4\u60f3\u548c Justin \u53bb\u62cd\u5f20\u7167\u3002\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u5f00\u53e3\u3002\u82f1\u8bed\u80fd\u542c\u61c2\u4e00\u4e9b\uff0c\u4f46\u662f\u8bf4\u4e0d\u51fa\u6765\uff0c\u5728 [@pil0txia](https://www.pil0txia.com) \u6002\u607f\u4e0b\uff0c\u51fa\u53bb\u4e86\u5916\u9762\u3002\u6559\u4e86\u6211\u51e0\u53e5\uff0c\u8ba9\u6211\u8fd9\u6837\u8bf4\u3002\u4f46\u662f\u771f\u4e0d\u77e5\u9053\u600e\u4e48\u5f00\u53e3\uff08\u53ef\u80fd\u662f\u5934\u4e00\u6b21\u6b63\u5f0f\u5408\u5916\u56fd\u4eba\u8bf4\u8bdd\uff0c\u8bf4\u4e0d\u51fa\u53e3\u3002\u7136\u540e\u6211\u51c6\u5907\u8fd9\u6837\u8bf4\uff1a`hi, justin, Can I take a photo with you, very happy to meet you.`\u3002\u6211\u8fd8\u5728\u60f3\uff0c[@pil0txia](https://www.pil0txia.com) \u5df2\u7ecf\u62c9\u7740\u6211\u8fc7\u53bb\u4e86\uff0c\u6709\u70b9\u5c40\u4fc3\u3002\u62cd\u5b8c\u4e4b\u540e\uff0c\u75af\u72c2\u9053\u8c22\u7136\u540e\u8dd1\u5f00\u3002\ud83e\udd72\\n\\n![\u548c justin \u7684\u5408\u5f71](/img/apache/2024/10.png)\\n\\n## latest\\n\\n\u6700\u540e\uff0c\u975e\u5e38\u611f\u8c22\u94d6\u6734\uff08\u9976\u5b50\u660a\uff09\u5927\u4f6c\u7684\u793e\u533a\u8d5e\u52a9\u7968\uff08\u5c31\u662f\u6ca1\u6709\u641e\u5230 Apache \u7684\u77ed\u8896\uff0c\u53c2\u4f1a\u6700\u9057\u61be\u7684\u4e8b\u60c5\uff01\uff01\uff01\\n\\n\u611f\u8c22 Apache \u57fa\u91d1\u4f1a\u4e3b\u529e\u65b9\u7684\u52aa\u529b\uff0c\u5c06 CommunityOverCode \u529e\u7684\u5982\u6b64\u4e4b\u597d\u3002\u5e0c\u671b\u4e0b\u6b21\u6709\u673a\u4f1a\u80fd\u591f\u7ee7\u7eed\u53c2\u4e0e\u3002\u4e5f\u611f\u8c22\u6211\u81ea\u5df1\uff0c\u52aa\u529b\u6210\u4e3a SCA \u7684 committer\u3002\u80fd\u591f\u8ba4\u8bc6\u94d6\u6734\uff0c\u83b7\u5f97\u8fd9\u6b21\u53c2\u4f1a\u673a\u4f1a\u3002\\n\\n\u70ed\u7231 Coding\uff0c\u70ed\u7231\u5f00\u6e90\u3002\u4e00\u76f4\u5e0c\u671b\u80fd\u591f\u5728\u81ea\u5df1\u719f\u6089\u7684\u9886\u57df\u7559\u4e0b\u4e00\u4e9b\u4e1c\u897f\u3002\u4e4b\u540e\u4f1a\u7ee7\u7eed\u53c2\u4e0e\u5f00\u6e90\uff0c\u4e0b\u4e00\u4e2a\u76ee\u6807\u6210\u4e3a Apache committer\uff0c\u8ba4\u8bc6\u66f4\u591a\u5fd7\u540c\u9053\u5408\u7684\u4eba\u3002\\n\\n![\u4f59\u676d\u508d\u665a\u666f\u8272](/img/apache/2024/13.png)\\n\\n<br />\\n\\n<div style={{float: \'right\'}}>\\n\u676d\u5dde\u4f59\u676d 2024/7/29\\n</div>"},{"id":"life-run","metadata":{"permalink":"/blog/life-run","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/essay/\u8ffd\u5bfb\u771f\u6b63\u7684\u81ea\u5df1.md","source":"@site/blog/essay/\u8ffd\u5bfb\u771f\u6b63\u7684\u81ea\u5df1.md","title":"\u65e0\u9898","description":"&emsp;&emsp; \u4ece 24 \u5e74\u7684 5 \u6708\u4efd\u5f00\u59cb\u5230\u73b0\u5728\uff0c\u4ece\u5927\u5b66\u6bd5\u4e1a\u7684\u4e00\u7cfb\u5217\u7410\u4e8b\u5230\u73b0\u5728\u8eab\u5c45\u4f59\u676d\u627e\u5de5\u4f5c\u7684\u7a98\u8feb\u3002\u65e0\u7591\u5bf9\u6211\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6311\u6218\u3002\u4e4b\u524d\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u56e0\u4e3a\u4e00\u4e9b\u7279\u6b8a\u7684\u539f\u56e0\u3002\u65e9\u65e9\u7684\u5c31\u8dd1\u8def\u4e86\u3002\u4e8b\u51fa\u6709\u56e0\uff0c\u4e5f\u4e0d\u597d\u518d\u591a\u53d9\u8ff0\u4e9b\u4ec0\u4e48\uff0c\u6211\u66f4\u613f\u610f\u76f8\u4fe1\u8fd9\u662f\u547d\u4e2d\u6ce8\u5b9a\u7684\u4e8b\u60c5\u3002\u56e0\u4e3a\u5728\u6211\u7684\u8bb0\u5fc6\u4e2d\uff0c\u6bcf\u6bcf\u5230\u4e86\u6bd5\u4e1a\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53d1\u751f\u4e00\u4ef6\u5bf9\u6211\u5f71\u54cd\u5f88\u5927\u7684\u4e8b\u60c5\u3002\u663e\u7136\uff0c\u8fd9\u6b21\u6bd5\u4e1a\u4e5f\u4e0d\u4f8b\u5916\u3002","date":"2024-07-24T22:28:38.000Z","tags":[{"inline":true,"label":"\u968f\u7b14","permalink":"/blog/tags/\u968f\u7b14"}],"readingTime":2.65,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"life-run","title":"\u65e0\u9898","date":"2024-07-24T22:28:38.000Z","authors":"yuluo","tags":["\u968f\u7b14"],"keywords":["life"]},"unlisted":false,"prevItem":{"title":"CocA 2024","permalink":"/blog/coca-2024"},"nextItem":{"title":"Windows \u7535\u8111\u90e8\u7f72 ollama3 \u5e76\u5b89\u88c5 llama3","permalink":"/blog/windows-deploy-ollama3-install-llama3"}},"content":"\x3c!-- truncate --\x3e\\n\\n&emsp;&emsp; \u4ece 24 \u5e74\u7684 5 \u6708\u4efd\u5f00\u59cb\u5230\u73b0\u5728\uff0c\u4ece\u5927\u5b66\u6bd5\u4e1a\u7684\u4e00\u7cfb\u5217\u7410\u4e8b\u5230\u73b0\u5728\u8eab\u5c45\u4f59\u676d\u627e\u5de5\u4f5c\u7684\u7a98\u8feb\u3002\u65e0\u7591\u5bf9\u6211\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6311\u6218\u3002\u4e4b\u524d\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u56e0\u4e3a\u4e00\u4e9b\u7279\u6b8a\u7684\u539f\u56e0\u3002\u65e9\u65e9\u7684\u5c31\u8dd1\u8def\u4e86\u3002\u4e8b\u51fa\u6709\u56e0\uff0c\u4e5f\u4e0d\u597d\u518d\u591a\u53d9\u8ff0\u4e9b\u4ec0\u4e48\uff0c\u6211\u66f4\u613f\u610f\u76f8\u4fe1\u8fd9\u662f\u547d\u4e2d\u6ce8\u5b9a\u7684\u4e8b\u60c5\u3002\u56e0\u4e3a\u5728\u6211\u7684\u8bb0\u5fc6\u4e2d\uff0c\u6bcf\u6bcf\u5230\u4e86\u6bd5\u4e1a\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53d1\u751f\u4e00\u4ef6\u5bf9\u6211\u5f71\u54cd\u5f88\u5927\u7684\u4e8b\u60c5\u3002\u663e\u7136\uff0c\u8fd9\u6b21\u6bd5\u4e1a\u4e5f\u4e0d\u4f8b\u5916\u3002\\n\\n&emsp;&emsp;\u8fd9\u6bb5\u65f6\u95f4\u603b\u662f\u5728\u627e\u5de5\u4f5c\uff0c\u770b\u4e66\uff0c\u5f00\u6e90\u4ee3\u7801\u4e09\u4ef6\u4e8b\u60c5\u4e2d\u5faa\u73af\u5f80\u590d\uff0c\u65e5\u5b50\u4e5f\u4e00\u5929\u5929\u7684\u8fc7\u53bb\u3002\u627e\u5de5\u4f5c\u7684\u4e8b\u60c5\u4e5f\u6ca1\u6709\u4efb\u4f55\u8fdb\u5c55\uff0c\u56e0\u4e3a\u672c\u8eab\u5b66\u5386\u6ca1\u6709\u4efb\u4f55\u4f18\u52bf\u52a0\u4e4b\u73b0\u5728\u8fd9\u4e2a\u7279\u6b8a\u7684\u65f6\u95f4\u6bb5\uff0c\u5de5\u4f5c\u66f4\u96be\u627e\u4e86\u3002\\n\\n&emsp;&emsp;\u552f\u4e8c\u80fd\u8ba9\u6211\u63d0\u8d77\u4e9b\u5174\u8da3\u7684\u4e8b\u60c5\uff0c\u9664\u4e86\u4ee3\u7801\u5c31\u662f\u770b\u4e66\u3002\u8bfb\u4e86\u300a\u6d3b\u7740\u300b\u548c\u300a\u74e6\u5c14\u767b\u6e56\u300b\u3002\u5c31\u6211\u7684\u611f\u53d7\u6765\u8bf4\uff0c\u8fd9\u4e24\u672c\u4e66\u6709\u7740\u5f02\u66f2\u540c\u5de5\u4e4b\u5904\u3002\u90fd\u5728\u8bf4\u4e00\u4e2a\u4eba\u7684\u4eba\u751f\u3002\\n\\n&emsp;&emsp;\u300a\u6d3b\u7740\u300b\u4e2d\uff0c\u4f59\u534e\u8001\u5e08\u4ee5\u7b2c\u4e09\u8005\u7684\u8eab\u4efd\u3002\u4ece\u798f\u8d35\u7684\u53e3\u4e2d\uff0c\u4e86\u89e3\u4e86\u798f\u8d35\u7684\u4e00\u751f\u3002\u4ece\u4e00\u4e2a\u5730\u4e3b\uff0c\u5386\u7ecf\u5404\u79cd\u4eba\u751f\u7ecf\u5386\u5230\u6700\u540e\u4e00\u4e2a\u666e\u901a\u7684\u79cd\u5730\u4eba\uff0c\u5386\u7ecf\u78e8\u96be\u3002\u798f\u8d35\u7684\u4e00\u751f\uff0c\u53d1\u4eba\u6df1\u7701\uff0c\u4eba\u8fd9\u4e00\u751f\u5230\u5e95\u8981\u6d3b\u51fa\u4e2a\u4ec0\u4e48\u6837\u5b50\u6765\uff1f\u8fd9\u4e5f\u662f\u6211\u5728\u60f3\u7684\u95ee\u9898\u3002\u6211\u5bb6\u5728\u5927\u897f\u5317\uff0c\u90a3\u91cc\u7684\u4eba\u5c31\u603b\u662f\u60f3\u7740\u8003\u4e2a\u6709\u7f16\u5236\u7684\u5de5\u4f5c\uff0c\u5b89\u5b89\u7a33\u7a33\u4e00\u8f88\u5b50\u3002\u5305\u62ec\u6211\u7684\u7236\u4eb2\u4e5f\u662f\u8fd9\u79cd\u60f3\u6cd5\u3002\u6211\u4e5f\u65f6\u5e38\u5728\u60f3\uff0c\u6211\u5230\u5e95\u60f3\u8981\u600e\u4e48\u6837\u7684\u751f\u6d3b\u3002\u5927\u5b66\u5b66\u4e86\u56db\u5e74\u7684\u8ba1\u7b97\u673a\uff0c\u5230\u5927\u5b66\u6bd5\u4e1a\uff0c\u6000\u7740\u5bf9\u8ba1\u7b97\u673a\u6280\u672f\u7684\u6ee1\u8154\u70ed\u8840\u3002\u76f4\u5230\u5982\u5728\u4eca\u7684\u8ba1\u7b97\u673a\u5c31\u4e1a\u73af\u5883\u4e0b\u627e\u4e0d\u5230\u4e00\u4e2a\u53ef\u4ee5\u5b89\u8eab\u7acb\u547d\u7684\u5de5\u4f5c\u3002\u8fd9\u6bb5\u65f6\u95f4\u91cc\u4e5f\u5bf9\u81ea\u5df1\u4ea7\u751f\u4e86\u52a8\u6447\u3002\u6216\u8bb8\u56de\u5bb6\u91cc\u8001\u8001\u5b9e\u5b9e\u8003\u4e2a\u8001\u5e08\u7684\u7f16\u5236\u624d\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u4f46\u662f\u5f53\u4e00\u4e2a\u5e73\u51e1\u7684\u8001\u5e08\uff0c\u4e00\u8f88\u5b50\u5c31\u8fd9\u6837\u4e0b\u53bb\u3002\u4e0d\u662f\u6211\u60f3\u8981\u7684\u751f\u6d3b\u3002\u5b66\u4e86\u51e0\u5e74\u8ba1\u7b97\u673a\uff0c\u5fc3\u91cc\u4e5f\u6709\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684\u6267\u5ff5\uff0c\u60f3\u521b\u9020\u4e9b\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u80fd\u88ab\u8bb8\u591a\u4eba\u7528\u7684\u4e1c\u897f......\\n\\n&emsp;&emsp;\u300a\u74e6\u5c14\u767b\u6e56\u300b\u4e2d\u4f5c\u8005\u4ee5\u8d85\u7136\u7269\u5916\u7684\u7cbe\u795e\u72b6\u6001\uff0c\u72ec\u5c45\u74e6\u5c14\u767b\u6e56\u7554\uff0c\u548c\u5927\u81ea\u7136\u4e3a\u4f34\u3002\u63a2\u7d22\u751f\u547d\u7684\u771f\u8c1b\uff0c\u80fd\u591f\u611f\u53d7\u5230\u4f5c\u8005\u5185\u5fc3\u7684\u5fc3\u65e0\u65c1\u9a9b\uff0c\u5b81\u9759\u81f4\u8fdc\u3002\u4ee5\u6211\u73b0\u5728\u7684\u7cbe\u795e\u72b6\u6001\uff0c\u72b9\u4e0d\u53ca\u4e5f\u3002\u73b0\u5728\u603b\u662f\u5185\u5fc3\u5145\u6ee1\u70e6\u8e81......\\n\\n&emsp;&emsp;\u6bcf\u5929\u7684\u65f6\u95f4\u9664\u4e86\u5237\u5237\u77ed\u89c6\u9891\uff0c\u66f4\u591a\u7684\u65f6\u95f4\u82b1\u5728\u4e86\u5199\u4ee3\u7801\u4e0a\u3002\u8fd9\u4e00\u4e2a\u6708\uff0c\u7ed9 apache \u7684\u9879\u76ee\u63d0\u4e86\u8bb8\u591a\u5355\u5143\u6d4b\u8bd5\u7684 pr\uff0c\u5f53\u7136\u4e0d\u80fd\u7eaf\u7cb9\u7684\u8bf4\u662f\u4e3a\u4e86\u70ed\u7231\u5f00\u6e90\uff0c\u4e5f\u5939\u5e26\u7740\u4e00\u4e9b\u79c1\u5fc3\uff0c\u60f3\u6df7\u8fdb\u53bb Apache \u793e\u533a\uff0c\u63d0\u5347\u4e0b\u81ea\u5df1\u7684\u8f6f\u5b9e\u529b\u3002\u4f46\u662f\u66f4\u591a\u7684\u662f\u60f3\u7559\u4e0b\u4e00\u4e9b\u81ea\u5df1\u7684\u75d5\u8ff9\u3002\\n\\n&emsp;&emsp;\u5f80\u540e\u7ee7\u7eed\u627e\u5de5\u4f5c......\\n\\n---\\n\\n<div style={{ float: \'right\' }}>2024/07/24 \u676d\u5dde\u4f59\u676d</div>"},{"id":"windows-deploy-ollama3-install-llama3","metadata":{"permalink":"/blog/windows-deploy-ollama3-install-llama3","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/windows-\u5b89\u88c5-ollama3.md","source":"@site/blog/AI-large-models/windows-\u5b89\u88c5-ollama3.md","title":"Windows \u7535\u8111\u90e8\u7f72 ollama3 \u5e76\u5b89\u88c5 llama3","description":"\u90e8\u7f72\u4e2d\u4e3a\u4e86\u5c3d\u53ef\u80fd\u51cf\u5c11\u5bf9\u672c\u5730\u73af\u5883\u7684\u6c61\u67d3\uff0c\u4f7f\u7528 Docker \u5b89\u88c5\uff01","date":"2024-07-18T16:36:22.000Z","tags":[{"inline":true,"label":"windows","permalink":"/blog/tags/windows"},{"inline":true,"label":"AI","permalink":"/blog/tags/ai"}],"readingTime":2.3066666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"windows-deploy-ollama3-install-llama3","title":"Windows \u7535\u8111\u90e8\u7f72 ollama3 \u5e76\u5b89\u88c5 llama3","date":"2024-07-18T16:36:22.000Z","authors":"yuluo","tags":["windows","AI"],"keywords":["windows","ollama3","llama3"]},"unlisted":false,"prevItem":{"title":"\u65e0\u9898","permalink":"/blog/life-run"},"nextItem":{"title":"Spring Cloud Alibaba AI \u5feb\u901f\u4f53\u9a8c","permalink":"/blog/spring-cloud-alibaba-ai-use"}},"content":"\x3c!-- truncate --\x3e\\n\\n> \u90e8\u7f72\u4e2d\u4e3a\u4e86\u5c3d\u53ef\u80fd\u51cf\u5c11\u5bf9\u672c\u5730\u73af\u5883\u7684\u6c61\u67d3\uff0c\u4f7f\u7528 Docker \u5b89\u88c5\uff01\\n\\ngithub: https://github.com/ollama/ollama\\n\\n## \u51c6\u5907\u90e8\u7f72\u6587\u4ef6\\n\\n```yml\\nversion: \'3.8\'\\n\\nservices:\\n   ollama:\\n     volumes:\\n       - ./models:/root/.ollama  # \u5c06\u672c\u5730\u6587\u4ef6\u5939\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 /root/.ollama \u76ee\u5f55 \uff08\u6a21\u578b\u4e0b\u8f7d\u4f4d\u7f6e\uff09\\n     container_name: ollama\\n     pull_policy: always\\n     tty: true\\n     restart: unless-stopped\\n     image: ollama/ollama:latest\\n     ports:\\n       - 11434:11434  # Ollama API \u7aef\u53e3\\n\\n   open-webui:\\n     build:\\n       context: .\\n       args:\\n         OLLAMA_BASE_URL: \'/ollama\'\\n       dockerfile: Dockerfile\\n     image: ghcr.io/open-webui/open-webui:main\\n     container_name: open-webui\\n     volumes:\\n       - ./open-webui:/app/backend/data  # \u524d\u7aef\u9875\u9762\u6570\u636e\u6302\u8f7d\u4f4d\u7f6e\\n     depends_on:\\n       - ollama\\n     ports:\\n       - ${OPEN_WEBUI_PORT-3005}:8080\\n     environment:\\n       - \'OLLAMA_BASE_URL=http://ollama:11434\'\\n       - \'WEBUI_SECRET_KEY=\'\\n     extra_hosts:\\n       - host.docker.internal:host-gateway\\n     restart: unless-stopped\\n```\\n\\n\u4e4b\u540e\u4f7f\u7528 `docker compose up -d` \u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0cdocker images pull \u6210\u529f\u3002\u5373\u53ef\u6267\u884c\u4e0b\u4e00\u6b65\u3002\\n\\n## \u4e0b\u8f7d LLM \u6a21\u578b\\n\\nLLM \u6a21\u578b\u53c2\u8003\uff1a\\n\\n| **Model**          | **Parameters** | **Size** | **Download**                   |\\n| ------------------ | -------------- | -------- | ------------------------------ |\\n| Llama 3            | 8B             | 4.7GB    | `ollama run llama3`            |\\n| qwen               | 4b             | 2.3G     | `ollama run qwen:4b`           |\\n| Llama 3            | 70B            | 40GB     | `ollama run llama3:70b`        |\\n| Phi-3              | 3,8B           | 2.3GB    | `ollama run phi3`              |\\n| Mistral            | 7B             | 4.1GB    | `ollama run mistral`           |\\n| Neural Chat        | 7B             | 4.1GB    | `ollama run neural-chat`       |\\n| Starling           | 7B             | 4.1GB    | `ollama run starling-lm`       |\\n| Code Llama         | 7B             | 3.8GB    | `ollama run codellama`         |\\n| Llama 2 Uncensored | 7B             | 3.8GB    | `ollama run llama2-uncensored` |\\n| LLaVA              | 7B             | 4.5GB    | `ollama run llava`             |\\n| Gemma              | 2B             | 1.4GB    | `ollama run gemma:2b`          |\\n| Gemma              | 7B             | 4.8GB    | `ollama run gemma:7b`          |\\n| Solar              | 10.7B          | 6.1GB    | `ollama run solar`             |\\n\\n\u8fd9\u91cc\u9009\u62e9\u6700\u5c0f\u4f53\u79ef\u4e14\u6700\u597d\u7528\u7684\u6a21\u578b\uff1a llama3:4b \u6a21\u578b\uff0cqwen:4b \u6a21\u578b\u8d28\u91cf\u5f88\u5dee\u3002\\n\\n```shell\\nollama3 run llama3\\n```\\n\\n\u6210\u529f\u4e4b\u540e\u4f1a\u770b\u5230\u4e0b\u9762\u8fd9\u6837\uff1a\\n\\n```shell\\nroot@c5e5ff20a533:/# ollama run llama3\\npulling manifest \\npulling 6a0746a1ec1a... 100% \u2595\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f 4.7 GB                         \\npulling 4fa551d4f938... 100% \u2595\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  12 KB                         \\npulling 8ab4849b038c... 100% \u2595\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  254 B                         \\npulling 577073ffcc6c... 100% \u2595\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  110 B                         \\npulling 3f8eb4da87fa... 100% \u2595\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  485 B                         \\nverifying sha256 digest \\nwriting manifest \\nremoving any unused layers \\nsuccess \\n>>> \u4f60\u597d\\n\ud83d\udc96 \u4f60\u597d\uff01\u6211\u5f88\u9ad8\u5174\u5730\u770b\u5230\u4f60\u7684\u6d88\u606f\uff01 \ud83d\ude0a\\n\\n>>> \u4f60\u80fd\u4ecb\u7ecd\u4e0b\u81ea\u5df1\u5417\\n\ud83d\ude0a I\'d be happy to introduce myself.\\n\\nMy name is LLaMA, and I\'m a large language model trained by Meta AI. I\'m a computer program designed to understand and generate human-like text, so we can have \\nconversations like this one! \ud83e\udd16\\n\\nI was trained on a massive dataset of text from the internet, which allows me to learn about various topics, including history, science, culture, and more. This \\ntraining enables me to answer questions, provide information, and even engage in creative writing or storytelling.\\n\\nAs a conversational AI, my goal is to assist and entertain users like you. I\'m designed to be helpful, friendly, and respectful, so please feel free to ask me \\nanything or share your thoughts with me! \ud83d\udcac\\n```\\n\\n\u4e0b\u8f7d\u540e\u7684\u6a21\u578b\u5c06\u88ab\u6302\u8f7d\u5230\u5728 `./models` \u6587\u4ef6\u4e2d\u3002\\n\\n## \u8bbf\u95ee\\n\\n\u4e0a\u9762\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u901a\u8fc7 run \u7684\u65b9\u5f0f\u3002\u4e0b\u9762\u4ecb\u7ecd\u901a\u8fc7 web ui \u548c api \u7684\u65b9\u5f0f\u8bbf\u95ee\u3002\\n\\n### API\\n\\n```shell\\ncurl http://localhost:11434/api/generate -d \'{\\n    \\"model\\":\\"llama3\\",\\n    \\"prompt\\": \\"\u8bf7\u5206\u522b\u7ffb\u8bd1\u6210\u4e2d\u6587\u3001\u97e9\u6587\u3001\u65e5\u6587 -> Meta Llama 3: The most capable openly available LLM to date\\",\\n    \\"stream\\": false\\n}\'\\n\\ncurl http://localhost:11434/api/chat -d \'{\\n  \\"model\\": \\"llama3\\",\\n  \\"messages\\": [\\n    {\\n      \\"role\\": \\"user\\",\\n      \\"content\\": \\"why is the sky blue?\\"\\n    }\\n  ],\\n  \\"stream\\": true\\n}\'\\n```\\n\\n### Web ui\\n\\n\u6d4f\u89c8\u5668\u8bbf\u95ee localhost:3005\u5373\u53ef\u3002\\n\\n![image-20240718162933068](/img/ai/ai-1.png)"},{"id":"spring-cloud-alibaba-ai-use","metadata":{"permalink":"/blog/spring-cloud-alibaba-ai-use","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/Spring-Cloud-Alibaba-AI-\u5feb\u901f\u4f53\u9a8c.md","source":"@site/blog/AI-large-models/Spring-Cloud-Alibaba-AI-\u5feb\u901f\u4f53\u9a8c.md","title":"Spring Cloud Alibaba AI \u5feb\u901f\u4f53\u9a8c","description":"Spring Cloud Alibaba AI \u5df2\u7ecf\u8fc1\u79fb\u5230 Spring AI Alibaba.","date":"2024-04-30T21:01:08.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"Spring Cloud Alibaba","permalink":"/blog/tags/spring-cloud-alibaba"}],"readingTime":4.253333333333333,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-cloud-alibaba-ai-use","title":"Spring Cloud Alibaba AI \u5feb\u901f\u4f53\u9a8c","date":"2024-04-30T21:01:08.000Z","authors":"yuluo","tags":["AI","Spring Cloud Alibaba"],"keywords":["AI","Spring Cloud Alibaba","Spring AI Alibaba"]},"unlisted":false,"prevItem":{"title":"Windows \u7535\u8111\u90e8\u7f72 ollama3 \u5e76\u5b89\u88c5 llama3","permalink":"/blog/windows-deploy-ollama3-install-llama3"},"nextItem":{"title":"2023 \u603b\u7ed3","permalink":"/blog/2023-year-summary"}},"content":"> **Spring Cloud Alibaba AI \u5df2\u7ecf\u8fc1\u79fb\u5230 Spring AI Alibaba.**\\n\\n\x3c!-- truncate --\x3e\\n\\n## Spring Cloud Alibaba AI \u5feb\u901f\u4f53\u9a8c\\n\\n[Spring AI](https://docs.spring.io/spring-ai/reference/0.8-SNAPSHOT/index.html) \u65e8\u5728\u7b80\u5316\u5305\u542b\u4eba\u5de5\u667a\u80fd\u76f8\u5173\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u3002\\n\\nSpring AI \u7684\u6838\u5fc3\u662f\u63d0\u4f9b\u62bd\u8c61\uff0c\u4f5c\u4e3a\u5f00\u53d1 AI \u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u7840\u3002\u8fd9\u4e9b\u62bd\u8c61\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ea\u9700\u6781\u5c11\u7684\u4ee3\u7801\u6539\u52a8\u5373\u53ef\u8f7b\u677e\u5b9e\u73b0\u5404\u4e2a\u5927\u6a21\u578b\u4e4b\u95f4\u7684\u5207\u6362\u3002\\n\\nSpring AI \u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a\\n\\n- \u652f\u6301\u6240\u6709\u4e3b\u8981\u6a21\u578b\u63d0\u4f9b\u5546\uff0c\u4f8b\u5982 OpenAI\u3001Microsoft\u3001Amazon\u3001Google \u548c Huggingface\u3002\\n- \u652f\u6301\u7684\u6a21\u578b\u7c7b\u578b\u5305\u62ec\u201c\u804a\u5929\u201d\u548c\u201c\u6587\u672c\u5230\u56fe\u50cf\u201d\uff0c\u8fd8\u6709\u66f4\u591a\u6a21\u578b\u7c7b\u578b\u6b63\u5728\u5f00\u53d1\u4e2d\u3002\\n- \u8de8 AI \u63d0\u4f9b\u5546\u7684\u53ef\u79fb\u690d API\uff0c\u7528\u4e8e\u804a\u5929\u548c\u5d4c\u5165\u6a21\u578b\u3002\u652f\u6301\u540c\u6b65\u548c\u6d41 API \u9009\u9879\u3002\u8fd8\u652f\u6301\u4e0b\u62c9\u8bbf\u95ee\u6a21\u578b\u7279\u5b9a\u529f\u80fd\u3002\\n- AI \u6a21\u578b\u8f93\u51fa\u5230 POJO \u7684\u6620\u5c04\u3002\\n- \u652f\u6301\u6240\u6709\u4e3b\u8981\u77e2\u91cf\u6570\u636e\u5e93\u63d0\u4f9b\u5546\uff0c\u4f8b\u5982 Azure \u77e2\u91cf\u641c\u7d22\u3001Chroma\u3001Milvus\u3001Neo4j\u3001PostgreSQL/PGVector\u3001PineCone\u3001Qdrant\u3001Redis \u548c Weaviate\\n- \u8de8 Vector Store \u63d0\u4f9b\u5546\u7684\u53ef\u79fb\u690d API\uff0c\u5305\u62ec\u540c\u6837\u53ef\u79fb\u690d\u7684\u65b0\u9896\u7684\u7c7b\u4f3c SQL \u7684\u5143\u6570\u636e\u8fc7\u6ee4\u5668 API\u3002\\n- \u51fd\u6570\u8c03\u7528\\n- AI \u6a21\u578b\u548c\u5411\u91cf\u5b58\u50a8\u7684 Spring Boot \u81ea\u52a8\u914d\u7f6e\u548c\u542f\u52a8\u5668\u3002\\n- \u6570\u636e\u5de5\u7a0b\u7684 ETL \u6846\u67b6\\n\\n## Spring Cloud Alibaba AI\\n\\nSpring Cloud Alibaba AI \uff08\u4ee5\u4e0b\u7b80\u79f0 SCA AI\uff09\u57fa\u4e8e Spring AI 0.8.1 \u7248\u672c\u5b8c\u6210\u901a\u4e49\u7cfb\u5217\u5927\u6a21\u578b\u7684\u63a5\u5165\u3002\\n\\nDashScope\u7075\u79ef\u6a21\u578b\u670d\u52a1\u5efa\u7acb\u5728 *\u6a21\u578b\u5373\u670d\u52a1*\uff08Model-as-a-Service\uff0cMaaS\uff09\u7684\u7406\u5ff5\u57fa\u7840\u4e4b\u4e0a\uff0c\u56f4\u7ed5AI\u5404\u9886\u57df\u6a21\u578b\uff0c\u901a\u8fc7\u6807\u51c6\u5316\u7684API\u63d0\u4f9b\u5305\u62ec\u6a21\u578b\u63a8\u7406\u3001\u6a21\u578b\u5fae\u8c03\u8bad\u7ec3\u5728\u5185\u7684\u591a\u79cd\u6a21\u578b\u670d\u52a1\u3002\u3002\\n\\nSCA AI \u76ee\u524d\u652f\u6301\u7684\u6a21\u578b\u4e3b\u8981\u6709\uff1a\u5bf9\u8bdd\u3001\u6587\u751f\u56fe\u3001\u6587\u751f\u8bed\u97f3\uff0c\u66f4\u591a\u529f\u80fd\u7279\u6027\u6b63\u5728\u9002\u914d\u4e2d\u3002\\n\\n## \u5feb\u901f\u4f53\u9a8c\\n\\n### \u521b\u5efa SCA AI \u5e94\u7528\\n\\n\u5728 pom.xml \u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\u914d\u7f6e\uff1a\\n\\n```xml\\n<dependency>\\n    <groupId>com.alibaba.cloud</groupId>\\n    <artifactId>spring-cloud-starter-alibaba-ai</artifactId>\\n</dependency>\\n\\n<dependencyManagement>\\n    <dependencies>\\n        <dependency>\\n            <groupId>com.alibaba.cloud</groupId>\\n            <artifactId>spring-cloud-alibaba-dependencies</artifactId>\\n            <version>${spring.cloud.alibaba.version}</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n    </dependencies>\\n</dependencyManagement>\\n\\n\x3c!-- \u56e0\u4e3a Spring AI \u8fd8\u6ca1\u6709\u6b63\u5f0f\u53d1\u5e03\u5230 maven \u4ed3\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u6b64\u914d\u7f6e\u9879 \u76ee\u524d maven \u4ed3\u5e93\u4e3a\u5047\u7684\u3002\\nissue\uff1ahttps://github.com/spring-projects/spring-ai/issues/537\\n--\x3e\\n<repositories>\\n    <repository>\\n        <id>spring-milestones</id>\\n        <name>Spring Milestones</name>\\n        <url>https://repo.spring.io/milestone</url>\\n        <snapshots>\\n            <enabled>false</enabled>\\n        </snapshots>\\n    </repository>\\n    <repository>\\n        <id>spring-snapshots</id>\\n        <name>Spring Snapshots</name>\\n        <url>https://repo.spring.io/snapshot</url>\\n        <releases>\\n            <enabled>false</enabled>\\n        </releases>\\n    </repository>\\n</repositories>\\n```\\n\\n#### api-key \u914d\u7f6e\\n\\n\u5728\u6b63\u5f0f\u5f00\u59cb\u4f53\u9a8c\u4e4b\u524d\uff0c\u9700\u8981\u7533\u8bf7\u5230\u6a21\u578b\u7684 api-key\u3002\u7533\u8bf7\u5730\u5740\uff1ahttps://help.aliyun.com/zh/dashscope/developer-reference/activate-dashscope-and-create-an-api-key\\n\\n\u60a8\u53ef\u4ee5\u901a\u8fc7 DashScope \u63d0\u4f9b\u7684\u65b9\u5f0f\u914d\u7f6e api-key\uff0cSCA AI \u5b8c\u5168\u517c\u5bb9 DashScope \u73af\u5883\u53d8\u91cf\u914d\u7f6e key \u7684\u65b9\u5f0f\uff1ahttps://help.aliyun.com/zh/dashscope/developer-reference/api-key-settings\\n\\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7 SCA AI \u4e2d\u63d0\u4f9b\u7684\u5982\u4e0b\u914d\u7f6e\u9879\u914d\u7f6e\uff1a\\n\\n```yml\\nspring:\\n  cloud:\\n    ai:\\n      tongyi:\\n        # api-key setting:\\n        api-key: sk-xxxxxxxxxxxxxxxxxxx\\n```\\n\\n#### \u804a\u5929\u5bf9\u8bdd\u4f53\u9a8c\\n\\n\u5b98\u65b9 Example\uff1ahttps://github.com/alibaba/spring-cloud-alibaba/tree/2023.x/spring-cloud-alibaba-examples/spring-cloud-ai-example\\n\\n```java\\npublic class ChatService {\\n\\n    // \u804a\u5929\u5ba2\u6237\u7aef\\n private final ChatClient chatClient;\\n // stream \u6d41\u5f0f\u5ba2\u6237\u7aef\\n private final StreamingChatClient streamingChatClient;\\n\\n @Autowired\\n public ChatService(ChatClient chatClient, StreamingChatClient streamingChatClient) {\\n\\n  this.chatClient = chatClient;\\n  this.streamingChatClient = streamingChatClient;\\n }\\n\\n @Override\\n public String normalCompletion(String message) {\\n        \\n  Prompt prompt = new Prompt(new UserMessage(message));\\n  return chatClient.call(prompt).getResult().getOutput().getContent();\\n }\\n\\n @Override\\n public Map<String, String> streamCompletion(String message) {\\n        \\n  StringBuilder fullContent = new StringBuilder();\\n        \\n  streamingChatClient.stream(new Prompt(message))\\n    .flatMap(chatResponse -> Flux.fromIterable(chatResponse.getResults()))\\n    .map(content -> content.getOutput().getContent())\\n    .doOnNext(fullContent::append)\\n    .last()\\n    .map(lastContent -> Map.of(message, fullContent.toString()))\\n    .block();\\n  return Map.of(message, fullContent.toString());\\n }\\n\\n}\\n```\\n\\n\u4e4b\u540e\uff0c\u521b\u5efa controller \u63a5\u53e3\u8c03\u7528 service \u670d\u52a1\uff1a\\n\\n```java\\n@Autowired\\nprivate ChatService chatService;\\n\\n@GetMapping(\\"/example\\")\\npublic String completion(\\n    @RequestParam(value = \\"message\\", defaultValue = \\"Tell me a joke\\")\\n    String message\\n) {\\n\\n    return chatService.completion(message);\\n}\\n\\n@GetMapping(\\"/stream\\")\\npublic Map<String, String> streamCompletion(\\n    @RequestParam(value = \\"message\\", defaultValue = \\"\u8bf7\u544a\u8bc9\u6211\u897f\u7ea2\u67ff\u7096\u725b\u8169\u600e\u4e48\u505a\uff1f\\")\\n    String message\\n) {\\n\\n    return chatService.streamCompletion(message);\\n}\\n```\\n\\n\u4e0b\u9762\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\uff1a\\n\\n```bash\\n$ curl --get  --data-urlencode \'message=Tell me a joke about a cow.\' http://localhost:8080/ai/example\\n\\n# \u83b7\u5f97\u7684\u54cd\u5e94\u5982\u4e0b\uff1a\\nHere\'s a classic cow joke for you:\\n\\nWhy did the farmer separate the chicken and the sheep from the cows?\\n\\nBecause he wanted to have eggs-clusive relationships with his hens!\\n```\\n\\n#### \u6587\u751f\u56fe\u4f53\u9a8c\\n\\n```java\\npublic class ImagesService {\\n\\n    // \u56fe\u50cf\u751f\u6210\u5ba2\u6237\u7aef\\n private final ImageClient imageClient;\\n\\n @Autowired\\n public ImagesService(ImageClient client) {\\n\\n  this.imageClient = client;\\n }\\n\\n @Override\\n public ImageResponse genImg(String imgPrompt) {\\n\\n  var prompt = new ImagePrompt(imgPrompt);\\n  return imageClient.call(prompt);\\n }\\n\\n}\\n```\\n\\n\u6587\u751f\u56fe\u5bf9\u5e94\u7684 controller \u63a5\u53e3\u5982\u4e0b\uff1a\\n\\n```java\\n@Autowired\\nprivate ImagesService imagesService;\\n\\n@GetMapping(\\"/img\\")\\npublic ImageResponse genImg(\\n    @RequestParam(value = \\"prompt\\", defaultValue = \\"Painting a picture of blue water and blue sky.\\") String imgPrompt\\n) {\\n\\n    return imagesService.genImg(imgPrompt);\\n}\\n```\\n\\n\u63a5\u53e3\u8c03\u7528\u4f53\u9a8c\uff1a\\n\\n```bash\\n$ curl http://localhost:8080/img?prompt=\\"\u7f8e\u5973\\"\\n\\n# \u54cd\u5e94\u6570\u636e\u4e3a base64 \u7f16\u7801\u56fe\u7247\u548c\u56fe\u7247\u7f51\u5740\uff0c\u6ce8\u610f\uff1a\u56fe\u7247 url \u5730\u5740\u662f\u6709\u6709\u6548\u671f\u7684\u3002\\n```\\n\\n\u70b9\u51fb\u5730\u5740\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u751f\u6210\u7684\u7f8e\u5973\u56fe\u7247\uff1a\\n\\n![\u6587\u751f\u56fe\u4f53\u9a8c](/img/scaai/audio.png)\\n\\n#### \u6587\u751f\u8bed\u97f3\u4f53\u9a8c\\n\\n```java\\npublic class AudioService {\\n\\n private final SpeechClient speechClient;\\n\\n @Autowired\\n public AudioService(SpeechClient client) {\\n\\n  this.speechClient = client;\\n }\\n\\n @Override\\n public String genAudio(String text) {\\n\\n  var resWAV = speechClient.call(text);\\n  return save(resWAV, SpeechSynthesisAudioFormat.WAV.getValue());\\n }\\n\\n    // \u8f85\u52a9\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06\u6a21\u578b\u7684\u54cd\u5e94\u4fdd\u5b58\u5230\u672c\u5730.\\n private String save(ByteBuffer audio, String type) {\\n\\n  String currentPath = System.getProperty(\\"user.dir\\");\\n  LocalDateTime now = LocalDateTime.now();\\n  DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\\"MM-dd-HH-mm-ss\\");\\n  String fileName = currentPath + File.separator + now.format(formatter) + \\".\\" + type;\\n  File file = new File(fileName);\\n\\n  try (FileOutputStream fos = new FileOutputStream(file)) {\\n   fos.write(audio.array());\\n  }\\n  catch (Exception e) {\\n   throw new RuntimeException(e);\\n  }\\n\\n  return fileName;\\n }\\n\\n}\\n```\\n\\ncontroller \u63a5\u53e3\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\n @Autowired\\n private AudioService audioService;\\n\\n @GetMapping(\\"/audio\\")\\n public String genAudio(@RequestParam(value = \\"prompt\\",\\n   defaultValue = \\"\u4f60\u597d\uff0cSpring Cloud Alibaba AI \u6846\u67b6\uff01\\") String prompt) {\\n\\n  return audioService.genAudio(prompt);\\n }\\n```\\n\\n\u8c03\u7528\u63a5\u53e3\u4f53\u9a8c\uff1a\\n\\n```bash\\n$ curl http://localhost:8080/ai/audio?prompt=\\"\u4f60\u597d\uff0c\u4eba\u5de5\u667a\u80fd\uff01\\"\\n\\n# \u54cd\u5e94\u503c\u4e3a\u4fdd\u5b58\u7684\u97f3\u9891\u8def\u5f84\u3002\\nD:\\\\open_sources\\\\sca-ai\\\\spring-ai\\\\04-29-22-44-22.wav\\n```\\n\\n![image-20240429224559288](/img/scaai/meinv.png)\\n\\n\u81f3\u6b64\uff0cSpring Cloud Alibaba AI \u63d0\u4f9b\u7684\u4e09\u79cd\u57fa\u672c\u529f\u80fd\u5df2\u7ecf\u4f53\u9a8c\u5b8c\u6210\uff0c\u540e\u7eed\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e9b\u4e2a\u6027\u5316\u7684\u53c2\u6570\u6765\u4f7f\u5927\u6a21\u578b\u751f\u6210\u5404\u79cd\u5404\u6837\u7684\u56fe\u7247\u548c\u97f3\u9891\u7b49\u3002\\n\\n\u66f4\u591a\u914d\u7f6e\u9879\u53ef\u4ee5\u53c2\u8003\uff1ahttps://help.aliyun.com/zh/dashscope/developer-reference/api-details\u3002\u793e\u533a\u76f8\u5173\u7684\u6587\u6863\u6b63\u5728\u5b8c\u5584\uff0c\u66f4\u591a\u529f\u80fd\u6b63\u5728\u5f00\u53d1\u4e2d\uff01"},{"id":"2023-year-summary","metadata":{"permalink":"/blog/2023-year-summary","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/year-end-summary/2023-summary.md","source":"@site/blog/year-end-summary/2023-summary.md","title":"2023 \u603b\u7ed3","description":"\u8fd9\u4f1a\u5e94\u8be5\u7b97\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u65f6\u95f4\u6bb5\uff0c\u81ea\u4ece\u4e0a\u4e86\u5927\u5b66\u4ee5\u6765\u3002\u7b2c\u4e00\u6b21\u51fa\u95e8\u5728\u5916\uff0c\u5728\u4e34\u8fd1\u5e74\u5173\u7684\u65f6\u5019\u4e00\u4e2a\u4eba\u5750\u774010\u4e2a\u5c0f\u65f6\u7684\u9ad8\u94c1\u56de\u5bb6\u3002\u4e0a\u5927\u5b66\u7684\u65f6\u5019\u56e0\u4e3a\u9ad8\u8003\u5931\u5229\u7684\u539f\u56e0\uff0c\u62a5\u4e86\u4e00\u6240\u79bb\u5bb6\u8fd1\u7684\u5b66\u6821\u53bb\u4e0a\u3002\u5927\u5b66\u56db\u5e74\u6765\uff0c\u8d70\u7684\u6700\u8fdc\u7684\u5730\u65b9\u5c31\u7b97\u662f\u676d\u5dde\u4e86\u5427\u3002\u56de\u5bb6\u611f\u89c9\u5927\u5bb6\u90fd\u5306\u5306\u5fd9\u5fd9\u7684\uff0c\u5bf9\u6bd4\u706b\u8f66\u4e0a\u7684\u53fd\u53fd\u55b3\u55b3\uff0c\u4f3c\u4e4e\u9ad8\u94c1\u5c11\u4e86\u4e9b\u8bb8\u4eba\u60c5\u5473\u3002 \u4e0d\u8fc7\u8fd9\u4e5f\u597d\uff0c\u5411\u6765\u559c\u6b22\u5b89\u9759\u7684\u6211\uff0c\u5728\u8fd9\u79cd\u73af\u5883\u4e0b\u611f\u89c9\u975e\u5e38\u4e0d\u9519\uff0c\u9664\u4e86\u9ad8\u94c1\u7684\u54c4\u54c4\u58f0\u3002\u770b\u7740\u7535\u8111\uff0c\u95f2\u6765\u65e0\u4e8b\u3002\u51c6\u5907\u56de\u987e\u4e00\u4e0b\u6211\u76842023\uff01","date":"2024-02-03T21:39:54.000Z","tags":[{"inline":true,"label":"\u5e74\u7ec8\u603b\u7ed3","permalink":"/blog/tags/\u5e74\u7ec8\u603b\u7ed3"},{"inline":true,"label":"2023","permalink":"/blog/tags/2023"}],"readingTime":3.59,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"2023-year-summary","title":"2023 \u603b\u7ed3","date":"2024-02-03T21:39:54.000Z","authors":"yuluo","tags":["\u5e74\u7ec8\u603b\u7ed3","2023"],"keywords":["\u968f\u7b14","\u5e74\u7ec8\u603b\u7ed3"],"image":"/img/summary/2023-summary.jpg"},"unlisted":false,"prevItem":{"title":"Spring Cloud Alibaba AI \u5feb\u901f\u4f53\u9a8c","permalink":"/blog/spring-cloud-alibaba-ai-use"},"nextItem":{"title":"java-and-go/Golang-study","permalink":"/blog/study-golang"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u8fd9\u4f1a\u5e94\u8be5\u7b97\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u65f6\u95f4\u6bb5\uff0c\u81ea\u4ece\u4e0a\u4e86\u5927\u5b66\u4ee5\u6765\u3002\u7b2c\u4e00\u6b21\u51fa\u95e8\u5728\u5916\uff0c\u5728\u4e34\u8fd1\u5e74\u5173\u7684\u65f6\u5019\u4e00\u4e2a\u4eba\u5750\u774010\u4e2a\u5c0f\u65f6\u7684\u9ad8\u94c1\u56de\u5bb6\u3002\u4e0a\u5927\u5b66\u7684\u65f6\u5019\u56e0\u4e3a\u9ad8\u8003\u5931\u5229\u7684\u539f\u56e0\uff0c\u62a5\u4e86\u4e00\u6240\u79bb\u5bb6\u8fd1\u7684\u5b66\u6821\u53bb\u4e0a\u3002\u5927\u5b66\u56db\u5e74\u6765\uff0c\u8d70\u7684\u6700\u8fdc\u7684\u5730\u65b9\u5c31\u7b97\u662f\u676d\u5dde\u4e86\u5427\u3002\u56de\u5bb6\u611f\u89c9\u5927\u5bb6\u90fd\u5306\u5306\u5fd9\u5fd9\u7684\uff0c\u5bf9\u6bd4\u706b\u8f66\u4e0a\u7684\u53fd\u53fd\u55b3\u55b3\uff0c\u4f3c\u4e4e\u9ad8\u94c1\u5c11\u4e86\u4e9b\u8bb8\u4eba\u60c5\u5473\u3002 \u4e0d\u8fc7\u8fd9\u4e5f\u597d\uff0c\u5411\u6765\u559c\u6b22\u5b89\u9759\u7684\u6211\uff0c\u5728\u8fd9\u79cd\u73af\u5883\u4e0b\u611f\u89c9\u975e\u5e38\u4e0d\u9519\uff0c\u9664\u4e86\u9ad8\u94c1\u7684\u54c4\u54c4\u58f0\u3002\u770b\u7740\u7535\u8111\uff0c\u95f2\u6765\u65e0\u4e8b\u3002\u51c6\u5907\u56de\u987e\u4e00\u4e0b\u6211\u76842023\uff01\\n\\n\u6545\u4e8b\u7684\u5f00\u5934\u8fd8\u662f\u5f88\u7b80\u5355\uff0c23 \u5e74\u6625\u8282\u8fc7\u5b8c\u4e86\uff0c\u80cc\u7740\u5305\u53bb\u4e0a\u5b66\u4e86\u3002\u7ecf\u8fc7\u534a\u5e74\u591a\u7684\u65f6\u95f4\u3002\u7ec8\u4e8e\u7b97\u662f\u71ac\u5230\u4e86\u5927\u4e09\u6bd5\u4e1a\uff0c\u5927\u56db\u8981\u51fa\u53bb\u5b9e\u4e60\u4e86\u3002\\n\\n\u5f53\u65f6\u7684\u5fc3\u60c5\u600e\u4e48\u63cf\u8ff0\u5462\uff1f\u6709\u5411\u5f80\uff0c\u6709\u61a7\u61ac\u4e5f\u6709\u627e\u4e0d\u5230\u5de5\u4f5c\uff0c\u9762\u4e34\u7a98\u5883\uff0c\u5728\u5bb6\u5f85\u7740\u65e0\u6240\u4e8b\u4e8b\u7684\u62c5\u5fc3\u3002\u786e\u5b9e\u633a\u5fc3\u614c\u7684\uff0c\u56e0\u4e3a\u5b66\u6821\u672c\u6765\u4e5f\u4e0d\u5360\u4f18\u52bf\uff0c\u5f53\u4e0b\u5927\u73af\u5883\u53c8\u5f88\u5dee\u3002\\n\\n\u540e\u6765 7 \u6708\u4efd\uff0c\u627e\u5230\u4e86\u7b2c\u4e00\u4efd\u5b9e\u4e60\uff0c\u5199 Java \uff0c\u505a IDM \u7cfb\u7edf\u7684\u516c\u53f8\uff0c\u5728\u897f\u5b89\u3002\u5f53\u65f6\u88ab PUA \u4e86\u3002\u8bb0\u5fc6\u5f88\u6e05\u6670\uff0c\u6216\u8bb8\u6bcf\u4e2a\u4eba\u90fd PUA \u7684\u5b9a\u4e49\u4e0d\u540c\uff0c\u5728\u6211\u7684\u8ba4\u77e5\u4e2d\uff0c\u4ed6\u5c31\u662f\u5728 PUA \u6211\u3002\u73b0\u5728\u8fd9\u4e2a\u5e74\u7eaa\uff0c\u610f\u6c14\u98ce\u53d1\uff0c\u98ce\u534e\u6b63\u8302\u3002\u8c01\u80fd\u53d7\u5f97\u4e86\u8fd9\u9e1f\u6c14\u3002\u76f4\u63a5\u80cc\u5305\u8d70\u4eba\u4e86\u3002\\n\\n\u56de\u5bb6\u5f85\u4e86\u534a\u4e2a\u6708\u5de6\u53f3\u65f6\u95f4\uff0c\u63a5\u5230\u4e86\u7b2c\u4e8c\u4efd\u5b9e\u4e60\u7684\u9762\u8bd5\uff0c\u9762\u8bd5\u8fd8\u7b97\u987a\u5229\uff0c\u6210\u529f\u8fdc\u7a0b\u4e0a\u73ed\u4e86\u4e24\u4e2a\u6708\u65f6\u95f4\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fdc\u7a0b\u4e0a\u73ed\u8fd8\u662f\u633a\u4e0d\u9519\u7684\u3002\u5de5\u4f5c\u5185\u5bb9\u4e5f\u662f\u6bd4\u8f83\u7b26\u5408\u5fc3\u4e2d\u9884\u671f\u7684\uff0c\u5f53\u65f6\u60f3\u505a\u5f00\u6e90\uff0c\u60f3\u505a\u70b9\u6709\u610f\u4e49\u7684\u4e8b\u60c5\uff0c\u60f3\u591a\u63a5\u89e6\u4e0b\u65b0\u9c9c\u7684\u4eba\u548c\u4e8b\u3002\u4f46\u662f\u8fdc\u7a0b\u968f\u4e4b\u800c\u6765\u7684\u95ee\u9898\u4e5f\u591a\u3002\u6c9f\u901a\u4e0d\u53ca\u65f6\uff0c\u6ca1\u53d1\u4fc3\u8fdb\u611f\u60c5\u4ea4\u6d41\u7b49\u7b49\uff0c\u9047\u5230\u50bb\u903c\u8001\u677f\uff0c\u5bf9\u5458\u5de5\u96f6\u4fe1\u4efb\u90a3\u5c31\u8981\u53e6\u5916\u770b\u5f85\u4e86\u3002\u4e0d\u80fd\u4e00\u89c6\u540c\u4ec1\u3002\u597d\u6bd4\u4eba\u548c\u4eba\u4e4b\u95f4\uff0c\u8001\u677f\u548c\u8001\u677f\u4e4b\u95f4\u533a\u522b\u4e5f\u662f\u633a\u5927\u7684\u3002\u90fd\u8bf4\u5927\u5382\u4e4b\u95f4\u5bf9\u5458\u5de5\u6709\u80cc\u8c03\uff0c**\u5458\u5de5\u5bf9\u516c\u53f8\u7684\u80cc\u8c03\u4e5f\u662f\u76f8\u5f53\u91cd\u8981\u7684\uff01\u719f\u6089\u516c\u53f8\u7684\u6587\u5316\uff0c\u4ef7\u503c\u89c2\u7b49\u7b49\u3002**\\n\\n\u4ece\u4e0a\u4e00\u5bb6\u516c\u53f8\u5b9e\u4e60\u79bb\u804c\u4e4b\u540e\uff0c\u5728\u5bb6\u5f85\u4e86\u4e00\u4e2a\u591a\u6708\u65f6\u95f4\u3002\u540e\u6765\u7ecf\u8001\u4e61\u4ecb\u7ecd\uff0c\u6765\u4e86\u676d\u5dde\u3002\u5728\u676d\u5dde\u5b9e\u4e60\u5de5\u4f5c\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0c\u89c1\u5230\u4e86\u633a\u591a\u4e1c\u897f\uff0c\u4e5f\u7b97\u662f\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u5de5\u4f5c\u65f6\u95f4\u6700\u957f\u7684\u4e00\u5bb6\u516c\u53f8\u4e86\u3002\u611f\u89e6\u5f88\u591a\uff0c\u4e5f\u611f\u8c22\u6211\u7684\u8001\u4e61\u670b\u53cb\uff0c\u662f\u4ed6\u7ed9\u4e86\u6211\u673a\u4f1a\u3002\u4e0d\u7136\u53ef\u80fd\u5c31\u8981\u5728\u5bb6\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u7b49\u8fc7\u5e74\u4e86\u3002\u524d\u6bb5\u65f6\u95f4\u7ed9\u6211\u8bf4\uff0c\u4ed6\u8981\u79bb\u804c\u4e86\uff0c\u6ca1\u6709\u64e6\u4eae\u773c\u775b\u770b\u6e05\u695a\uff0c\u803d\u8bef\u4e86\u6211\u3002\u5fc3\u6000\u6127\u759a\u7684\u53cd\u800c\u662f\u6211\u4e86\uff0c\u672c\u6765\u9762\u8bd5\u5230\u4e86\u4e00\u5bb6\u4e0d\u9519\u7684\u516c\u53f8\uff0c\u88ab\u6211\u62c9\u7740\u5230\u4e86\u8fd9\u6765\u3002\\n\\n\u8fd9\u534a\u5e74\u65f6\u95f4\u91cc\u7b97\u662f\u4eba\u751f\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7ecf\u5386\u7684\u6700\u591a\u53d8\u6545\u7684\u4e00\u5e74\u3002\u524d\u524d\u540e\u540e\u7684\u9762\u8bd5\uff0c\u4e09\u6b21\u5b9e\u4e60\u7ecf\u5386\u3002\u73b0\u5728\u4e00\u4e2a\u4eba\u5750\u8f66\u56de\u5bb6\u4e5f\u7b97\u662f\u5728\u6211\u6b63\u5f0f\u5f00\u59cb\u4e0d\u4e45\u7684\u4eba\u751f\u4e2d\u52a0\u4e0a\u4e86\u8272\u5f69\u9c9c\u8273\u7684\u4e00\u7b14\u3002\u5bf9\u8bb8\u591a\u4e8b\u60c5\u90fd\u6709\u4e86\u4e0d\u4e00\u6837\u7684\u770b\u5f85\u3002\u6216\u8bb8\u8fd9\u5c31\u662f\u6210\u957f\u5427\uff0c\u54c8\u54c8\u3002\\n\\n\u4eba\u751f\u9700\u8981\u4e0d\u65ad\u7684\u53bb\u7ecf\u5386\uff0c\u4e0d\u65ad\u8bd5\u9519\u3002\u6709\u65f6\u5019\u5fc3\u5883\uff08\u770b\u5f85\u4e8b\u60c5\uff09\u7684\u53d8\u5316\uff0c\u5f80\u5f80\u662f\u5728\u770b\u6e05\u4e86\u4e00\u4ef6\u4e8b\u60c5\u6216\u8005\u81ea\u5df1\u53bb\u4eb2\u8eab\u505a\u4e86\u4e00\u4ef6\u4e8b\u60c5\u4e4b\u540e\u3002\u540c\u65f6\uff0c\u4e5f\u5fc3\u6000\u611f\u6069\u3002\u611f\u6069\u9047\u5230\u7684\u6bcf\u4e00\u4e2a\u4eba\uff0c\u7ecf\u5386\u7684\u6bcf\u4e00\u4ef6\u4e8b\u3002\u4e0d\u7ba1\u662f\u597d\u4e8b\uff0c\u574f\u4e8b\uff0c\u597d\u4eba\uff0c\u574f\u4eba\u3002\u4ed6\u4eec\u6269\u5c55\u4e86\u6211\u7684\u89c6\u91ce\uff0c\u4e30\u5bcc\u4e86\u6211\u7684\u9605\u5386\uff0c\u8ba9\u6211\u8fd9\u53ea\u4e95\u5e95\u4e4b\u86d9\u770b\u5230\u4e86\u66f4\u591a\u4e1c\u897f\uff0c\u5018\u82e5\u6211\u56fa\u6b65\u81ea\u5c01\u5728\u5bb6\u91cc\u5f85\u7740\uff0c\u8fd9\u4e9b\u7ecf\u5386\u53c8\u5230\u54ea\u53bb\u627e\u5462\uff1f\\n\\n\u5e0c\u671b\u5728\u4e4b\u540e\u7684\u65f6\u95f4\u4e2d\uff0c\u505a\u4e9b\u6709\u610f\u4e49\u7684\u4e8b\u60c5\uff0c\u627e\u5230\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4e8b\u7269\u3002\u627e\u4e0d\u5230\u5de5\u4f5c\u5c31\u56de\u5bb6\u5f53\u4e2a\u8ba1\u7b97\u673a\u8001\u5e08\uff0c\u5e73\u5e73\u6de1\u6de1\u751f\u6d3b\u3002\u505a\u70b9\u81ea\u5df1\u559c\u6b22\u7684\u4e8b\u60c5\u3002\u5bf9\u672a\u6765\u7684\u4e8b\u60c5\u8fd8\u662f\u633a\u671f\u5f85\u7684\u5462. \ud83c\udf89\ud83c\udf89\\n\\n<br />\\n\\n<div style={{float: \'right\'}}>2024/01/31 \u829c\u6e56\u8f66\u7ad9</div>"},{"id":"study-golang","metadata":{"permalink":"/blog/study-golang","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/java-and-go/Golang-study.md","source":"@site/blog/java-and-go/Golang-study.md","title":"java-and-go/Golang-study","description":"\u672c\u6587\u7ae0\u4e2d\u8bb0\u5f55\u4e00\u4e9b Golang \u4e2d\u7684\u8bed\u8a00\u7279\u6027\uff0c\u5305\u62ec init \u51fd\u6570\uff0c\u9762\u5411\u5bf9\u8c61\uff0cdefer \u5173\u952e\u5b57\uff0c\u5e76\u53d1\u7f16\u7a0b\u7b49\u3002","date":"2023-11-02T10:19:40.000Z","tags":[{"inline":true,"label":"Golang","permalink":"/blog/tags/golang"}],"readingTime":12.58,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"study-golang","date":"2023-11-02T10:19:40.000Z","authors":"yuluo","tags":["Golang"],"keywords":["Golang"]},"unlisted":false,"prevItem":{"title":"2023 \u603b\u7ed3","permalink":"/blog/2023-year-summary"},"nextItem":{"title":"Install-And-Understand-APISIX","permalink":"/blog/install-and-understand-apisix-gw"}},"content":"\x3c!-- truncate --\x3e\\n\\n# Golang\\n\\n> \u672c\u6587\u7ae0\u4e2d\u8bb0\u5f55\u4e00\u4e9b Golang \u4e2d\u7684\u8bed\u8a00\u7279\u6027\uff0c\u5305\u62ec init \u51fd\u6570\uff0c\u9762\u5411\u5bf9\u8c61\uff0cdefer \u5173\u952e\u5b57\uff0c\u5e76\u53d1\u7f16\u7a0b\u7b49\u3002\\n\\n## init \u51fd\u6570\u4e0e\u5bfc\u5305\\n\\n> init\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b\u662f\u65e9\u4e8emain\u51fd\u6570\u7684\uff0c\u5982\u679c\u60f3\u5728main\u51fd\u6570\u6267\u884c\u524d\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u53ef\u4ee5\u5728init\u51fd\u6570\u4e2d\u53bb\u5b8c\u6210\\n\\n```golang\\nimport (\\n \\"fmt\\",\\n    // .\u8868\u793a \u5bfc\u5165\u5f53\u524d\u5305\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u5230\u5f53\u524d\u7684\u5305\u4e2d\uff0c\u76f4\u63a5\u4f7f\u7528API\u8c03\u7528 \u4e0d\u8981\u8f7b\u6613\u4f7f\u7528\u3002\u907f\u514d\u65b9\u6cd5\u540d\u91cd\u590d \u65e0\u6cd5\u8bc6\u522b\\n    . \\"html/template\\",\\n    // _ \u8868\u793a \u5bfc\u5165\u5e76\u4e0d\u4f7f\u7528 \u4f46\u662f\u4f1a\u6267\u884c\u5f53\u524d\u5305\u7684init\u65b9\u6cd5\\n    _ \\"text/template\\",\\n    // myhttp \u4f5c\u4e3a\\"net/http\\"\u5305\u7684\u522b\u540d\\n myhttp \\"net/http\\"\\n)\\n```\\n\\n## \u6307\u9488\\n\\nGolang \u7684\u6307\u9488\u548c C \u8bed\u8a00\u7c7b\u578b\uff0c\u7c7b\u578b\u6307\u9488\u4e0d\u80fd\u8fdb\u884c\u504f\u79fb\u548c\u8fd0\u7b97\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u4e24\u4e2a\u7b26\u53f7\uff1a`&`\uff08\u53d6\u5730\u5740\uff09\u548c`*`\uff08\u6839\u636e\u5730\u5740\u53d6\u503c\uff09\\n\\n\u793a\u4f8b\u5982\u4e0b\uff1a\\n\\n```golang\\nvar var-name *var-type\\n\\n// var-type\uff1a \u6307\u9488\u7c7b\u578b\\n\\n// var-name\uff1a\u6307\u9488\u53d8\u91cf\u540d\\n\\n// \u6307\u5b9a\u53d8\u91cf\u4f5c\u4e3a\u4e00\u4e2a\u6307\u9488\\n// \u4ee3\u8868\u53d6\u6307\u9488\u7684\u503c\uff0c\u76f4\u63a5\u8f93\u51fa\u53d8\u91cf\u662f\u5730\u5740\u503c\\n```\\n\\n\u6307\u9488\u4ea4\u6362\u6570\u5b57\u503c\u793a\u4f8b\uff1a\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc swap(pa *int, pb *int) {\\n   var temp int\\n   temp = *pa // temp = main::a\\n   *pa = *pb  // main::a = main::b\\n   *pb = temp // main::b = temp\\n}\\n\\nfunc main() {\\n var a int = 10\\n var b int = 20\\n\\n var ia *int\\n ia = &a\\n fmt.Printf(\\"a = %v\\\\n\\", a)\\n fmt.Printf(\\"&a = %v\\\\n\\", &a)\\n fmt.Printf(\\"ia = %v\\\\n\\", ia)\\n fmt.Printf(\\"*ia = %v\\\\n\\", *ia)\\n\\n fmt.Println(\\"----------------------------------\\")\\n\\n fmt.Println(\\"a = \\", a, \\"b = \\", b)\\n\\n // swap\\n swap(&a, &b)\\n\\n fmt.Println(\\"a = \\", a, \\"b = \\", b)\\n}\\n```\\n\\n## defer \u6267\u884c\u987a\u5e8f\\n\\n> \u8868\u793a\u4e00\u4e2a\u51fd\u6570\u5728\u6267\u884c\u4e4b\u540e\uff0c\u7ed3\u675f\u4e4b\u524d\u6267\u884c\u7684\u65f6\u673a\u3002\\n\\n## golang \u51fd\u6570\\n\\n\u51fd\u6570\u5728go\u8bed\u8a00\u4e2d\u662f\u4e00\u7ea7\u516c\u6c11\uff0c\u6240\u6709\u7684\u529f\u80fd\u5355\u5143\u90fd\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u51fd\u6570\u5305\u542b\u51fd\u6570\u7684\u540d\u79f0\u3002\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5171\u540c\u6784\u6210\u51fd\u6570\u7684\u7b7e\u540d\uff08signature\uff09\\n\\n### **go\u8bed\u8a00 \u51fd\u6570\u7279\u6027**\\n\\n- \u666e\u901a\u51fd\u6570\uff0c\u533f\u540d\u51fd\u6570\uff08\u6ca1\u6709\u540d\u79f0\u7684\u51fd\u6570\uff09\uff0c\u65b9\u6cd5\uff08\u5b9a\u4e49\u5728struct\u4e0a\u7684\u51fd\u6570\uff09\\n\\n- \u4e0d\u5141\u8bb8\u51fd\u6570\u91cd\u8f7d\uff0c\u4e0d\u5141\u8bb8\u51fd\u6570\u540c\u540d\\n\\n- \u51fd\u6570\u4e0d\u80fd\u5d4c\u5957\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u5d4c\u5957\u533f\u540d\u51fd\u6570\\n\\n- \u51fd\u6570\u662f\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u53d8\u91cf\u4e5f\u6210\u4e3a\u51fd\u6570\\n\\n- \u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\\n\\n- \u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\\n\\n- \u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u6ca1\u6709\u540d\u79f0\\n\\n- \u51fd\u6570\u5728\u4f20\u9012\u53c2\u6570\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u62f7\u8d1d\u53c2\u6570\u7684\u526f\u672c\uff0c\u518d\u5c06\u526f\u672c\u4f20\u9012\u7ed9\u51fd\u6570\\n\\n  ```java\\n  func test() (name string, age int)} {\\n      \\n      name = yuluo\\n      age = 20\\n      \\n      return\\n  }\\n  \\n  // \u53d8\u957f\u53c2\u6570\\n  func f3(args... int) {\\n      for _, v := range args {\\n          fmt.Println(\\"v := %d \\", v)\\n      }\\n  }\\n  \\n  // \u51fd\u6570\u7c7b\u578b\u5b9a\u4e49\\n  func sum(a int, b int) int {\\n      return a + b\\n  }\\n  \\n  func max(a, b int) int {\\n      if a > b {\\n          return a\\n      }\\n      \\n      return b\\n  }\\n  \\n  func main() {\\n      f3(1, 2, 3, 4, 7, 8)\\n      \\n      f3(1, 3, 4)\\n      \\n      // \u5b9a\u4e49\u51fd\u6570\u7c7b\u578b\\n      type f1 func(int, int) int \\n      var ff f1\\n      \\n      // \u8d4b\u503c\u51fd\u6570\u7c7b\u578b\u7684\u53d8\u91cf\\n      ff = sum\\n   ff(1, 2)\\n      \\n      ff = max\\n      ff = max(1, 2)\\n  }\\n  ```\\n\\n### **golang \u9ad8\u9636\u51fd\u6570**\\n\\n\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u4f20\u9012\u7ed9\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fd4\u56de\\n\\n```golang\\npackage main\\n\\nfunc sayHello(name string) {\\n    fmt.Println(\\"Hello, %s\\" + name)\\n}\\n\\n//\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\\nfunc f1(name string, f func(string)) {\\n    f(name)\\n}\\n\\nfunc add(a, b int) int {\\n    return a + b\\n}\\n\\nfunc sub(a, b int) int {\\n    return a - b\\n}\\n\\nfunc operation(op string) func(int, int) int {\\n switch op {\\n case \\"+\\":\\n  return add\\n case \\"-\\":\\n  return sub\\n default:\\n  return nil\\n }\\n}\\n\\nfunc main() {\\n    \\n    // \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\\n    f1(\\"yuluo\\", sayHello)\\n    \\n    // \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\\n    ff := operation(\\"+\\")\\n    r := ff(1, 2)\\n    fmt.Println(r)\\n    \\n    ff := operation(\\"-\\")\\n    r := ff(1, 2)\\n    fmt.Println(r)\\n    \\n}\\n```\\n\\n### **golang\u533f\u540d\u51fd\u6570**\\n\\ngolang\u51fd\u6570\u4e0d\u80fd\u5d4c\u5957\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u533f\u540d\u51fd\u6570\uff0c\u5b9e\u73b0\u7b80\u5355\u529f\u80fd\u7684\u8c03\u7528\\n\\n```go\\n\u8bed\u6cd5\uff1afunc(\u53c2\u6570\u5217\u8868)(\u8fd4\u56de\u503c)\\n\u4e5f\u53ef\u4ee5\u6ca1\u6709\u53c2\u6570\u548c\u8fd4\u56de\u503c\\n\\nfunc main() {\\n    // \u6b64\u5904\u6ca1\u6709\u51fd\u6570\u540d\u79f0 func max(a, b int) int {}\\n    max := func(a, b int) int {\\n        if a > b {\\n            return a\\n        }\\n        return b\\n    }\\n    \\n    r := max(1, 2)\\n    fmt.Println(r)\\n    \\n    // \u81ea\u5df1\u8c03\u7528\u81ea\u5df1\\n    r = func(a, b int) int {\\n        if a > b {\\n            return a\\n        }\\n        return b\\n    }(1, 2)\\n    fmt.Println(r)\\n    \\n}\\n```\\n\\n### **golang \u95ed\u5305**\\n\\n```golang\\nfunc add() func(y int) int {\\n    // x \u7684\u4f5c\u7528\u57df\u662f\u548c\u51fd\u6570\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\\n    var x int\\n    return func(y int) int {\\n        return x += y\\n    }\\n}\\n\\nfunc main() {\\n    \\n    var f = add()\\n    fmt.Println(f(10))\\n    fmt.Println(f(20))\\n    fmt.Println(f(30))\\n    \\n}\\n```\\n\\n## OOP \u9762\u5411\u5bf9\u8c61\\n\\n### \u7c7b\u578b\u5b9a\u4e49\u548c\u522b\u540d\\n\\n> \u7c7b\u578b\u5b9a\u4e49\u4ec5\u4ec5\u53ea\u5728\u4ee3\u7801\u4e2d\u5b58\u5728\uff0c\u5728\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4e0d\u4f1a\u5b58\u5728\u7c7b\u578b\u522b\u540d\\n\\n```golang\\npackage main\\n\\nfunc main() {\\n    \\n    type MyInt int\\n    \\n    var i MyInt\\n    i = 00\\n}\\n```\\n\\n### \u7ed3\u6784\u4f53\\n\\n> go \u8bed\u8a00\u4e2d\u6ca1\u6709\u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u4e00\u4e9b\u7279\u6027\u3002\u4f8b\u5982\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001\u7b49\u7279\u6027\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\n// Book \u8868\u793a\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 \u5c06\u591a\u4e2a\u7b80\u5355\u7c7b\u578b\u5c01\u88c5\u6210\u4e3a\u4e00\u4e2a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\\n// \u5927\u5199\u8868\u793a\u5176\u4ed6\u5305\u4e5f\u53ef\u4ee5\u8bbf\u95ee\\ntype Book struct {\\n   title string\\n   auth  string\\n   price int\\n}\\n\\n// \u8fd9\u91cc\u4f20\u9012\u7684\u662fbook\u7684\u4e00\u4e2a\u526f\u672c \u539f\u6765\u503c\u4e0d\u4f1a\u6539\u53d8\\nfunc changeBook(book Book) {\\n   book.title = \\"huakai\\"\\n}\\n\\n// \u4fee\u6539\u503c\\nfunc changeBookByRefer(book *Book) {\\n   // \u8fd9\u91cc\u6709\u81ea\u52a8\u89e3\u5f15\u7528\u7684\u8fc7\u7a0b\\n   // \u5b9e\u9645\u4e3a\uff1a(*per).name = \\"huakai\\"\\n   book.title = \\"huakai\\"\\n}\\n\\nfunc main() {\\n\\n   //var book Book\\n   //book.title = \\"go\u5165\u95e8\\"\\n   //book.auth = \\"yuluo\\"\\n   //book.price = 20\\n\\n   // \u952e\u503c\u5bf9\u65b9\u5f0f\u521d\u59cb\u5316\\n   // book := Book{\\n   //   title: \\"java\u5165\u95e8\\",\\n   //   auth:  \\"yuluo\\",\\n   //   price: 20,\\n   // }\\n    \\n   // \u987a\u5e8f\u65b9\u5f0f\\n    book := Book{\\n     \\"java\u5165\u95e8\\",\\n     \\"yuluo\\",\\n     20,\\n   }\\n    \\n   fmt.Println(\\"\u539f\u672c\u503c\uff1a\\", book)\\n\\n   changeBook(book)\\n   fmt.Println(\\"\u66f4\u6539\u4e4b\u540e\u7684\u503c\uff1a\\", book)\\n\\n   changeBookByRefer(&book)\\n\\n   fmt.Println(\\"\u4f20\u5f15\u7528\u66f4\u6539\u4e4b\u540e\u7684\u503c\uff1a\\", book)\\n    \\n   // \u533f\u540d\u7ed3\u6784\u4f53\\n    var tom struct {\\n        id, age int\\n        name string\\n    }\\n    tom.id = 102\\n    tom.age = 20\\n    tom.name = \\"tom\\"\\n    fmt.Printf(\\"%v\\\\n\\", tom)\\n}\\n```\\n\\n### \u65b9\u6cd5\\n\\n> \u9762\u5411\u5bf9\u8c61\u4e2d\u5b58\u5728\u7c7b\u65b9\u6cd5\u7684\u6982\u5ff5\uff0c\u5728 go \u4e2d\u6ca1\u6709 go \u65b9\u6cd5\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u4e00\u4e9b\u65b9\u6cd5\u5c5e\u4e8e\u67d0\u4e2a\u7ed3\u6784\u4f53\\n\\ngo \u8bed\u8a00\u7684\u65b9\u6cd5\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u5b9a\u4e49\u4e8e struct \u4e4b\u4e0a\uff08\u4e0e struct \u5173\u8054\uff0c\u7ed1\u5b9a\uff09\uff0c\u88ab\u79f0\u4e3a struct \u7684\u63a5\u6536\u8005\uff08receiver\uff09**\u901a\u4fd7\u7406\u89e3\u5c31\u662f\uff1a\u65b9\u6cd5\u662f\u6709\u63a5\u6536\u8005\u7684\u51fd\u6570**\\n\\n```golang\\ntype mytype struct {}\\n\\n// receiver \uff08\u63a5\u6536\u8005\uff09\u63a5\u53d7\u8be5\u65b9\u6cd5\u7684\u7ed3\u6784\u4f53 mymethod\u65b9\u6cd5\u540d para\u53c2\u6570\u5217\u8868 return_type \u8fd4\u56de\u503c\u5217\u8868\\nfunc (recevicer mytype) mymethod(para) return_type {}\\nfunc (recevicer *mytype) mymethod(para) return_type {}\\n```\\n\\n### \u63a5\u53e3\\n\\n> \u662f\u4e00\u79cd\u65b0\u7684\u7c7b\u578b\u5b9a\u4e49\uff0c\u628a\u6240\u6709\u5177\u6709\u5171\u6027\u7684\u65b9\u6cd5\u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53ea\u8981\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\\n\\n```golang\\n/*\u5b9a\u4e49\u63a5\u53e3*/\\ntype interfae_name interface {\\n method_name1 [return_type]\\n method_name2 [return_type]\\n method_name3 [return_type]\\n}\\n\\n/*\u5b9a\u4e49\u7ed3\u6784\u4f53*/\\ntype struct_name struct {\\n /*\u53d8\u91cf\u5b9a\u4e49*/\\n}\\n\\n/*\u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5*/\\nfunc (struct_name_var struct_name) method_name1() (return_type) {\\n // \u65b9\u6cd5\u5b9e\u73b0\\n}\\n\\nfunc (struct_name_var struct_name) method_name2() (return_type) {\\n // \u65b9\u6cd5\u5b9e\u73b0\\n}\\n```\\n\\n> \u4f8b\u5982 \u624b\u673a\u548c\u7535\u8111 \u5206\u522b\u5b9e\u73b0 USB \u63a5\u53e3\uff0c\u5b9e\u73b0\u8bfb\u548c\u5199\u529f\u80fd\\n\\n```golang\\ntype USB interface {\\n    read()\\n    write()\\n}\\n\\n// \u7535\u8111\u7ed3\u6784\u4f53\\ntype Computer struct {\\n    name string\\n}\\n\\n// \u624b\u673a\u7ed3\u6784\u4f53\\ntype Mobile struct {\\n    name string\\n}\\n\\n// \u7535\u8111\u5b9e\u73b0USB\u63a5\u53e3\\nfunc (c Computer) read() {\\n    fmt.Printf(\\"c.name = %v %s\\\\n\\", c.name, \\"\u7535\u8111\u4f7f\u7528usb\u63a5\u53e3\u8bfb\u53d6\\")\\n}\\nfunc (c Computer) write() {\\n    fmt.Printf(\\"c.name = %v %s\\\\n\\", c.name, \\"\u7535\u8111\u4f7f\u7528usb\u63a5\u53e3\u5199\\")\\n}\\n\\n//\u624b\u673a\u5b9e\u73b0use\u63a5\u53e3\\nfunc (m Mobile) read() {\\n    fmt.Printf(\\"m.name = %v %s\\\\n\\", m.name, \\"\u624b\u673a\u4f7f\u7528usb\u63a5\u53e3\u8bfb\u53d6\\")\\n}\\nfunc (m Mobile) write() {\\n    fmt.Printf(\\"m.name = %v %s\\\\n\\", m.name, \\"\u624b\u673a\u4f7f\u7528usb\u63a5\u53e3\u5199\\")\\n}\\n\\nfunc main() {\\n    c := Computer {\\n        name: \\"Dell\\",\\n    }\\n    \\n    c.read()\\n    c.write()\\n    \\n    m := Mobile {\\n        model: \\"5G\\",\\n    }\\n    \\n    m.read()\\n    m.write()\\n}\\n```\\n\\n### \u9762\u5411\u5bf9\u8c61\u7684\u8868\u793a\u4e0e\u5c01\u88c5\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\n/*\\n\u5982\u679c\u7c7b\u540d\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u8868\u793a\u5176\u4ed6\u5305\u4e5f\u80fd\u591f\u8bbf\u95ee \u5426\u5219\u53ea\u80fd\u5728\u7c7b\u7684\u5185\u90e8\u8bbf\u95ee\\n\u540c\u6837\u7684\uff0c\u65b9\u6cd5\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u8868\u793a\u53ef\u4ee5\u5728\u5176\u4ed6\u5305\u4e2d\u8bbf\u95ee\uff0c\u5426\u5219\u53ea\u80fd\u5728\u672c\u7c7b\u4e2d\u8bbf\u95ee\\ngo\u8bed\u8a00\u7684\u5c01\u88c5\u7279\u6027\\n */\\ntype Book struct {\\n   Title string\\n   Auth  string\\n   Price int\\n}\\n\\nfunc (this Book) show() {\\n   fmt.Println(\\"\u4f7f\u7528show\u65b9\u6cd5\u8f93\u51fa\u7684 Book \u5bf9\u8c61\\", this)\\n}\\n\\nfunc (this *Book) GetAuth() string {\\n   return this.Auth\\n}\\n\\nfunc (this *Book) SetAuth(newName string) {\\n   // \u8fd9\u91cc\u7684this\u5bf9\u8c61\u662f\u4e00\u4e2a\u526f\u672c\uff0c\u5e76\u4e0d\u80fd\u771f\u7684\u4fee\u6539book\u5bf9\u8c61\u7684\u503c\\n   // \u6539\u5165\u4f20\u9012\u6307\u9488\u4e4b\u540e\u624d\u80fd\u4fee\u6539\u503c\\n   this.Auth = newName\\n}\\n\\nfunc main() {\\n\\n   // \u5b9a\u4e49book\u5bf9\u8c61\\n   book := Book{Title: \\"java\u5165\u95e8\\", Auth: \\"yuluo\\", Price: 100}\\n   fmt.Println(\\"\u539f\u672c\u503c\uff1a\\", book)\\n\\n   auth := book.GetAuth()\\n   fmt.Println(\\"\u4f7f\u7528get\u65b9\u6cd5\\", auth)\\n\\n   book.SetAuth(\\"huakai\\")\\n   fmt.Println(\\"\u8c03\u7528set\u65b9\u6cd5\u4e4b\u540e\u7684\u503c\uff1a\\", book)\\n\\n   book.show()\\n\\n}\\n```\\n\\n### \u9762\u5411\u5bf9\u8c61\u7ee7\u627f\\n\\n> \u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5d4c\u5957\u6765\u5b9e\u73b0\u7ee7\u627f\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\n// Human \u7236\u7c7b\\ntype Human struct {\\n   Sex  string\\n   name string\\n}\\n\\nfunc (this *Human) Eat() {\\n   fmt.Println(\\"Human.Eat()...\\")\\n}\\n\\nfunc (this *Human) Walk() {\\n   fmt.Println(\\"Human.walk()...\\")\\n}\\n\\ntype Teacher struct {\\n   Human // \u8868\u793a\u7ee7\u627f\u4e86Human\u7c7b\u4e2d\u7684\u65b9\u6cd5\\n\\n   // \u5728Human\u4e0a\u6269\u5c55\u51fa\u6765\u7684\u5de5\u4f5c\u5c5e\u6027\\n   work string\\n}\\n\\n// Teacher Eat \u91cd\u5b9a\u4e49\u7236\u7c7b\u7684\u65b9\u6cd5\\nfunc (this *Teacher) Eat() {\\n   fmt.Println(\\"Teacher.Eat()...\\")\\n}\\n\\nfunc (this *Teacher) Teach() {\\n   fmt.Println(\\"Teacher.Teach()...\\")\\n}\\n\\nfunc main() {\\n\\n   h := Human{\\"\u7537\\", \\"lisi\\"}\\n\\n   h.Eat()\\n   h.Walk()\\n\\n   // \u5b9a\u4e49\u5b50\u7c7b\u5bf9\u8c61\\n   //t := Teacher{h, \\"\u6559\u5e08\\"}\\n   t := Teacher{Human{\\"\u7537\\", \\"yuluo\\"}, \\"\u7a0b\u5e8f\u5458\\"}\\n   \\n   // \u8c03\u7528\u5b50\u7c7b\u65b9\u6cd5\\n   t.Eat()\\n   t.Teach()\\n    \\n   // \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\\n   t.Walk()\\n\\n}\\n```\\n\\n### \u9762\u5411\u5bf9\u8c61\u591a\u6001\\n\\n> \u591a\u6001\u7684\u57fa\u672c\u8981\u7d20\uff1a\\n>\\n> - \u6709\u4e00\u4e2a\u7236\u7c7b\uff08\u63a5\u53e3\uff09\\n> - \u6709\u5b50\u7c7b\uff08\u5b9e\u73b0\u4e86\u7236\u7c7b\u63a5\u53e3\u4e2d\u7684\u5168\u90e8\u65b9\u6cd5\uff09\\n> - \u7236\u7c7b\u7c7b\u578b\u7684\u53d8\u91cf\uff08\u6307\u9488\uff09\u6307\u5411\u5b50\u7c7b\u7684\u5177\u4f53\u6570\u636e\u53d8\u91cf\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\n// \u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\\ntype Animal interface {\\n   Sleep()\\n   GetColor() string // \u83b7\u53d6\u52a8\u7269\u7684\u989c\u8272\\n   GetType() string  // \u83b7\u53d6\u52a8\u7269\u7684\u79cd\u7c7b\\n}\\n\\n// \u5177\u4f53\u7684\u7c7b\\ntype Cat struct {\\n   color string // \u732b\u7684\u989c\u8272\\n}\\n\\nfunc (this *Cat) Sleep() {\\n   fmt.Println(\\"Cat is sleeping\u2026\u2026\\")\\n}\\n\\nfunc (this *Cat) GetColor() string {\\n   return this.color\\n}\\n\\nfunc (this *Cat) GetType() string {\\n   return \\"Cat\\"\\n}\\n\\n// \u5177\u4f53\u7684\u7c7b\\ntype Dog struct {\\n   color string // \u72d7\u7684\u989c\u8272\\n}\\n\\nfunc (this *Dog) Sleep() {\\n   fmt.Println(\\"Dog is sleeping\u2026\u2026\\")\\n}\\n\\nfunc (this *Dog) GetColor() string {\\n   return this.color\\n}\\n\\nfunc (this *Dog) GetType() string {\\n   return \\"Cat\\"\\n}\\n\\nfunc main() {\\n   // \u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\uff0c \u7236\u7c7b\u6307\u9488\\n   var animal Animal\\n\\n   animal = &Cat{\\"yellow\\"}\\n\\n   // \u8c03\u7528\u7684\u662f Cat \u7684 Sleep \u65b9\u6cd5\\n   animal.Sleep()\\n\\n   animal = &Dog{\\"black\\"}\\n   // \u8c03\u7528\u7684\u662f Dog \u7684 Sleep \u65b9\u6cd5 \u4ea7\u751f\u591a\u6001\u73b0\u8c61\\n   animal.Sleep()\\n}\\n```\\n\\n### \u7a7a\u63a5\u53e3\u542b\u4e49\\n\\ninterface\uff1a`\u901a\u7528\u7684\u4e07\u80fd\u7c7b\u578b \u7c7b\u4f3c\u4e0e java \u4e2d\u7684 Object`\\n\\n```go\\n// \u8868\u793amap\u7684 key \u662f string \u7c7b\u578b\uff0cvalue \u662f go \u4e2d\u7684\u4efb\u610f\u6570\u636e\u7c7b\u578b\\nmap1 := map[string]interface{}\\n```\\n\\n### golang \u6784\u9020\u51fd\u6570\\n\\n```golang\\npackage main\\n\\nimport \\"fmt\\"\\n\\ntype Person struct {\\n    name string\\n    age int\\n}\\n\\n// Person \u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570 \u8fd4\u56de\u4e00\u4e2aperson\u5bf9\u8c61\u7684\u6307\u9488\\nfunc NewPerson(name string, age int) (*Person, error) {\\n    if name == \\"\\" {\\n        return nil, fmt.Errorf(\\"name \u4e0d\u80fd\u4e3a\u7a7a\\")\\n    }\\n    if age < 0 {\\n        return nil, fmt.Errorf(\\"\u5e74\u9f84\u4e0d\u80fd\u5c0f\u4e8e 0\\")\\n    }\\n    \\n    return &Person{name: name, age: age}, nil\\n}\\n\\nfunc main() {\\n    person, err := NewPeron(\\"yuluo\\", 20)\\n    if err != nil {\\n        fmt.Println(err)\\n    }\\n    \\n    fmt.Println(person)\\n}\\n```\\n\\n## golang \u5e76\u53d1\u7f16\u7a0b\\n\\n### \u534f\u7a0b\\n\\n> golang \u901a\u8fc7\u5173\u952e\u5b57 go \u5f00\u542f\u4e00\u4e2a\u643a\u7a0b\uff0c\u4f7f\u5176\u5e76\u53d1\u6267\u884c\\n\\n```golang\\n// \u4f8b1\\nfunc main() {\\n   // main\u7ebf\u7a0b \u987a\u5e8f\u6267\u884c\\n   go test4(\\"yuluo\\")\\n   // go \u542f\u52a8\u643a\u7a0b \u548c \u4e3b\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\\n   test4(\\"huakai\\")\\n\\n}\\n\\nfunc test4(msg string) {\\n   for i := 0; i < 5; i++ {\\n      fmt.Printf(\\"msg: %v\\\\n\\", msg)\\n      time.Sleep(time.Millisecond * 100)\\n   }\\n}\\n\\n// \u4f8b2\\npackage main\\n\\nimport (\\n   \\"fmt\\"\\n   \\"time\\"\\n)\\n\\n// \u5b50 routine\\nfunc newTask() {\\n   i := 0\\n   for {\\n      i++\\n      fmt.Printf(\\"new Groutine : i = %d\\\\n\\", i)\\n   }\\n}\\n\\n// \u4e3b goroutine\\nfunc main() {\\n   // \u521b\u5efa\u4e00\u4e2agoroutine \u53d6\u6267\u884cnewTask\u8fdb\u7a0b\\n   go newTask()\\n\\n   i := 0\\n   for {\\n      i++\\n      fmt.Printf(\\"main goroutine : i = %d\\\\n\\", i)\\n      time.Sleep(time.Duration(i))\\n   }\\n}\\n```\\n\\n### channel\\n\\n> \u7528\u4e8e\u643a\u7a0b\uff08goroutine\uff09\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\\n\\n\u521b\u5efachannel\u8bed\u6cd5\\n\\n> channel\u7684\u6709\u7f13\u51b2\u548c\u65e0\u7f13\u51b2\u95ee\u9898\\n>\\n> - \u5f53channel\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5728\u5411\u91cc\u9762\u5199\u503c\uff0c\u5c31\u4f1a\u963b\u585e\\n> - \u5982\u679cchannel\u4e3a\u7a7a\uff0c\u4ece\u91cc\u9762\u53d6\u503c\uff0c\u4e5f\u4f1a\u963b\u585e\\n\\n```golang\\n// \u901a\u9053\u7531 make \u51fd\u6570\u521b\u5efa\\nunbuffered := make(chan int)      // \u6574\u578b\u65e0\u7f13\u51b2\u901a\u9053\\nbuffered := make(chan int\uff0c 10)   // \u6574\u578b\u7f13\u51b2\u901a\u9053\\n```\\n\\n\u534f\u7a0b\u53d1\u9001\u6570\u636e\u5230\u901a\u9053\uff1a\\n\\n```golang\\ngoroutine1 := make(chan string, 5)  // \u5b57\u7b26\u4e32\u7f13\u51b2\u901a\u9053,5\u8868\u793a\u901a\u9053\u80fd\u5305\u542b5\u4e2a\u503c\\ngoroutine <- \\"hello\\"     // \u901a\u8fc7\u901a\u9053\u53d1\u9001\u5b57\u7b26\u4e32\\n```\\n\\n\u4ece\u901a\u9053\u63a5\u53d7\u503c\uff1a\\n\\n```golang\\n// `<-` \u5728\u901a\u9053\u5de6\u8fb9\u8868\u793a\u63a5\u53d7\u503c\uff0c\u5728\u901a\u9053\u53f3\u8fb9\u8868\u793a\u53d1\u9001\u503c\\ndata := <- goroutine1     // \u4ece\u901a\u9053\u63a5\u53d7\u503c\\n```\\n\\n- \u540c\u4e00\u4e2a\u901a\u9053\uff0c\u53d1\u9001\u548c\u63a5\u53d7\u64cd\u4f5c\u662f\u4e92\u65a5\u7684\uff1b\\n- \u53d1\u9001\u548c\u63a5\u53d7\u64cd\u505a\u5728\u5b8c\u5168\u5b8c\u6210\u4e4b\u524d\u4f1a\u88ab\u963b\u585e\uff1b\\n\\n```go\\nfunc main() {\\n\\n   // \u7528go\u521b\u5efa\u627f\u8f7d\u4e00\u4e2a\u5f62\u53c2\u4e3a\u7a7a\uff0c\u8fd4\u56de\u503c\u4e3a\u7a7a\u7684\u4e00\u4e2a\u51fd\u6570\\n   go func() {\\n      defer fmt.Println(\\"A.defer\\")\\n\\n      func() {\\n         defer fmt.Println(\\"B.defer\\")\\n\\n         // \u9000\u51fa\u5f53\u524d\u7684\u4e24\u4e2a\u51fd\u6570\\n         runtime.Goexit()\\n\\n         fmt.Println(\\"B\\")\\n         // \uff08\uff09\u8868\u793a\u5728\u521b\u5efa\u4e86\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u4e4b\u540e\uff0c\u8c03\u7528\u6b64\u533f\u540d\u51fd\u6570\\n      }()\\n\\n      fmt.Println(\\"A\\")\\n   }()\\n\\n   // go\u4e00\u4e2a\u6709\u53c2\u6570\u7684\u51fd\u6570\\n   go func(a int, b int) {\\n      fmt.Println(a, b)\\n      // \u8c03\u7528\u6b64\u533f\u540d\u51fd\u6570\u5e76\u4f20\u53c2\\n   }(1, 2)\\n\\n   // \u6b7b\u5faa\u73af\\n   for {\\n      time.Sleep(1 * time.Second)\\n   }\\n\\n}\\n```\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\n   // \u5b9a\u4e49\u4e00\u4e2achannel  channel\u540c\u65f6\u4e5f\u4f1a\u4fdd\u8bc1go routine\u7684\u6267\u884c\u987a\u5e8f\\n   c := make(chan int)\\n\\n   // \u521b\u5efa\u4e24\u4e2ago routine\\n   go func() {\\n      defer fmt.Println(\\"go routine \u7ed3\u675f\\")\\n      fmt.Println(\\"go routine \u6b63\u5728\u8fd0\u884c\u2026\u2026\\")\\n\\n      // \u7ed9chan\u4e2d\u5b58\u503c \u5c06666\u53d1\u9001\u7ed9c\\n      c <- 666\\n   }()\\n\\n   // \u4eceC\u4e2d\u53d6\u51fa\u503c \u5e76\u8d4b\u503c\u7ed9num\\n   num := <-c\\n\\n   fmt.Println(\\"channel\u4e2d\u7684\u503c\uff1a\\", num)\\n   fmt.Println(\\"main routine \u7ed3\u675f\\")\\n\\n}\\n```\\n\\n\u5982\u679cchann\u4e2d\u6ca1\u6709\u503c\u7684\u8bdd\uff0c\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u503c\u4e4b\u540e\uff0c\u5728\u62ff\u51fa\u6765\u503c\u3002**\u4fdd\u8bc1\u4e86 go routine \u7684\u6267\u884c\u987a\u5e8f**\\n\\n> channel \u548c range \u6df7\u5408\u4f7f\u7528\uff08channel \u904d\u5386\uff09\\n>\\n> ```go\\n> for data := range c {\\n>  fmt.Println(data)\\n> }\\n> ```\\n>\\n> channer\u548cselect\u6df7\u5408\u4f7f\u7528\\n>\\n> - \u5355\u6d41\u7a0b\u4e0b\u4e00\u4e2ago\u53ea\u80fd\u76d1\u63a7\u4e00\u4e2achannel\u7684\u6267\u884c\u72b6\u6001\uff0cselect\u53ef\u4ee5\u5b8c\u6210\u76d1\u63a7\u591a\u4e2achannel\u7684\u8fd0\u884c\u72b6\u6001\\n>\\n> ```go\\n> select {\\n>     case <- chan1:\\n>      // \u5982\u679cchan1\u6210\u529f\u8bfb\u5230\u6570\u636e\uff0c\u5219\u8fdb\u884c\u8be5\u64cd\u4f5c\\n>     case chan2 <- 1:\\n>      // \u5982\u679cchan2\u5199\u5165\u6570\u636e\u6210\u529f\uff0c\u5219\u8fdb\u884c\u8be5\u64cd\u4f5c\\n>     default:\\n>      // \u5982\u679c\u4e0a\u9762\u90fd\u6ca1\u6210\u529f\uff0c\u6267\u884c\u6b64\u64cd\u4f5c\\n> }\\n> ```\\n\\n### WaitGroup \u540c\u6b65\\n\\n\u7ebf\u7a0b\u4e4b\u95f4\u4e92\u76f8\u7b49\u5f85\u65f6\u4f7f\u7528\uff0cA\u7ebf\u7a0b\u6ca1\u6709\u6267\u884c\u5b8c\u6210\uff0c\u4f7f\u7528\u6b64\u5173\u952e\u5b57\u901a\u77e5B\u7ebf\u7a0b\u7b49A\u7ebf\u7a0b\u4e00\u4f1a\\n\\n```golang\\nfunc main() {\\n // \u542f\u52a810\u4e2a\u534f\u7a0b\uff08\u7ebf\u7a0b\uff09\\n for i := 0; i < 10; i++ {\\n  go showMsg(6)\\n }\\n\\n // \u4e3b\u534f\u7a0b\\n fmt.Println(\\"end...\\")\\n\\n}\\n\\nfunc showMsg(i int) {\\n fmt.Println(i)\\n}\\n```\\n\\n\u8fd0\u884c\u5982\u4e0a\u4ee3\u7801\u65f6\uff0c\u4e3b\u643a\u7a0b\u5e76\u4e0d\u4f1a\u7b49\u5f8510\u4e2a\u534f\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\u5728\u7ed3\u675f\uff0c\u800c\u662f\u81ea\u5df1\u7ed3\u675f\u3002\u52a0\u5165 WairGroup \u5c31\u53ef\u4ee5\u572810\u4e2a\u534f\u7a0b\u6267\u884c\u5b8c\u6210\u4e4b\u540e\u518d\u7ed3\u675f\u4e3b\u534f\u7a0b\\n\\n```go\\npackage main\\n\\nimport (\\n \\"fmt\\"\\n    \\"sync\\"\\n)\\n\\nvar wg sync.WaitGroup\\n\\nfunc main() {   \\n   // \u542f\u52a810\u4e2a\u534f\u7a0b\uff08\u7ebf\u7a0b\uff09\\n   for i := 0; i < 10; i++ {\\n      go showMsg(i)\\n      wg.Add(1)\\n   }\\n\\n   // \u7b49\u5f85\\n   wg.Wait()\\n   // \u4e3b\u534f\u7a0b\\n   fmt.Println(\\"end...\\")\\n\\n}\\n\\nfunc showMsg(i int) {\\n \\n   // \u5728\u6267\u884c\u4e4b\u540e\uff0c\u7ed3\u675f\u4e4b\u524d\u6267\u884c\u7684\u65f6\u673a\\n   defer wg.Done()\\n\\n   fmt.Println(i)\\n}\\n```\\n\\n## go mod \u5e38\u7528\u547d\u4ee4\\n\\n| \u547d\u4ee4            | \u4f5c\u7528                           |\\n| --------------- | ------------------------------ |\\n| go mod int      | \u751f\u6210go.mod\u6587\u4ef6                 |\\n| go mod download | \u4e0b\u8f7dgo.mod\u6587\u4ef6\u4e2d\u6307\u660e\u7684\u6240\u6709\u4f9d\u8d56 |\\n| go mod tidy     | \u6574\u7406\u73b0\u6709\u7684\u4f9d\u8d56                 |\\n| go mod graph    | \u67e5\u770b\u73b0\u6709\u7684\u4f9d\u8d56\u7ed3\u6784             |\\n| go mod edit     | \u7f16\u8f91go.mod\u6587\u4ef6                 |\\n| go mod vendor   | \u5bfc\u51fa\u9879\u76ee\u6240\u6709\u7684\u4f9d\u8d56\u5230vendor\u76ee\u5f55 |\\n| go mod verify   | \u68c0\u9a8c\u4e00\u4e2a\u6a21\u5757\u662f\u5426\u88ab\u7be1\u6539\u8fc7       |\\n| go mod why      | \u67e5\u770b\u4e3a\u4ec0\u4e48\u9700\u8981\u4f9d\u8d56\u67d0\u6a21\u5757       |\\n\\n## golang proxy \u9009\u9879\\n\\n\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u4e3b\u8981\u662f\u7528\u6237\u8bbe\u7f6eGo\u6a21\u5757\u4ee3\u7406\uff0c\u4f5c\u7528\u662f\u7528\u4e8e\u4f7fGO\u5728\u540e\u7eed\u62c9\u53d6\u6a21\u5757\u7248\u672c\u65f6\u76f4\u63a5\u901a\u8fc7\u955c\u50cf\u7ad9\u70b9\u5feb\u901f\u62c9\u53d6\u3002\\n\\n\u9ed8\u8ba4\u503c\u662f\uff1ahttps://proxy.golang.org,direct\\n\\n\u9ed8\u8ba4\u7684\u4ee3\u7406\u56fd\u5185\u8bbf\u95ee\u4e0d\u4e86\uff0c\u9700\u8981\u8bbe\u7f6e\u56fd\u5185\u7684\u4ee3\u7406\\n\\n- \u963f\u91cc\u4e91\\n\\n  https://mirrors.aliyun.com/goproxy\\n\\n- \u4e03\u725b\u4e91\\n\\n  https://goproxy.cn,direct\\n\\n> direct: \u5982\u679c\u5728\u6539\u955c\u50cf\u627e\u4e0d\u5230\u8fd9\u4e2a\u5305\uff0c\u4f1a\u53bb\u539f\u672c\u7684\u6e90\u62c9\u53d6"},{"id":"install-and-understand-apisix-gw","metadata":{"permalink":"/blog/install-and-understand-apisix-gw","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/everythings/Install-And-Understand-APISIX.md","source":"@site/blog/everythings/Install-And-Understand-APISIX.md","title":"Install-And-Understand-APISIX","description":"\u73af\u5883\u51c6\u5907","date":"2023-10-13T21:33:22.000Z","tags":[{"inline":true,"label":"Gateway","permalink":"/blog/tags/gateway"},{"inline":true,"label":"APISIX","permalink":"/blog/tags/apisix"}],"readingTime":11.083333333333334,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"install-and-understand-apisix-gw","title":"Install-And-Understand-APISIX","date":"2023-10-13T21:33:22.000Z","authors":"yuluo","tags":["Gateway","APISIX"],"keywords":["gateway","APISIX"]},"unlisted":false,"prevItem":{"title":"java-and-go/Golang-study","permalink":"/blog/study-golang"},"nextItem":{"title":"GPT \u63a5\u53e3\u670d\u52a1","permalink":"/blog/gpt-interface-server"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u73af\u5883\u51c6\u5907\\n\\n### \u63a5\u53e3\u670d\u52a1\\n\\ngpt \u63a5\u53e3\u670d\u52a1\uff08\u4f7f\u7528 spring boot \u7f16\u5199\u7684 Chat GPT \u63a5\u53e3\u670d\u52a1\uff09\uff0cgithub repo\uff1ahttps://github.com/yuluo-yx/gpt-api-server\\n\\n\u8c03\u7528\u63a5\u53e3\u793a\u4f8b\uff1a\\n\\n![Alt text](/img/Install_and_ubderstand_apisix/image1.png)\\n \\n### \u865a\u62df\u673a\u8f6f\u4ef6\uff1aVMware Workstation Pro 17\\n\\n- Linux \u955c\u50cf\uff1aUbuntu Server \\n- \u5185\u5b58\uff1a8G\\n- \u786c\u76d8\uff1a40G\\n- CPU \u6838\u6570\uff1a 4  \\n\\n### \u8f6f\u4ef6\u73af\u5883\uff1a\\n\\n- Docker Version\uff1a24.0.4\\n- Docker Compose Version\uff1av2.20.1\\n- git Version\uff1a2.34.1\\n- APISIX\uff1a\\n    APISIX Version\uff1a3.4  \\n\\n## \u5b89\u88c5\u65b9\u5f0f\\n\\n### Docker \u5b89\u88c5 APISIX\\n\\n\u53c2\u8003 url\uff1ahttps://apisix.apache.org/zh/docs/apisix/installation-guide/  \\n\\n1. clone \u9879\u76ee\uff1b\\n2. cd apisix-docker/example\uff1b\\n3. \u4fee\u6539 example/apisix-conf \u4e2d config.yaml \u4e2d\u7684 etcd \u7684\u5730\u5740\uff1b\\n4. docker-compose -p docker-apisix up -d\uff1b\\n5. \u8bbf\u95ee APISIX Dashboard\uff1a`ip:9000`\\n\\n![Alt text](/img/Install_and_ubderstand_apisix/image2.png)\\n \\n### K8s helm \u5b89\u88c5\\n\\n#### \u57fa\u7840\u73af\u5883\u5b89\u88c5\\n\\n1. \u4e0b\u8f7d kubectl\\n\\n    ```shell\\n    curl -LO \\"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\\"\\n    ```\\n\\n2. \u5b89\u88c5\\n\\n    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\\n\\n3. \u9a8c\u8bc1\\n\\n    kubectl version --client --output=yaml\\n\\n4. \u5b89\u88c5 minikube\\n\\n    github repo: https://github.com/kubernetes/minikube/releases?page=2?minikube-1.23.1-0.x86_64.rpm\\n\\n    ```shell\\n    rpm -ihv minikube-1.23.1-0.x86_64.rpm\\n    ```\\n\\n5. \u542f\u52a8\\n\\n    ```Shell\\n    minikube start --force --driver=docker --image-repository=http://registry.cn-hangzhou.aliyuncs.com/google_containers\\n    ```\\n\\n6. \u51fa\u73b0\u5982\u4e0b\u8868\u660e\u5b89\u88c5\u6210\u529f\\n\\n    ```shell\\n    root@yuluo-ubuntu:/home/yuluo# kubectl get pods -A\\n    NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE\\n    kube-system   coredns-7d89d9b6b8-fmj2q           1/1     Running   0          101s\\n    kube-system   etcd-minikube                      1/1     Running   0          113s\\n    kube-system   kube-apiserver-minikube            1/1     Running   0          115s\\n    kube-system   kube-controller-manager-minikube   1/1     Running   0          113s\\n    kube-system   kube-proxy-c2wrh                   1/1     Running   0          102s\\n    kube-system   kube-scheduler-minikube            1/1     Running   0          113s\\n    kube-system   storage-provisioner                1/1     Running   0          113s\\n    ```\\n\\n7. \u5b89\u88c5 helm\\n\\n    ```Shell\\n    wget https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz\\n    tar -xvf helm-v2.16.0-linux-amd64.tar.gz\\n    cd linux-amd64\\n    chmod +x helm && mv helm /usr/local/bin/\\n\\n\\n    # \u7248\u672c\u68c0\u6d4b\\n\\n    root@yuluo-ubuntu:/app/apisix-helm# helm version\\n    version.BuildInfo{Version:\\"v3.7.1\\", GitCommit:\\"1d11fcb5d3f3bf00dbe6fe31b8412839a96b3dc4\\", GitTreeState:\\"clean\\", GoVersion:\\"go1.16.9\\"}\\n        \\n    # \u51fa\u73b0\u4e0a\u8ff0\u4fe1\u606f\u5b89\u88c5\u6210\u529f\\n\\n    # \u521d\u59cb\u5316 helm\\n    helm init\\n    \u4f7f\u7528 helm \u5b89\u88c5 apisix\\n    helm repo add apisix https://charts.apiseven.com\\n    helm repo update\\n    helm install apisix apisix/apisix --create-namespace  --namespace apisix\\n\\n    # \u663e\u793a\u7ed3\u679c\u5982\u4e0b\uff0c\u8bc1\u660e\u542f\u52a8\u6210\u529f\uff01\\n    root@yuluo-ubuntu:/app/apisix-helm# kubectl get pods -n apisix\\n    NAME                      READY   STATUS    RESTARTS   AGE\\n    apisix-6c995768f5-5nhhb   1/1     Running   0          5m3s\\n    apisix-etcd-0             1/1     Running   0          5m3s\\n    apisix-etcd-1             1/1     Running   0          5m3s\\n    apisix-etcd-2             1/1     Running   0          5m3s\\n    ```\\n\\n#### \u95ee\u9898\u89e3\u51b3\\n\\n1. \u5b89\u88c5 minikube \u65f6 rpm: RPM should not be used directly install RPM packages, use Alien instead! \u9700\u8981\u5c06 rpm \u7684\u5305\u8f6c\u6362\u4e3a DEB \u7684\u5305\\n\\n    ```Shell\\n    sudo apt-get install alien fakeroot\\n    fakeroot alien package.rpm\\n    sudo dpkg -i package.deb\\n    ```\\n\\n    **\u5b8c\u6210\u5b89\u88c5\uff01**\\n\\n2. \u4f7f\u7528\u65b0\u7248\u672c\u7684 helm \u53ef\u4ee5\u907f\u514d\u5f88\u591a\u95ee\u9898\\n\\n### RPM \u5b89\u88c5\\n\\n1. \u901a\u8fc7 RPM \u5b98\u65b9\u4ed3\u5e93\u5b89\u88c5\\n\\n    ```shell\\n    sudo yum install -y https://repos.apiseven.com/packages/centos/apache-apisix-repo-1.0-1.noarch.rpm\\n    sudo yum install apisix\\n    ```\\n\\n2. \u901a\u8fc7\u79bb\u7ebf\u65b9\u5f0f\u5b89\u88c5\\n\\n    ```Shell\\n    sudo mkdir -p apisix\\n    sudo yum install -y https://repos.apiseven.com/packages/centos/apache-apisix-repo-1.0-1.noarch.rpm\\n    sudo yum clean all && yum makecache\\n    sudo yum install -y --downloadonly --downloaddir=./apisix apisix\\n\\n    sudo yum install ./apisix/*.rpm\\n    ```\\n\\n3. \u5728\u5b89\u88c5\u4e4b\u524d\u90fd\u9700\u8981\u5148\u5b89\u88c5 etcd \u670d\u52a1\uff0c\u56e0\u4e3a apisix \u901a\u8fc7 etcd \u4f5c\u4e3a\u5b58\u50a8\u670d\u52a1\u7ec4\u4ef6\uff01\\n\\n### DEB \u5b89\u88c5\\n\\n1. \u9996\u5148\u786e\u5b9a\u7cfb\u7edf\u67b6\u6784\\n\\n2. \u6839\u636e\u7cfb\u7edf\u67b6\u6784\u9009\u62e9\u5408\u9002\u7684\u4ed3\u5e93\u8fdb\u884c\u5b89\u88c5\\n\\n    ```Shell\\n    echo \\"deb http://openresty.org/package/debian bullseye openresty\\" | sudo tee /etc/apt/sources.list.d/openresty.list\\n    wget -O - https://openresty.org/package/pubkey.gpg | sudo apt-key add -\\n    wget -O - http://repos.apiseven.com/pubkey.gpg | sudo apt-key add -\\n    echo \\"deb http://repos.apiseven.com/packages/debian bullseye main\\" | sudo tee /etc/apt/sources.list.d/apisix.list\\n\\n    # \u8fdb\u884c\u66f4\u65b0\u5b89\u88c5\\n    sudo apt update\\n    sudo apt install -y apisix=3.0.0-0\\n    ```\\n\\n3. \u5728\u5b89\u88c5\u4e4b\u524d\u90fd\u9700\u8981\u5148\u5b89\u88c5 etcd \u670d\u52a1\uff0c\u56e0\u4e3a apisix \u901a\u8fc7 etcd \u4f5c\u4e3a\u5b58\u50a8\u670d\u52a1\u7ec4\u4ef6\uff01\\n\\n#### \u95ee\u9898\u89e3\u51b3\\n\\n1. Warning! Current maximum number of open file descriptors [1024] is not greater than 1024, please increase user limits by execute `ulimit -n <new user limits>` , otherwise the performance is low\\n\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\uff0c\u4f46\u4e0d\u5f71\u54cd\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 `ulimit -n args` \u8fdb\u884c\u914d\u7f6e\u3002\\n\\n2. \u672c\u5730\u8fd0\u884c\u9700\u8981\u5b89\u88c5 etcd \u670d\u52a1\uff01\\n\\n#### \u4f7f\u7528 APISIX \u5bf9\u63a5\u53e3\u8fdb\u884c\u4fdd\u62a4\uff08\u4f7f\u7528 Docker \u6d4b\u8bd5\uff09\\n\\n1. \u53d1\u5e03\u670d\u52a1\\n    \\n    \u8fdb\u5165 `/app/apisix/test-scripts` \u76ee\u5f55\u4e0b\uff0c\u6267\u884c `create-upstreamonce.sh` \u811a\u672c\uff0c\u5c06 gpt \u63a5\u53e3\u670d\u52a1\u53d1\u5e03\u5230 apisix \u7f51\u5173  \\n\\n    \u53d1\u5e03\u670d\u52a1\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528 Postman \u811a\u672c\u4e2d\u7684 \u7f51\u5173\u670d\u52a1\u53d1\u5e03\u6d4b\u8bd5 \u8bf7\u6c42\u3002\u6216\u8005\u4f7f\u7528\u76ee\u5f55\u4e2d\u7684 `test-route.sh` \u811a\u672c\u6d4b\u8bd5  \\n\\n2. \u4fdd\u62a4\u670d\u52a1 \\n\\n    \u9650\u6d41\u89c4\u5219\u4fdd\u62a4\uff1a\u5728\u4e00\u5206\u949f\u4e4b\u5185\u53ea\u80fd\u8bf7\u6c42\u6307\u5b9a api \u63a5\u53e3\u4e24\u6b21\uff0c\u8fdb\u5165 `/app/apisix/test-scripts` \u76ee\u5f55\u4e0b\uff0c\u6267\u884c `limit-count.sh` \u53d1\u5e03\u6b64\u9650\u6d41\u89c4\u5219\uff0c\u4f7f\u7528 Postman \u811a\u672c\u4e2d\u7684 \u7f51\u5173\u670d\u52a1\u53d1\u5e03\u6d4b\u8bd5 \u8bf7\u6c42\uff0c\u5728\u4e00\u5206\u949f\u53d1\u9001 > 2\u6b21\u7684\u8bf7\u6c42\u67e5\u770b\u6548\u679c\u3002  \\n \\n    ![Alt text](/img/Install_and_ubderstand_apisix/image3.png)\\n\\n    ***\u53d1\u9001\u6b21\u6570\u5927\u4e8e 2 \u65f6\uff0c\u8bf7\u6c42\u51fa\u9519\uff1a***\\n\\n    ![Alt text](/img/Install_and_ubderstand_apisix/image4.png)\\n \\n    \u9650\u5236\u5ba2\u6237\u7aef\u5bf9\u670d\u52a1\u7684\u5e76\u53d1\u8bf7\u6c42\u6570\uff1a\u540c\u4e00\u65f6\u95f4\u4e4b\u5185\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u8bf7\u6c42\u53d1\u9001\u81f3api \u63a5\u53e3\u3002\u8fdb\u5165 `/app/apisix/test-scripts` \u76ee\u5f55\u4e0b\uff0c\u6267\u884c `limitconn.sh` \u53d1\u5e03\u6b64\u89c4\u5219\uff0c\u6267\u884c\u540c\u4e00\u76ee\u5f55\u4e0b\u7684 `test-limit-conn.sh` \u811a\u672c\uff0c\u67e5\u770b\u6548\u679c\u3002\\n \\n    ![Alt text](/img/Install_and_ubderstand_apisix/image6.png)\\n\\n    ***\u5f53\u6709\u591a\u4e2a\u8bf7\u6c42\u540c\u65f6\u53d1\u9001\u81f3\u63a5\u53e3\u65f6\uff1a***\\n    \\n    ![Alt text](/img/Install_and_ubderstand_apisix/image5.png)\\n \\n    \u9650\u5236\u8bf7\u6c42\u901f\u7387\uff1a\u5355\u4e2a\u5ba2\u6237\u7aef\u5bf9\u670d\u52a1\u7684\u8bf7\u6c42\u901f\u7387\uff0c\u8fdb\u5165 /app/apisix/testscripts \u76ee\u5f55\u4e0b\uff0c\u6267\u884c limit-req.sh \u53d1\u5e03\u6b64\u89c4\u5219\uff0c\u6267\u884c\u540c\u4e00\u76ee\u5f55\u4e0b\u7684test-limit-res.sh \u811a\u672c\uff0c\u67e5\u770b\u6548\u679c\u3002\\n\\n    ![Alt text](/img/Install_and_ubderstand_apisix/image7.png)\\n \\n    ***\u8bf7\u6c42\u901f\u7387\u8d85\u51fa\u65f6\uff1a*** \\n \\n    ![Alt text](/img/Install_and_ubderstand_apisix/image9.png)\\n\\n### \u5bf9\u4e8e APISIX Gateway \u7684\u7406\u89e3\\n\\n#### \u7f51\u5173\u9879\u76ee\u5bf9\u6bd4\\n\\n1. Kong\uff1a\\n\\n    Kong \u4f5c\u4e3a\u4e00\u4e2a API \u7f51\u5173\uff0c\u63d0\u4f9b\u4e86\u4e86\u5982\u4e0b\u80fd\u529b\uff1a\u8d1f\u8f7d\u5747\u8861\uff0c\u7f13\u5b58\uff0c\u9650\u6d41\u91cd\u8bd5\u7b49\uff0c\u786e\u4fdd API \u7684\u9ad8\u53ef\u7528\u6027\u548c\u6027\u80fd\u3002\u62e5\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u6269\u5c55\u548c\u5b9a\u5236\u529f\u80fd\u3002\u540c\u65f6\uff0cKong \u7f51\u5173\u8fd8\u652f\u6301\u5fae\u670d\u52a1\u6cbb\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u5bf9\u5e38\u89c1\u7684\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u8fdb\u884c\u6574\u5408\uff0c\u5b9e\u73b0\u5bf9\u5fae\u670d\u52a1\u7684\u52a8\u6001\u7ba1\u7406\u548c\u76d1\u63a7\u3002\u4e5f\u63d0\u4f9b\u53ef\u89c6\u5316\u754c\u9762\uff0c\u65b9\u4fbf\u8fdb\u884c API \u548c\u529f\u80fd\u63d2\u4ef6\u7684\u914d\u7f6e\u3002\\n\\n2. APISIX\uff1a\\n\\n    APISIX\u548c Kong \u7f51\u5173\u7c7b\u4f3c\uff0c\u540c\u6837\u5177\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u4e0d\u540c\u8bed\u8a00\u7684\u63d2\u4ef6\u6765\u548c ApiSix \u65e0\u7f1d\u96c6\u6210\uff0c\u6ee1\u8db3\u5404\u79cd\u4e0d\u540c\u7f51\u5173\u573a\u666f\u9700\u6c42\u3002\u63d0\u4f9b\u63a7\u5236\u53f0\u6765\u5bf9 API \u548c\u63d2\u4ef6\u8fdb\u884c\u7ba1\u7406\u3002\\n\\n3. Spring Cloud Gateway\uff1a\\n\\n    Spring Cloud Gateway \u662f\u4e00\u4e2a\u57fa\u4e8e Spring \u7684\u7f51\u5173\u9879\u76ee\uff0c\u4e3b\u8981\u4f7f\u7528\u8fc7\u6ee4\u5668\u94fe\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5404\u79cd\u7f51\u5173\u529f\u80fd\u3002\u80cc\u9760 Spring \u9879\u76ee\uff0c\u53ef\u4ee5\u4f9d\u8d56 Spring Boot \u7684\u81ea\u52a8\u914d\u7f6e\u548c\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u7b80\u5316\u5f00\u53d1\uff0c\u66f4\u5feb\u901f\u7684\u548c Spring \u9879\u76ee\u96c6\u6210\u3002\u4f46\u662f\u4e0d\u63d0\u4f9b\u670d\u52a1\u63a7\u5236\u53f0\uff0c\u901a\u8fc7 Spring Boot Actuator \u6765\u76d1\u63a7\u5404\u9879\u6027\u80fd\u6307\u6807\u3002\\n\\n#### \u4f18\u7f3a\u70b9\u5bf9\u6bd4\\n\\n1. \u4f18\u70b9\uff1a\\n\\nAPISIX \u76f8\u6bd4 Kong \u7f51\u5173\uff0c\u6709\u4ee5\u4e0b\u7684\u4f18\u52bf\uff1a\\n\\n\uffee \u56fd\u5185\u751f\u6001\u5b8c\u5584\uff1b\\n\uffee \u5728\u529f\u80fd\u7c92\u5ea6\u65b9\u9762\u66f4\u52a0\u7ec6\u81f4\uff0c\u652f\u6301\u66f4\u591a\u7684\u529f\u80fd\u63d2\u4ef6\uff0c\u540c\u65f6\u4e5f wasm \u63d2\u4ef6\u673a\u5236\uff1b\\n\uffee \u4f7f\u7528 ETCD \u5b58\u50a8\uff0c\u907f\u514d\u548c\u6570\u636e\u5e93\u7684\u8026\u5408\u3002\\n\uffee APISIX \u76f8\u5f53\u4e8e Spring Cloud Gateway\uff1a\\n\uffee \u63d0\u4f9b\u63a7\u5236\u53f0\u529f\u80fd\uff0c\u65b9\u4fbf\u7ba1\u7406 API \u548c\u63d2\u4ef6\uff1b\\n\uffee \u7075\u6d3b\u7684\u63d2\u4ef6\u673a\u5236\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u6765\u6269\u5c55\u548c\u5b9a\u5236\u4e0d\u540c\u7f51\u5173\u573a\u666f\u4e0b\u7684\u9700\u6c42\uff1b\\n\uffee \u91c7\u7528 Lua \u8bed\u8a00\u7f16\u5199\uff0c\u6709\u66f4\u52a0\u4f18\u8d8a\u7684\u6027\u80fd\u8868\u73b0\u3002\\n\\n2. \u7f3a\u70b9\uff1a\\n\\nAPISIX \u76f8\u5f53\u4e8e Spring Cloud Gateway\uff1a\\n\\n\uffee \u76f8\u6bd4\u4e8e Spring Cloud Gateway\uff0c\u5728\u793e\u533a\u89c4\u6a21\u548c\u7528\u6237\u652f\u6301\uff0c\u7528\u6237\u6559\u7a0b\u65b9\u9762\u7565\u6709\u4e0d\u53ca\u3002\\n\uffee \u4e0d\u53ca Gateway \u7f51\u5173\u9879\u76ee\u6210\u719f\u3002\\n\\n\u76f8\u6bd4\u4e8e Kong \u7f51\u5173\u7684\u7f3a\u70b9\uff1a\\n\\n\uffee \u652f\u6301\u7684\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u6709\u9650\uff0c\u4e0d\u652f\u6301 Zookeeper \u548c Consule \uff1b\\n\uffee \u63d2\u4ef6\u751f\u6001\u4e0d\u53ca Kong \u7f51\u5173\uff1b\\n\uffee \u5b98\u65b9\u6587\u6863\u4e0d\u591f\u5b8c\u5584\uff0c\u5bf9\u4e8e\u5c0f\u767d\u7528\u6237\u5b66\u4e60\u96be\u5ea6\u8f83\u5927\uff1b\\n\uffee \u793e\u533a\u751f\u6001\u4e0d\u53ca Kong \u7f51\u5173\u6d3b\u8dc3\uff1b\\n\uffee \u672a\u63d0\u4f9b\u547d\u4ee4\u884c\u754c\u9762\uff0c\u5728\u4e0d\u4f7f\u7528\u63a7\u5236\u53f0\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u4f7f\u7528 API \u8fdb\u884c\u7ba1\u7406\u3002\\n\\n## Compile APISIX From Source Code (base APISIX-base)\\n\\n\u53c2\u8003\u5b98\u7f51\uff1ahttps://apisix.apache.org/zh/docs/apisix/building-apisix/\\n\\n### \u7f16\u8bd1\u5b89\u88c5\\n\\n1. \u5b89\u88c5 git\\n\\n    yum install git\\n\\n2. \u5b89\u88c5\u4f9d\u8d56\u9879\\n\\n    curl https://raw.githubusercontent.com/apache/apisix/master/utils/install-dependencies.sh -sL | bash -\\n\\n3. \u521b\u5efa\u76ee\u5f55\u5e76\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\\n\\n    ```shell\\n    APISIX_VERSION=\'3.4.0\'\\n    mkdir apisix-${APISIX_VERSION}\\n    ```\\n\\n4. Clone\\n\\n    ```shell\\n    git clone --depth 1 --branch ${APISIX_VERSION} https://github.com/apache/apisix.git apisix-${APISIX_VERSION}\\n    ```\\n\\n5. \u521b\u5efa\u4f9d\u8d56\u9879\u5e76\u5b89\u88c5\\n\\n    ```shell\\n    cd apisix-${APISIX_VERSION}\\n    make deps\\n    make install\\n    ```\\n\\n6. \u5b89\u88c5 etcd\\n\\n    ```shell\\n    ETCD_VERSION=\'3.4.18\'\\n    wget https://github.com/etcd-io/etcd/releases/download/v${ETCD_VERSION}/etcd-v${ETCD_VERSION}-linux-amd64.tar.gz\\n    tar -xvf etcd-v${ETCD_VERSION}-linux-amd64.tar.gz && \\\\\\n    cd etcd-v${ETCD_VERSION}-linux-amd64 && \\\\\\n    sudo cp -a etcd etcdctl /usr/bin/\\n    nohup etcd >/tmp/etcd.log 2>&1 &\\n    ```\\n\\n7. \u521d\u59cb\u5316 apisix \u914d\u7f6e\\n\\n    ```shell\\n    apisix init\\n    ```\\n\\n8. \u6d4b\u8bd5\\n\\n    \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6\uff0cAPISIX \u5c06\u6839\u636e config.yaml \u751f\u6210 nginx.conf\uff0c\u5e76\u68c0\u67e5 nginx.conf \u7684\u8bed\u6cd5\u662f\u5426\u6b63\u786e\u3002\\n    \\n    ```shell\\n    apisix test\\n    ```\\n\\n9. \u8fd0\u884c\\n\\n    ```shell\\n    apisix start\\n    ```\\n\\n10. \u505c\u6b62 \\n\\n    \u5982\u679c\u9700\u8981\u505c\u6b62 APISIX\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 apisix quit \u6216\u8005 apisix stop \u547d\u4ee4\u3002\\n\\n    ```shell\\n    >apisix quit \u5c06\u6b63\u5e38\u5173\u95ed APISIX\uff0c\u8be5\u6307\u4ee4\u786e\u4fdd\u5728\u505c\u6b62\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u6536\u5230\u7684\u8bf7\u6c42\u3002\\n    apisix quit\\n    > apisix stop \u547d\u4ee4\u4f1a\u5f3a\u5236\u5173\u95ed APISIX \u5e76\u4e22\u5f03\u6240\u6709\u8bf7\u6c42\u3002\\n    apisix stop\\n    ```\\n\\n1. \u5378\u8f7d\\n\\n    ```shell\\n    make uninstall && make undeps\\n    ```\\n\\n#### \u9519\u8bef\u89e3\u51b3\\n\\n1. \u6267\u884c curl https://raw.githubusercontent.com/apache/apisix/master/utils/install-dependencies.sh -sL | bash - \u547d\u4ee4\u65f6\u65e0\u6548\\n\\n    ```shell\\n    \u590d\u5236 https://raw.githubusercontent.com/apache/apisix/master/utils/install-dependencies.sh \u5185\u5bb9\uff0c\\n    vim instll-dependency.sh\\n    chmod +x install-dependency.sh\\n    ./install-dependency.sh \u5b89\u88c5\u4f9d\u8d56\\n    ```\\n\\n2. shell \u811a\u672c\u6267\u884c\u5230 install_rust \u65f6\uff0c\u901f\u5ea6\u592a\u6162\\n\\n    \u624b\u52a8\u5b89\u88c5\\n\\n    ```Shell\\n    curl --proto \'=https\' --tlsv1.2 -sSf https://sh.rustup.rs | sh\\n\\n    # \u51fa\u73b0 1\uff0c2\uff0c3\u9009\u9879\u65f6\uff0c\u9009\u62e9 default\u3002\\n\\n    source $HOME/.cargo/env\\n    ```\\n\\n    \u518d\u6b21\u6267\u884c\u811a\u672c\uff01\\n\\n3. make deps \u65f6 \u62a5\u9519 luarocks\uff1acommand not found\\n\\n    [ info ] WARNING: You\'re not using LuaRocks 3.x; please remove the luarocks and reinstall it via https://raw.githubusercontent.com/apache/apisix/master/utils/linux-install-luarocks.sh\\n    make: *** [Makefile:163: deps] Error 1\\n    curl https://raw.githubusercontent.com/apache/apisix/master/utils/linux-install-luarocks.sh -sL | bash - \u5982\u679c\u5b89\u88c5\u5931\u8d25\uff0c\u624b\u52a8\u590d\u5236\u811a\u672c\u6587\u4ef6\u6267\u884c\uff0c\u6267\u884c\u65f6\u9700\u8981\u4f7f\u7528 dos2unix \u8f6c\u53d8\u7f16\u7801\uff0c\u907f\u514d\u51fa\u73b0\u9519\u8bef\\n\\n    ```Shell\\n    dos2unix linux-install-luarocks.sh\\n    ```\\n\\n    \u5982\u679c\u5728\u6267\u884c wget -q https://github.com/luarocks/luarocks/archive/v3.8.0.tar.gz \u5361\u987f\u53ef\u4ee5\u914d\u7f6e git \u4ee3\u7406\\n\\n    ```Shell\\n    git config --global https.proxy http://192.168.2.9:1080\\n    git config --global http.proxy http:///192.168.2.9:1080\\n    ```\\n\\n    \u8fd8\u662f\u4e0d\u884c\u5c31\u624b\u52a8\u4e0b\u8f7d\u4e0a\u4f20\u5230 linux \u7684 tmp \u6587\u4ef6\u4e0b\uff0c\u4fee\u6539 \u811a\u672c\u4e2d\u7684\u8def\u5f84\u518d\u6b21\u6267\u884c\u811a\u672c\uff0c\u66f4\u6539\u540e\u7684\u811a\u672c\u5982\u4e0b\uff1a\\n\\n    ```Shell\\n    LUAROCKS_VER=3.8.0\\n    wget -q https://github.com/luarocks/luarocks/archive/v\\"$LUAROCKS_VER\\".tar.gz\\n    tar -xf v\\"$LUAROCKS_VER\\".tar.gz\\n    rm -f v\\"$LUAROCKS_VER\\".tar.gz\\n    cd luarocks-\\"$LUAROCKS_VER\\" || exit\\n\\n    tar -xf /tmp/luarocks-3.4.0.tar.gz\\n    rm -f /tmp/luarocks-3.4.0.tar.gz\\n    cd luarocks-3.4.0 || exit\\n    ```\\n\\n4. \u6362\u6210 ubuntu \u64cd\u4f5c\u4e4b\u540e\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff1a\\n\\n    \u53c2\u8003\uff1ahttps://blog.csdn.net/qq_52397471/article/details/132212714\\n\\n5. fatal: unable to connect to github.com: github.com[0: 20.205.243.166]: errno=Connection refused\\n\\n    \u6267\u884c\u914d\u7f6e\u5982\u4e0b\uff1a`git config --global url.https://github.com/.insteadOf git://github.com/`\\n    \u5982\u679c\u51fa\u73b0\u4e2a\u522b\u5b89\u88c5\u5931\u8d25\uff0c\u518d\u6b21\u6267\u884c ``make deps` \u547d\u4ee4\\n\\n6. make install \u4e4b\u540e \u6267\u884c apisix init \u663e\u793a bash: /usr/bin/apisix: /bin/bash^M: bad interpreter: No such file or directory\\n\\n    dos2unix apisix\\n\\n7. \u6267\u884c apisix init \u62a5\u9519 /usr/local/openresty//luajit/bin/luajit: cannot open /usr/local/apisix/apisix/cli/apisix.lua: No such file or directory\\n\\n    \u5c06 apisix-3.4.0 \u4e0b\u9762\u7684 apisix\u76ee\u5f55 \u79fb\u52a8\u5230 /usr/local/apisix \u4e0b\\n\\n8. \u518d\u6b21\u6267\u884c apisix \u65f6\uff0c\u63d0\u793a\u90e8\u5206\u5305\u6a21\u5757\u7f3a\u5931\\n\\n    \u4f7f\u7528 luarocks install module \u5b89\u88c5 \u6216\u8005\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\\n\\n9. \u6e90\u7801\u7f16\u8bd1\u5b8c\u6210\uff01\\n\\n## Understand APISIX Plugin System(Scenarios, Usage, Working, Mechanism)\\n\\n### \u7406\u89e3 APISIX \u7684\u63d2\u4ef6\u673a\u5236\uff08\u4e3b\u8981\u4ee5 java \u63d2\u4ef6\u4e3a\u4f8b\uff09\\n\\n#### \u6982\u8ff0\\n\\napache-apisix-java-runner\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a APISIX \u548c java \u8bed\u8a00\u4e4b\u95f4\u7684\u4e00\u4e2a\u6865\u6881\uff0c\u901a\u8fc7 java runner \u53ef\u4ee5\u628a java \u7f16\u5199\u7684\u4ee3\u7801\u76f4\u63a5\u5e94\u7528\u5230 APISIX \u7684\u63d2\u4ef6\u5f00\u53d1\u4e2d\uff0c\u4e3a java \u8bed\u8a00\u7684\u5f00\u53d1\u8005\u4f7f\u7528 APISIX \u63d0\u4f9b\u4e86\u4fbf\u5229\u3002\\n\\n#### \u8fd0\u884c\u673a\u5236\\n\\n\u4e0b\u56fe\u4e3a APISIX \u7684\u63d2\u4ef6\u673a\u5236\u67b6\u6784\u56fe\uff1a\\n\\n![Alt text](/img/Install_and_ubderstand_apisix/image.png)\\n \\n\u4e0a\u56fe\u5de6\u8fb9\u662f Apache APISIX \u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u53f3\u8fb9\u7684 Plugin Runner \u662f\u5404\u8bed\u8a00\u7684\u63d2\u4ef6\u8fd0\u884c\u5668\uff0c apisix-java-plugin-runner \u5c31\u662f\u652f\u6301 java \u8bed\u8a00\u7684 Plugin Runner\u3002\\n\u5f53\u5728 Apache APISIX \u4e2d\u914d\u7f6e\u4e00\u4e2a Plugin Runner \u65f6\uff0cApache APISIX \u4f1a\u542f\u52a8\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u8fd0\u884c Plugin Runner\uff0c\u8be5\u5b50\u8fdb\u7a0b\u4e0e Apache APISIX \u8fdb\u7a0b\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7528\u6237\uff0c\u5f53\u91cd\u542f\u6216\u91cd\u65b0\u52a0\u8f7d Apache APISIX \u65f6\uff0cPlugin Runner \u4e5f\u5c06\u88ab\u91cd\u542f\u3002\\n\u5982\u679c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8def\u7531\u914d\u7f6e\u4e86 ext-plugin-* \u63d2\u4ef6\uff0c\u8bf7\u6c42\u547d\u4e2d\u8be5\u8def\u7531\u65f6\u5c06\u89e6\u53d1 Apache APISIX \u901a\u8fc7 Unix Socket \u5411 Plugin Runner \u53d1\u8d77 RPC \u8c03\u7528\u3002\u8c03\u7528\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\\n\\n\u2022 ext-plugin-pre-req \uff1a\u5728\u6267\u884c Apache APISIX \u5185\u7f6e\u63d2\u4ef6\uff08Lua \u8bed\u8a00\u63d2\u4ef6\uff09\u4e4b\u524d\\n\u2022 ext-plugin-post-req \uff1a\u5728\u6267\u884c Apache APISIX \u5185\u7f6e\u63d2\u4ef6\uff08Lua \u8bed\u8a00\u63d2\u4ef6\uff09\u4e4b\u540e\\n\\n\u540c\u65f6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u9009\u62e9\u5e76\u914d\u7f6e Plugin Runner \u7684\u6267\u884c\u65f6\u673a\u3002\\n\\nPlugin Runner \u4f1a\u5904\u7406 RPC \u8c03\u7528\uff0c\u5728\u5176\u5185\u90e8\u521b\u5efa\u4e00\u4e2a\u6a21\u62df\u8bf7\u6c42\uff0c\u7136\u540e\u8fd0\u884c\u591a\u8bed\u8a00\u7f16\u5199\u7684\u63d2\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Apache APISIX\u3002\\n\u591a\u8bed\u8a00\u63d2\u4ef6\u7684\u6267\u884c\u987a\u5e8f\u662f\u5728 ext-plugin-* \u63d2\u4ef6\u914d\u7f6e\u9879\u4e2d\u5b9a\u4e49\u7684\uff0c\u50cf\u5176\u4ed6\u63d2\u4ef6\u4e00\u6837\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u542f\u7528\u5e76\u5728\u8fd0\u884c\u4e2d\u91cd\u65b0\u5b9a\u4e49\u3002\\n\\n#### \u4f7f\u7528\\n\\n1. \u521b\u5efa\u4e00\u4e2a spring boot \u9879\u76ee\uff0c\u6839\u636e\u6587\u6863\u6240\u793a\u7f16\u5199 pom \u4f9d\u8d56\u548c\u8fc7\u6ee4\u5668\u7c7b\u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n    ```Java\\n    package indi.yuluo.apisixjavapluginrunnerdemo.filter;\\n\\n    import java.util.ArrayList;\\n    import java.util.List;\\n    import java.util.Map;\\n\\n    import org.apache.apisix.plugin.runner.HttpRequest;\\n    import org.apache.apisix.plugin.runner.HttpResponse;\\n    import org.apache.apisix.plugin.runner.filter.PluginFilter;\\n    import org.apache.apisix.plugin.runner.filter.PluginFilterChain;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n\\n    /**\\n     * @author yuluo\\n     * @author 1481556636@qq.com\\n     */\\n\\n    public class ApiSixFilter implements PluginFilter {\\n\\n        private final Logger log = LoggerFactory.getLogger(ApiSixFilter.class);\\n\\n        @Override\\n        public String name() {\\n\\n            return \\"ApiSixFilter\\";\\n        }\\n\\n        @Override\\n        public void filter(HttpRequest request, HttpResponse response, PluginFilterChain chain) {\\n\\n            log.info(\\"ApiSix Filter is running \u2026\u2026\\");\\n\\n            String body = request.getBody();\\n            log.info(\\"Request Body: {}\\", body);\\n            String path = request.getPath();\\n            log.info(\\"Request Path: {}\\", path);\\n            Map<String, String> headers = request.getHeaders();\\n            headers.forEach((k, v) -> log.info(\\"Request Header key: {}, value: {}\\", k, v));\\n\\n            chain.filter(request, response);\\n        }\\n\\n        /**\\n         * If you need to fetch some Nginx variables in the current plugin,\\n         * you will need to declare them in this function.\\n         * @return a list of Nginx variables that need to be called in this plugin\\n         */\\n        @Override\\n        public List<String> requiredVars() {\\n            List<String> vars = new ArrayList<>();\\n            vars.add(\\"remote_addr\\");\\n            vars.add(\\"server_port\\");\\n            return vars;\\n        }\\n\\n        /**\\n         * If you need to fetch request body in the current plugin,\\n         * you will need to return true in this function.\\n         */\\n        @Override\\n        public Boolean requiredBody() {\\n\\n            return true;\\n        }\\n\\n    }\\n    ```\\n\\n    ```XML\\n    <?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n    <project xmlns=\\"http://maven.apache.org/POM/4.0.0\\" xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"\\n            xsi:schemaLocation=\\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\\">\\n        <modelVersion>4.0.0</modelVersion>\\n\\n        <parent>\\n            <groupId>org.springframework.boot</groupId>\\n            <artifactId>spring-boot-starter-parent</artifactId>\\n            <version>2.7.14</version>\\n            <relativePath/> \x3c!-- lookup parent from repository --\x3e\\n        </parent>\\n\\n        <groupId>indi.yuluo</groupId>\\n        <artifactId>apisix-java-plugin-runner-demo</artifactId>\\n        <version>2023.8.14</version>\\n        <name>apisix-java-plugin-runner-demo</name>\\n        <description>apisix-java-plugin-runner-demo</description>\\n        <packaging>jar</packaging>\\n\\n        <properties>\\n            <java.version>11</java.version>\\n            <maven.compiler.source>11</maven.compiler.source>\\n            <maven.compiler.target>11</maven.compiler.target>\\n        </properties>\\n        <dependencies>\\n            <dependency>\\n                <groupId>org.springframework.boot</groupId>\\n                <artifactId>spring-boot-starter-web</artifactId>\\n            </dependency>\\n\\n            <dependency>\\n                <groupId>org.springframework.boot</groupId>\\n                <artifactId>spring-boot-starter</artifactId>\\n                <exclusions>\\n                    <exclusion>\\n                        <groupId>ch.qos.logback</groupId>\\n                        <artifactId>logback-classic</artifactId>\\n                    </exclusion>\\n                    <exclusion>\\n                        <groupId>org.apache.logging.log4j</groupId>\\n                        <artifactId>log4j-to-slf4j</artifactId>\\n                    </exclusion>\\n                </exclusions>\\n            </dependency>\\n\\n            <dependency>\\n                <groupId>org.springframework.boot</groupId>\\n                <artifactId>spring-boot-starter-test</artifactId>\\n                <scope>test</scope>\\n            </dependency>\\n\\n            <dependency>\\n                <groupId>org.apache.apisix</groupId>\\n                <artifactId>apisix-runner-starter</artifactId>\\n                <version>0.4.0</version>\\n            </dependency>\\n        </dependencies>\\n\\n        <build>\\n            <plugins>\\n                <plugin>\\n                    <groupId>org.springframework.boot</groupId>\\n                    <artifactId>spring-boot-maven-plugin</artifactId>\\n                    <configuration>\\n                        <executable>true</executable>\\n                        <layout>JAR</layout>\\n                    </configuration>\\n                </plugin>\\n            </plugins>\\n        </build>\\n\\n    </project>\\n\\n    ```\\n\\n    ```YAML\\n    server:\\n    port: 30001\\n\\n    spring:\\n    application:\\n        name: apisix-java-plugin-runner\\n\\n    # apisix \u63d2\u4ef6\u914d\u7f6e\\n    cache.config:\\n    expired: ${APISIX_CONF_EXPIRE_TIME}\\n    capacity: 1000\\n\\n    socket:\\n    file: ${APISIX_LISTEN_ADDRESS}\\n    ```\\n\\n2. \u5728 ubuntu server \u4e0a\u914d\u7f6e\u53c2\u6570\\n\\n    \u5728 `./conf/config.yaml` \u4e2d\u914d\u7f6e\u5982\u4e0b\u53c2\u6570\\n\\n    ```Shell\\n    ext-plugin:\\n    path_for_test: /tmp/runner.sock\\n    cmd: [\'java\', \'-jar\', \'-Xmx4g\', \'-Xms4g\', \'/app/apisix-java-plugin-demo/apisix-java-plugin-runner-demo-2023.8.14.jar\']\\n    ```\\n\\n3. \u5728 ubuntu \u4e0a\u542f\u52a8 apisix \u7f51\u5173\u670d\u52a1\\n\\n    ```Shell\\n    apisix start\\n    ```\\n\\n4. \u67e5\u770b apisix \u670d\u52a1\\n\\n    ```shell\\n    root@yuluo-ubuntu:/usr/local/apisix/logs# ps -ef | grep apisix\\n    root       11740       1  0 07:16 ?        00:00:00 nginx: master process /usr/bin/openresty -p /usr/local/apisix -c /usr/local/apisix/conf/nginx.conf\\n    root       11796   11747 43 07:16 ?        00:00:10 java -jar -Xmx4g -Xms4g /app/apisix-java-plugin-demo/example/apisix-plugin/apisix-java-plugin-runner-demo-2023.8.14.jar\\n    root       11845    2509  0 07:16 pts/1    00:00:00 grep --color=auto apisix\\n    ```\\n\\n    \u53ef\u4ee5\u770b\u5230\u63d2\u4ef6\u6b63\u5e38\u542f\u52a8\u3002\\n\\n4. \u53d1\u5e03 api \u63a5\u53e3\u5e76\u521b\u5efa\u8def\u7531\u63d2\u4ef6\u89c4\u5219\\n\\n    ```Shell\\n    root@yuluo-ubuntu:/usr/local/apisix/conf# curl \\"http://127.0.0.1:9180/apisix/admin/routes/1\\" -H \\"X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\\" -X PUT -d \'{\\"methods\\": [\\"POST\\"],\\"uri\\": \\"/question\\",\\"plugins\\":{\\"ext-plugin-pre-req\\":{\\"conf\\":[{\\"name\\":\\"ApiSixFilter\\", \\"value\\":\\"bar\\"}]}},\\"upstream\\": {\\"type\\": \\"roundrobin\\",\\"nodes\\": {\\"127.0.0.1:9876\\": 1}}}\'\\n\\n    {\\"key\\":\\"/apisix/routes/1\\",\\"value\\":{\\"upstream\\":{\\"pass_host\\":\\"pass\\",\\"nodes\\":{\\"192.168.20.129:9876\\":1},\\"type\\":\\"roundrobin\\",\\"scheme\\":\\"http\\",\\"hash_on\\":\\"vars\\"},\\"create_time\\":1691996598,\\"uri\\":\\"/question\\",\\"status\\":1,\\"plugins\\":{\\"ext-plugin-pre-req\\":{\\"allow_degradation\\":false,\\"conf\\":[{\\"name\\":\\"ApiSixFilter\\",\\"value\\":\\"bar\\"}]}},\\"id\\":\\"1\\",\\"priority\\":0,\\"update_time\\":1691996598,\\"methods\\":[\\"POST\\"]}}\\n    ```\\n\\n5. \u8bf7\u6c42\u63a5\u53e3\uff0c\u67e5\u770b\u54cd\u5e94\u5185\u5bb9\\n\\n    - \u63a5\u53e3\u529f\u80fd\u6d4b\u8bd5\\n\\n    ![Alt text](/img/Install_and_ubderstand_apisix/image11.png)\\n    \\n    - \u901a\u8fc7 apisix \u7f51\u5173\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u6d4b\u8bd5\\n\\n    ![Alt text](/img/Install_and_ubderstand_apisix/image10.png)\\n    \\n    APISIX \u7f51\u5173\u65e5\u5fd7\u5982\u4e0b\uff1a\\n\\n    ![Alt text](/img/Install_and_ubderstand_apisix/image12.png)\\n    \\n    - \u67e5\u770b\u6253\u5370\u7684\u65e5\u5fd7\u6d88\u606f\\n\\n        \u65e5\u5fd7\u4fe1\u606f\u5982\u4e0b\uff1a\\n    \\n        ![Alt text](/img/Install_and_ubderstand_apisix/image13.png)\\n\\n#### \u95ee\u9898\u8bb0\u5f55\\n\\n1. mvn \u6253\u5305\u5931\u8d25\\n\\n    \u95ee\u9898\u63cf\u8ff0\uff1a`Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:compile (default-compile) on project apisix-java-plugin-runner-demo: Fatal error compiling: \u65e0\u6548\u7684\u76ee\u6807\u53d1\u884c\u7248: 11 -> [Help 1]`\\n    \u6253\u5305\u65f6\u51fa\u73b0\uff0c\u56e0\u4e3a \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u7684 java \u7248\u672c\u548c pom \u4e2d\u6307\u5b9a\u7684 java \u7248\u672c\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\u95ee\u9898\u3002\u66f4\u6539\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u7684 java \u7248\u672c\u518d\u6b21\u6253\u5305\u5373\u53ef\uff01\\n\\n2. \u9700\u8981\u5b89\u88c5 java \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4e0d\u7136\u53ef\u80fd\u51fa\u73b0\u63d2\u4ef6\u8fd0\u884c\u5931\u8d25\u7684\u60c5\u51b5\uff01"},{"id":"gpt-interface-server","metadata":{"permalink":"/blog/gpt-interface-server","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/GPT-\u63a5\u53e3\u670d\u52a1.md","source":"@site/blog/AI-large-models/GPT-\u63a5\u53e3\u670d\u52a1.md","title":"GPT \u63a5\u53e3\u670d\u52a1","description":"\u80cc\u666f","date":"2023-08-23T23:34:54.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"GPT","permalink":"/blog/tags/gpt"},{"inline":true,"label":"Spring Boot","permalink":"/blog/tags/spring-boot"}],"readingTime":0.9266666666666666,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"gpt-interface-server","title":"GPT \u63a5\u53e3\u670d\u52a1","date":"2023-08-23T23:34:54.000Z","authors":"yuluo","tags":["AI","GPT","Spring Boot"],"keywords":["AI","GPT"]},"unlisted":false,"prevItem":{"title":"Install-And-Understand-APISIX","permalink":"/blog/install-and-understand-apisix-gw"},"nextItem":{"title":"Github Action \u5f00\u53d1\u6559\u7a0b","permalink":"/blog/github-action-dev-cursor"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\\n\\n\u6765\u81ea [api7](https://api7.ai) \u516c\u53f8\u7684\u5b9e\u4e60\u7b14\u8bd5\u9898\u3002\u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a GPT \u63a5\u53e3\u670d\u52a1\uff0c\u4f7f\u7528 APISIX \u8fdb\u884c\u63a5\u53e3\u4fdd\u62a4\u3002\\n\\n## \u6280\u672f\u6808\\n\\n\u672c\u9879\u76ee\u4f7f\u7528 `JDK 17`\uff0c `Spring Boot` \u7f16\u5199\u3002\\n\\n## \u4f7f\u7528\u65b9\u6cd5\\n\\nGithub \u5730\u5740\uff1ahttps://github.com/yuluo-yx/gpt-api-server\\n\\n### docker \u542f\u52a8\\n\\n1. postman \u4e2d\u8f93\u5165\u5730\u5740\uff0c\u8bf7\u6c42\u7c7b\u578b\u4e3a post `http://ip:9876/question` \uff0c\u8bbe\u7f6e\u8bf7\u6c42\u4f53\u4fe1\u606f\u5982\u4e0b\uff1b\\n\\n   ```json\\n   {\\n       \\"model\\": \\"gpt-3.5-turbo\\",\\n       \\"messages\\": [{\\"role\\": \\"user\\", \\"content\\": \\"Say this is a test!\\"}],\\n       \\"temperature\\": 0.7\\n   }\\n   ```\\n\\n2. \u786e\u4fdd\u672c\u5730\u4ee3\u7406\u6b63\u5e38\u53ef\u7528\uff0c`clash` \u6253\u5f00 `Allow LAN` \u5f00\u5173\uff0c\u786e\u4fdd\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u5916\u7f51\uff1b\\n\\n3. \u66f4\u6539 `docker/app/application-docker.yml` \u4e2d\u7684 `spring.gpt.service.proxy-address` \u4e3a\u81ea\u5df1\u4ee3\u7406\u5730\u5740\uff1b\\n\\n4. \u66f4\u6539 `docker/app/application-docker.yml` \u4e2d\u7684 `spring.gpt.service.apikey` \u4e3a\u81ea\u5df1\u7684 `apiKey` \uff1b\\n\\n5. \u8fdb\u5165 `docker-compose,yml` \u6240\u5728\u6587\u4ef6\u5939\uff0c\u8fd0\u884c `docker-compose up -d` \u542f\u52a8 GPT \u63a5\u53e3\u670d\u52a1\u3002\\n\\n### \u672c\u5730\u542f\u52a8\\n\\n1. \u786e\u4fdd\u672c\u5730\u4ee3\u7406\u6b63\u5e38\u53ef\u7528\uff0c`clash` \u6253\u5f00 `Allow LAN` \u5f00\u5173\uff0c\u786e\u4fdd\u5c40\u57df\u7f51\u5185\u8bbe\u5907\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u5916\u7f51\uff1b\\n\\n2. \u66f4\u6539 `src/main/resources/application.yml` \u4e2d\u7684 `spring.gpt.service.proxy-address` \u4e3a\u81ea\u5df1\u4ee3\u7406\u5730\u5740\uff1b\\n\\n3. \u66f4\u6539 `src/main/resources/application.yml` \u4e2d\u7684 `spring.gpt.service.apikey` \u4e3a\u81ea\u5df1\u7684 apikey \uff1b\\n\\n4. \u542f\u52a8 `spring Boot` \u9879\u76ee\u4e3b\u7c7b\uff1b\\n\\n5. postman \u8bbf\u95ee\u63a5\u53e3\u6d4b\u8bd5\u3002\\n\\n### postman \u8c03\u7528\u6548\u679c\u5c55\u793a:\\n\\n<img src=\\"/img/gpt/img.png\\"/ >"},{"id":"github-action-dev-cursor","metadata":{"permalink":"/blog/github-action-dev-cursor","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/everythings/Github-Action-\u5f00\u53d1\u6559\u7a0b.md","source":"@site/blog/everythings/Github-Action-\u5f00\u53d1\u6559\u7a0b.md","title":"Github Action \u5f00\u53d1\u6559\u7a0b","description":"\u5728\u4f7f\u7528 Github \u65f6\uff0c\u4f60\u53ef\u80fd\u5728\u4e00\u4e9b\u8457\u540d\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4f8b\u5982 Kubernetes\uff0cIstio \u4e2d\u770b\u5230\u5982\u4e0b\u7684\u4e00\u4e9b\u8bc4\u8bba\uff1a","date":"2023-08-23T23:34:54.000Z","tags":[{"inline":true,"label":"Github","permalink":"/blog/tags/github"},{"inline":true,"label":"Actions","permalink":"/blog/tags/actions"}],"readingTime":3.1766666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"github-action-dev-cursor","title":"Github Action \u5f00\u53d1\u6559\u7a0b","date":"2023-08-23T23:34:54.000Z","authors":"yuluo","tags":["Github","Actions"],"keywords":["Github","github actions","dev"]},"unlisted":false,"prevItem":{"title":"GPT \u63a5\u53e3\u670d\u52a1","permalink":"/blog/gpt-interface-server"},"nextItem":{"title":"Github \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2","permalink":"/blog/use-github-build-personal-blog"}},"content":"\x3c!-- truncate --\x3e\\n\\n\u5728\u4f7f\u7528 Github \u65f6\uff0c\u4f60\u53ef\u80fd\u5728\u4e00\u4e9b\u8457\u540d\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4f8b\u5982 Kubernetes\uff0cIstio \u4e2d\u770b\u5230\u5982\u4e0b\u7684\u4e00\u4e9b\u8bc4\u8bba\uff1a\\n\\n```bash\\n/lgtm\\n/retest\\n/area bug\\n/assign @xxxx\\n...\\n```\\n\\n\u7b49\u7b49\uff0c\u8bf8\u5982\u6b64\u7c7b\u7684\u4e00\u4e9b\u529f\u80fd\u6027\u8bc4\u8bba\u3002\u5728\u8fd9\u4e9b\u8bc4\u8bba\u51fa\u73b0\u65f6\uff0c\u5f80\u5f80\u4f1a\u51fa\u73b0\u4e00\u4e2a Github-bot \u7ed9\u95ee\u9898\u6dfb\u52a0\u4e00\u4e9b label\uff0c\u5c06 issue \u5206\u914d\u7ed9\u6307\u5b9a\u7684\u4eba\u7b49\u7b49\u3002\u7c7b\u4f3c\u6ce8\u5165\u6b64\u7c7b\u7684\u52a8\u4f5c\u90fd\u662f\u901a\u8fc7 Github Action \u5b8c\u6210\u7684\u3002\u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5f00\u53d1\u4e00\u4e2a Github Action Bot\u3002\\n\\n## \u529f\u80fd\u8c03\u7814\\n\\n\u8981\u5b9e\u73b0\u7684 Action \u52a8\u4f5c\u4e3a\u5728 PR \u4e0b\u9762\u8bc4\u8bba `/retest` \u89e6\u53d1 action\uff0c\u81ea\u52a8\u6536\u96c6\u8fd0\u884c\u5931\u8d25\u7684\u5de5\u4f5c\u6d41 job\uff0c\u5e76\u91cd\u65b0\u8fd0\u884c\u3002\u6211\u4eec\u501f\u9274\u5df2\u6709\u7684 Action\uff1a\\n\\n- https://github.com/envoyproxy/toolshed/tree/main/gh-actions/retest\\n\\nenvoy \u7684\u5b9e\u73b0\u662f\u901a\u8fc7 ts \u7ed3\u5408 Github \u7684 Rest API \u5b8c\u6210\uff1a\\n\\n- https://docs.github.com/en/rest/pages/pages?apiVersion=2022-11-28\\n\\n## \u5b9e\u73b0\\n\\n\u672c\u9879\u76ee\u4f7f\u7528 Go \u8bed\u8a00\u7f16\u5199\uff0c\u901a\u8fc7 Github API Golang \u5b9e\u73b0\u548c Github \u4ea4\u4e92\uff0c\u7f16\u5199\u5b8c\u6210\u4e4b\u540e\uff0c\u53d1\u5e03\u5230 Github Action Marketplace\u3002\\n\\n- https://github.com/actions-go/toolkit\\n- https://github.com/google/go-github\\n\\n### \u5927\u81f4\u601d\u8def\\n\\n> 1. \u6839\u636e\u4f20\u5165\u7684 pr url\uff0c\u83b7\u53d6 pr \u7684\u4fe1\u606f\uff1b\\n> 2. \u4e4b\u540e\u6839\u636e comment id \u83b7\u53d6 comment \u5185\u5bb9\uff0c\u5224\u65ad\u662f\u5426\u4e3a `/retest` \u662f\uff0c\u5219\u6536\u96c6\u5931\u8d25\u7684 job\uff0c\u518d\u6b21\u8fd0\u884c\uff1b\\n> 3. \u5224\u65ad job rerun \u662f\u5426\u6210\u529f\uff0c\u6210\u529f\u7ed9 comment \u52a0\u5165  `\ud83d\ude80` \u54cd\u5e94\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u6210\u529f\u662f\u6307\u521b\u5efa rerun-job \u6210\u529f\uff0c\u4e0d\u662f\u6307 job \u672c\u8eab\u6210\u529f\uff01\\n> 4. \u8fd0\u884c\u7ed3\u675f\u3002\\n\\n### \u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\\n\\n```bash\\n\u2502  .gitignore\\n\u2502  action.yml     # action.yml \u914d\u7f6e\\n\u2502  Dockerfile     # \u9879\u76ee\u8fd0\u884c\u9700\u8981\u7684 Dockerfile\\n\u2502  go.mod\\n\u2502  go.sum\\n\u2502  LICENSE\\n\u2502  main.go      # \u5165\u53e3 main.go \u6587\u4ef6\\n\u2502  README.md\\n\u2502\\n\u251c\u2500.github\\n\u2502  \u2514\u2500workflows\\n\u2502          build-and-test.yml  \\n\u2502          retest.yml\\n\u2514\u2500retest      # retest \u903b\u8f91\u5b9e\u73b0\\n        retest.go\\n        retest_test.go\\n        types.go\\n```\\n\\n### Github Action \u914d\u7f6e\\n\\n\u521b\u5efa action.yml \u914d\u7f6e\u6587\u4ef6\uff1a\\n\\n```yml\\nname: \\"Github Pull Request Retest\\"\\ndescription: \'Re-run failed GitHub Workflow runs on PRs by commenting \\"/retest\\".\'\\nauthor: \\"yuluo\\"\\nbranding:\\n  color: blue\\n  icon: activity\\ninputs:\\n  token:\\n    description: >\\n      GitHub token used to create and remove comments. By default, this uses the\\n      repository token provided by GitHub Actions. You can customize the user by\\n      replacing this token with a user token which has write-access to your\\n      repository. Note that the token will be accessible to all repository\\n      collaborators.\\n    default: ${{ github.token }}\\n  comment-id:\\n    description: >-\\n      ID of comment for response\\n    required: true\\n    type: number\\n  pr-url:\\n    description: >-\\n      URL to fetch PR information\\n    required: true\\n\\nruns:\\n  using: \'docker\'\\n  image: \'Dockerfile\'\\n  args:\\n    - ${{ inputs.token }}\\n    - ${{ inputs.comment-id }}\\n    - ${{ inputs.pr-url }}\\n    - ${{ inputs.args }}\\n```\\n\\n\u6b64\u914d\u7f6e\u6587\u4ef6\u4e2d\u4e3b\u8981\u53c2\u6570\u5982\u4e0b\uff1a\u6587\u6863 https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions\\n\\n\u4f5c\u8005\uff0c\u540d\u5b57\uff0c\u63cf\u8ff0\u7b49\u5f0f\u5fc5\u987b\u7684\u3002inputs \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a\\n\\n```yml\\ninputs: # \u53c2\u6570\u7684\u5b57\u5178\\n  milliseconds: # change this # \u53c2\u6570\u540d,\\n    required: true # \u662f\u5426\u662f\u5fc5\u586b\\n    description: \\"input description here\\" # \u53c2\u6570\u7684\u8bf4\u660e\\n    default: \\"default value if applicable\\" # \u9ed8\u8ba4\u503c\\n```\\n\\n**\u6ce8\u610f\uff1ainputs \u53c2\u6570\u662f\u9700\u8981\u5728 .github/workflows/action-ci.yml \u4e2d\u914d\u7f6e\u7684\u8f93\u5165\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u914d\u7f6e\uff0c\u83b7\u53d6\u5230\u7684\u8f93\u5165\u662f\u7a7a\u503c\uff01**\\n\\nruns \u53c2\u6570\uff1a\\n\\n```yml\\nruns:\\n  # \u8fd0\u884c action \u7684\u65b9\u5f0f\uff0cenvoy \u901a\u8fc7 nodejs \u8fd0\u884c\\n  using: \'docker\'\\n  # \u5728\u9879\u76ee\u4e2d\u9700\u8981\u7f16\u5199 Dockerfile\uff0c\u4f5c\u4e3a\u955c\u50cf\u5165\u53e3\uff0cenvoy \u4f7f\u7528 ts \u7f16\u5199\uff0c\u6240\u4ee5\u5165\u53e3\u4e3a main: index.js\\n  image: \'Dockerfile\'\\n  # \u8fd0\u884c\u65f6\u8f93\u5165\u5230 Docker container \u5185\u90e8\u7684\u53c2\u6570\u3002\\n  args:\\n    - ${{ inputs.token }}\\n    - ${{ inputs.comment-id }}\\n    - ${{ inputs.pr-url }}\\n    - ${{ inputs.args }}\\n```\\n\\n\u672c\u6b21\u7f16\u5199\u4e2d\u4e3b\u8981\u7528\u5230\u7684\u914d\u7f6e\u9879\u4e3a\u4ee5\u4e0a\u4e24\u4e2a\uff0c\u66f4\u591a\u7684\u53c2\u6570\u53ef\u4ee5\u53c2\u8003\u6587\u6863\u3002\\n\\n### \u53d1\u5e03\\n\\nGithub Action Marketplace\uff1ahttps://github.com/marketplace/new\\n\\n\u9879\u76ee\u5728\u7f16\u5199\u5b8c\u6210\u4e4b\u540e\uff0c\u5efa\u7acb\u4e00\u4e2a github repo\uff0c\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u4ed3\u5e93\uff0c\u4e4b\u540e\u70b9\u51fb\u4e0a\u8ff0\u5730\u5740\uff0c\u5c31\u4f1a\u51fa\u73b0 actions \u9009\u62e9\u3002\u53d1\u5e03\u9700\u8981\u521b\u5efa\u7248\u672c\uff0c\u6839\u636e\u8981\u6c42\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7248\u672c\u5373\u53ef\u3002\u5728\u53d1\u5e03\u65f6\u4f1a\u68c0\u6d4b action.yml \u914d\u7f6e\uff0c\u5728\u5408\u6cd5\u4e4b\u540e\u624d\u4f1a\u5141\u8bb8\u53d1\u5e03\u3002\\n\\n\u53d1\u5e03\u6210\u529f\u5982\u4e0b\uff1a\\n\\nhttps://github.com/marketplace/actions/github-pull-request-retest\\n\\n![Github Action \u53d1\u5e03\u9884\u89c8c](/img/githubaction/images1.png)\\n\\n## \u4f7f\u7528\\n\\n\u4e4b\u540e\u5728\u4efb\u610f\u4ed3\u5e93\u7684 .github/workflows/command.yml \u4e2d\u914d\u7f6e\u5982\u4e0b\u5185\u5bb9\u5373\u53ef\u4f7f\u7528\uff1a\\n\\n```yml\\nname: Retest Action on PR Comment\\n\\non:\\n  issue_comment:\\n    types: [created]\\n\\npermissions:\\n  contents: read\\n\\njobs:\\n  retest:\\n    name: Retest\\n    runs-on: ubuntu-22.04\\n    permissions:\\n      pull-requests: write\\n      actions: write\\n    steps:\\n      - uses: yuluo-yx/gh-retest@v1.0.0-RC1\\n        with:\\n          token: ${{ secrets.GITHUB_TOKEN }}\\n          comment-id: ${{ github.event.comment.id }}\\n          pr-url: ${{ github.event.issue.pull_request.url }}\\n```\\n\\n> \u5728\u6b64\u4ed3\u5e93\u5bf9\u5e94\u7684 pr \u4e0b\u9762\u8f93\u5165 `/retest` \uff0c\u89c2\u5bdf\u4ed3\u5e93 Action \u5373\u53ef\u770b\u5230 job \u81ea\u52a8 rerun\u3002\\n\\n\u9879\u76ee\u5730\u5740\uff1a[deigmata-paideias/gh-retest](https://github.com/deigmata-paideias/gh-retest)\uff0c\u6b22\u8fce star\u3002\ud83d\ude80\ud83d\ude80"},{"id":"use-github-build-personal-blog","metadata":{"permalink":"/blog/use-github-build-personal-blog","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/everythings/Github-\u642d\u5efa\u4e2a\u4eba\u535a\u5ba2.md","source":"@site/blog/everythings/Github-\u642d\u5efa\u4e2a\u4eba\u535a\u5ba2.md","title":"Github \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2","description":"\u51c6\u5907\u5de5\u4f5c","date":"2023-08-23T23:34:54.000Z","tags":[{"inline":true,"label":"Blog","permalink":"/blog/tags/blog"}],"readingTime":3.9833333333333334,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"use-github-build-personal-blog","title":"Github \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2","date":"2023-08-23T23:34:54.000Z","authors":"yuluo","tags":["Blog"],"keywords":["Hexo","Blog","Github"]},"unlisted":false,"prevItem":{"title":"Github Action \u5f00\u53d1\u6559\u7a0b","permalink":"/blog/github-action-dev-cursor"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n- \u51c6\u5907\u4e00\u4e2a github \u8d26\u53f7\uff1b\\n- \u5efa\u7acb github \u4ed3\u5e93\uff0c**\u4ed3\u5e93\u540d\u4e3a username.github.io**\uff0c\u540c\u65f6\u8bbe\u7f6e\u4ed3\u5e93\u4e3a public\uff1b\\n- clone \u4ed3\u5e93\uff0c\u5199\u5165\u4e00\u4e2a index.html \u6587\u4ef6\uff0c\u63a8\u9001\u5230\u4ed3\u5e93\uff08\u8bb8\u591a\u7f51\u4e0a\u7684\u6559\u7a0b\u4f1a\u6709 choose theme\uff0c\u4f46\u662f\u65b0\u7248\u672c\u7684 github \u6ca1\u6709\u8fd9\u4e2a\u4e1c\u897f\uff01\uff09\uff1b\\n- \u6d4f\u89c8\u5668\u8f93\u5165 https://username.github.io \u8bbf\u95ee\uff01\\n\\n<p class=\\"note note-info\\">\\n    Note:  push \u4ee3\u7801\u4e4b\u540e\u53ef\u80fd\u9700\u8981 \u7b49\u4e00\u4f1a \u624d\u80fd\u54cd\u5e94\u5185\u5bb9\u3002\\n    <br />\\n    \u5173\u4e8e Github Pages \u7684\u4e00\u4e9b\u8bbe\u7f6e\u5728 repo -> setting -> Pages \u4e2d\uff0c\u4f8b\u5982\uff0c\u7ed1\u5b9a\u57df\u540d\uff0c\u9009\u62e9\u6784\u5efa\u5206\u652f\u7b49\uff0c\u4e00\u822c\u9ed8\u8ba4\u5373\u53ef\\n</p>\\n\\n## \u8fdb\u9636\u8bbe\u7f6e\\n\\n<p class=\\"note note-info\\">\u901a\u8fc7\u4e4b\u524d\u7684\u6b65\u9aa4\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u53ef\u4ee5\u8bbf\u95ee\u5230\u4f60\u7684 blog \u4e86\uff0c\u5f53\u7136\u9875\u9762\u975e\u5e38 **\u4e11**\uff01</p>\\n\\n- \u5b89\u88c5 Node \uff08\u767e\u5ea6\u5b89\u88c5\uff09\\n- \u5b89\u88c5 Git\\n\\n### 1. \u5b89\u88c5 hexo\\n\\n```shell\\n# \u5168\u5c40\u5b89\u88c5\uff08\u63a8\u8350\u5168\u5c40\uff09\\nnpm install hexo -g\\n# \u5c40\u90e8\u5b89\u88c5\\nnpm install hexo\\n\\n# \u4efb\u610f\u76ee\u5f55\u5efa\u7acb\u6587\u4ef6\u5939\\nmkdir blog && cd blog\\n\\n# \u521d\u59cb\u5316 Hexo \u9879\u76ee\\nhexo init\\n\\n# \u4ee5\u672c\u5730\u670d\u52a1\u7684\u5f62\u5f0f\u542f\u52a8 hexo \u63a7\u5236\u53f0\u4f1a\u663e\u793a\u8bbf\u95ee\u5730\u5740\uff0c\u5f53\u7136\u4e5f\u975e\u5e38\u4e11\uff01\\nhexo server / hexo s\\n```\\n\\n### 2. \u5b89\u88c5 Fluid \u4e3b\u9898\\n\\n1. \u4e0b\u8f7d\u6700\u65b0\u7684  Fluid Release \u7248\u672c\u3002<a class=\\"btn\\" href=\\"https://github.com/fluid-dev/hexo-theme-fluid/releases\\" title=\\"\u70b9\u51fb\u4e0b\u8f7d\\">\u70b9\u51fb\u8df3\u8f6c</a>\\n\\n2. \u89e3\u538b\u5230 hexo \u7684 theme \u6587\u4ef6\u5939\u4e0b\uff0c\u5e76\u91cd\u547d\u540d\u4e3a fluid\\n\\n3. \u8986\u76d6\u914d\u7f6e\u6587\u4ef6\\n\\n   ```shell\\n   # \u590d\u5236 /themes/fluid/_config.yml \u5230\u6839\u76ee\u5f55\u4e0b\uff0c\u5e76\u91cd\u547d\u540d\u4e3a _config.fluid.yml\\n   ```\\n\\n4. \u4fee\u6539 hexo \u6839\u76ee\u5f55\u4e0b\u7684 _config.yaml \u6587\u4ef6\\n\\n   ```shell\\n   theme: fluid  # \u6307\u5b9a\u4e3b\u9898\\n   language: zh-CN  # \u6307\u5b9a\u8bed\u8a00\uff0c\u4f1a\u5f71\u54cd\u4e3b\u9898\u663e\u793a\u7684\u8bed\u8a00\uff0c\u6309\u9700\u4fee\u6539 (\u4e0d\u9700\u8981\u91cd\u5199\uff0c\u524d\u9762\u6709\uff0c\u641c\u7d22\u627e\u5230\u4fee\u6539\u5373\u53ef\uff01)\\n   ```\\n\\n5. \u521b\u5efa\u5173\u4e8e\u9875\\n\\n   ```shell\\n   # \u547d\u4ee4\\n   hexo new page about\\n   \\n   # \u521b\u5efa\u6210\u529f\u540e\uff0c\u4fee\u6539 /source/about/index.html\uff0c\u6dfb\u52a0 layout \u5c5e\u6027\\n   ---\\n   title: about\\n   date: 2020-02-23 19:20:33\\n   layout: about\\n   ---\\n   \\n   \u8fd9\u91cc\u5199\u5173\u4e8e\u9875\u7684\u6b63\u6587\uff0c\u652f\u6301 Markdown, HTML\\n   ```\\n\\n6. \u91cd\u65b0\u542f\u52a8\\n\\n   ```shell\\n   hexo server\\n   ```\\n\\n7. \u4e0d\u51fa\u610f\u5916\uff0c\u4fee\u6539\u4e3b\u9898\u4e4b\u540e\u7684 blog \u5df2\u7ecf\u663e\u793a\u6210\u529f\u4e86\uff01\\n\\n### 3. \u521b\u5efa\u6587\u7ae0\\n\\n1. \u5982\u4e0b\u4fee\u6539 Hexo \u535a\u5ba2\u76ee\u5f55\u4e2d\u7684 `_config.yml`\uff0c\u6253\u5f00\u8fd9\u4e2a\u914d\u7f6e\u662f\u4e3a\u4e86\u5728\u751f\u6210\u6587\u7ae0\u7684\u65f6\u5019\u751f\u6210\u4e00\u4e2a\u540c\u540d\u7684\u8d44\u6e90\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u56fe\u7247\u6587\u4ef6\u3002\\n\\n   <p class=\\"note note-warning\\">\u7f51\u4e0a\u8fd9\u4e48\u8bf4\u7684\uff0c\u672c\u4eba\u6d4b\u8bd5\u65e0\u6548\uff0c\u56fe\u7247\u6587\u4ef6\u653e\u5728 `themes\\\\fluid\\\\source\\\\img` \u8def\u5f84\u624d\u80fd\u8bbf\u95ee\u5230\u3002</p>\\n\\n   ```yaml\\n   post_asset_folder: true\\n   ```\\n\\n   \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u7bc7\u65b0\u6587\u7ae0\uff0c\u540d\u4e3a test **\uff08\u6587\u7ae0\u540d\u53ef\u4ee5\u4e3a\u4e2d\u6587\uff0c\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\u7528\u5f15\u53f7\u5f15\u8d77\u6765\uff09**\\n\\n   ```shell\\n   hexo new post test\\n   ```\\n\\n2. \u5728 source/_post/test \u4e2d\u653e\u4e00\u5f20\u56fe\u7247\uff0c\u4e4b\u540e\u4fee\u6539 test.md \u6587\u7ae0\u5185\u5bb9\u5982\u4e0b\\n\\n   <p class=\\"note note-warning\\">\u53c2\u8003\u7b2c\u4e00\u6b65\u4e2d\u7684\u52a0\u7c97\u5185\u5bb9</p>\\n\\n   ```md\\n   ---\\n   title: \u6d4b\u8bd5\u6587\u7ae0\\n   date: 2023-08-23 21.24:35:20\\n   # \u6587\u7ae0\u9996\u9875\u5c01\u9762\u56fe\\n   index_img: /img/bgc.jpg\\n   # \u6587\u7ae0\u9875\u9876\u90e8\u5927\u56fe\\n   banner_img: /img/bgc.jpg\\n   tags:\\n   - \u539f\u521b\\n   categories:\\n   - test\\n   ---\\n   \\n   \u8fd9\u662f\u4e00\u7bc7\u6d4b\u8bd5\u6587\u7ae0\uff01\\n   \\n   ![\u56fe\u7247\u5f15\u7528](/img/bgc.jpg)\\n   \\n   \u4fbf\u7b7e\\n   <p class=\\"note note-primary\\">\u6807\u7b7e</p>\\n   <p class=\\"note note-success\\">\u6807\u7b7e</p>\\n   <p class=\\"note note-warning\\">\u6807\u7b7e</p>\\n   <p class=\\"note note-info\\">\u6807\u7b7e</p>\\n   \\n   \u884c\u5185\u6807\u7b7e\\n   <span class=\\"label label-primary\\">Label</span>\\n   <span class=\\"label label-success\\">Label</span>\\n   \\n   \u6309\u94ae\\n   <a class=\\"btn\\" href=\\"url\\" title=\\"title\\">text</a>\\n   ```\\n\\n3. \u542f\u52a8\u5e76\u8bbf\u95ee\\n\\n   ```shell\\n   # \u751f\u6210 public \u6587\u4ef6\u5939\\n   hexo g\\n   \\n   # \u4ee5\u672c\u5730\u670d\u52a1\u5f62\u5f0f\u542f\u52a8\\n   hexo server\\n   ```\\n\\n### 4. \u4e2a\u6027\u5316\u5b9a\u5236\\n\\n\u5982\u679c\u60f3\u8981\u5feb\u901f\u67e5\u770b\u66f4\u6539\u540e\u7684\u663e\u793a\u914d\u7f6e\uff0c\\n\\n\u6267\u884c hexo clean \u6e05\u9664\u7f13\u5b58\\n\u6267\u884c hexo s \u9884\u89c8\uff01\\n\\n1. \u6d4f\u89c8\u5668\u6807\u7b7e\u9875\u540d\u79f0\\n\\n   ```shell\\n   # \u4fee\u6539\u6839\u76ee\u5f55\u4e0b _config.yml \u4e2d\u7684 title \u5b57\u6bb5\u3002\\n   # Site\\n   title: Yuluo\'s blog\\n   ```\\n\\n2. \u535a\u5ba2\u6807\u9898\\n\\n   ```shell\\n   # \u4fee\u6539\u6839\u76ee\u5f55\u4e0b\u7684 _config.fluid.yml \u4e2d\u7684 blog_title \u5b57\u6bb5\u3002\\n   navbar:\\n     blog_title: \\"Yuluo\'s blog\\"\\n   ```\\n   \\n3. \u4e3b\u9875\u6b63\u4e2d\u95f4\u7684\u6587\u5b57\\n\\n   ```shell \\n   # \u4fee\u6539\u6839\u76ee\u5f55\u4e0b\u7684 _config.fluid.yml \u4e2d\u7684 text \u5b57\u6bb5\u3002\\n   slogan:\\n    enable: true\\n   \\n       # \u4e3a\u7a7a\u5219\u6309 hexo config.subtitle \u663e\u793a\\n       # If empty, text based on `subtitle` in hexo config\\n       text: \\"\u829d\u5170\u751f\u4e8e\u7a7a\u8c37\uff0c\u4e0d\u4ee5\u65e0\u4eba\u800c\u4e0d\u82b3!\\"\\n   ```\\n\\n4. \u5176\u4ed6\u914d\u7f6e\u5747\u53ef\u5728  `_config.fluid.yml` \u67e5\u770b\u8fdb\u884c\u4e2a\u6027\u5316\u4fee\u6539\u3002\\n\\n   ```shell\\n   # \u4f8b\u5982\uff1a\u5176\u4ed6 navbar \u7684\u80cc\u666f\u5927\u56fe\u53ca\u5176\u4ed6\u8bbe\u7f6e Line 930\\n   #---------------------------\\n   # \u6807\u7b7e\u9875\\n   # Tag Page\\n   #---------------------------\\n   tag:\\n     enable: true\\n     banner_img: /img/default.png\\n     banner_img_height: 80\\n     banner_mask_alpha: 0.3\\n     tagcloud:\\n       min_font: 15\\n       max_font: 30\\n       unit: px\\n       start_color: \\"#BBBBEE\\"\\n       end_color: \\"#337ab7\\"\\n       \\n       \\n   # \u7528\u4e8e\u6d4f\u89c8\u5668\u6807\u7b7e\u7684\u56fe\u6807 line 19\\n   # Icon for browser tab\\n   favicon: /img/fluid.png\\n   ```\\n\\n5. \u5173\u4e8e\u9875\u7684\u56fe\u6807\u8bbe\u7f6e\\n\\n   \u5730\u5740\uff1ahttps://hexo.fluid-dev.com/docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87\\n\\n   ```shell\\n   # line\uff1a960  \u627e\u5230 icon \u7684\u540d\u5b57\u66ff\u6362\u5373\u53ef\\n   - { class: \\"iconfont icon-github-fill\\", link: \\"https://github.com\\", tip: \\"GitHub\\" }\\n   - { class: \\"iconfont icon-douban-fill\\", link: \\"https://douban.com\\", tip: \\"\u8c46\u74e3\\" }\\n   - { class: \\"iconfont icon-wechat-fill\\", qrcode: \\"/img/favicon.png\\" }\\n   ```\\n\\n6. \u6587\u7ae0\u4e2d\u5e95\u90e8\u7684\u4f5c\u8005\u548c\u8fde\u63a5\u4fee\u6539\\n\\n   ```shell\\n   # \u6839\u76ee\u5f55\u4e0b\u7684 _config.yml \u914d\u7f6e\u4e2d\u5206\u522b\u641c\u7d22 url \u548c author\\n   \\n   # \u6587\u7ae0\u4f5c\u8005 line 10\\n   keywords:\\n   author: yulu\\n   \\n   # URL  line 16\\n   ## Set your site url here. For example, if you use GitHub Page, set url as \'https://username.github.io/project\'\\n   url: http://yuluo-yx.github.i\\n   ```\\n\\n## \u90e8\u7f72\u5230 github pages\\n\\n\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u8fd9\u91cc\u9009\u62e9\u8f83\u4e3a\u7b80\u5355\u7684\u4e00\u79cd\\n\\n> \u63a8\u9001\u6839\u76ee\u5f55\u4e0b\u7684 public \u76ee\u5f55\u5230 github \u4ed3\u5e93\u4e2d\uff0c\u8bbf\u95ee\u5373\u53ef\uff01\\n>\\n\\n<p class=\\"note note-success\\">\u5982\u679c\u6ca1\u6709public\uff0c\u8fd0\u884c `hexo g` \u751f\u6210\u5373\u53ef\uff01push \u4e0a\u53bb\u7b49\u5f85\u4e00\u4f1a\u5237\u65b0\uff0c\u67e5\u770b\u6548\u679c</p>"}]}}')}}]);