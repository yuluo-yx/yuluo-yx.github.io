"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[30],{36941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>u});var r=t(8208),i=t(25105),a=t(89999);const l={slug:"spring-cloud-alibaba-module-rag",title:"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528",date:new Date("2025-03-11T21:01:08.000Z"),authors:"yuluo",tags:["AI","Spring AI Alibaba","Module RAG","DeepSeek"],keywords:["AI","Spring AI Alibaba","Module RAG","DeepSeek"],image:"/img/ai/module-rag/bgc.png"},s="\u4f7f\u7528 Spring AI Alibaba \u6784\u5efa\u5927\u6a21\u578b\u8054\u7f51\u641c\u7d22\u5e94\u7528",o={authorsImageUrls:[void 0]},u=[{value:"Spring AI \u6a21\u5757\u5316 RAG \u4f53\u7cfb",id:"spring-ai-\u6a21\u5757\u5316-rag-\u4f53\u7cfb",level:2},{value:"Pre-Retrieval",id:"pre-retrieval",level:3},{value:"Retrieval",id:"retrieval",level:3},{value:"Post-Retrieval",id:"post-retrieval",level:3},{value:"\u751f\u6210",id:"\u751f\u6210",level:3},{value:"Web Search \u5b9e\u8df5",id:"web-search-\u5b9e\u8df5",level:2},{value:"\u8d44\u6e90\u51c6\u5907",id:"\u8d44\u6e90\u51c6\u5907",level:3},{value:"Pre-Retrieval",id:"pre-retrieval-1",level:3},{value:"Retrieval",id:"retrieval-1",level:3},{value:"Post-Retrieval",id:"post-retrieval-1",level:3},{value:"\u5927\u6a21\u578b\u8f93\u51fa",id:"\u5927\u6a21\u578b\u8f93\u51fa",level:3},{value:"\u6f14\u793a",id:"\u6f14\u793a",level:3},{value:"\u666e\u901a\u8f93\u51fa",id:"\u666e\u901a\u8f93\u51fa",level:4},{value:"\u8054\u7f51\u641c\u7d22\u8f93\u51fa",id:"\u8054\u7f51\u641c\u7d22\u8f93\u51fa",level:4},{value:"\u53c2\u8003\u6587\u6863",id:"\u53c2\u8003\u6587\u6863",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u672c\u6587\u540c\u6b65\u53d1\u5e03\u5728 spring ai alibaba blog \u548c\u963f\u91cc\u4e91\u516c\u4f17\u53f7"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Spring AI \u5b9e\u73b0\u4e86\u6a21\u5757\u5316 RAG \u67b6\u6784\uff0c\u67b6\u6784\u7684\u7075\u611f\u6765\u81ea\u4e8e\u8bba\u6587\u201c",(0,i.jsx)(n.a,{href:"https://arxiv.org/abs/2407.21059",children:"\u6a21\u5757\u5316 RAG\uff1a\u5c06 RAG \u7cfb\u7edf\u8f6c\u53d8\u4e3a\u7c7b\u4f3c\u4e50\u9ad8\u7684\u53ef\u91cd\u6784\u6846\u67b6"}),"\u201d\u4e2d\u8be6\u8ff0\u7684\u6a21\u5757\u5316\u6982\u5ff5\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"spring-ai-\u6a21\u5757\u5316-rag-\u4f53\u7cfb",children:"Spring AI \u6a21\u5757\u5316 RAG \u4f53\u7cfb"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"module-rag",src:t(81073).A+"",width:"3114",height:"4864"})}),"\n",(0,i.jsx)(n.p,{children:"\u603b\u4f53\u4e0a\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a"}),"\n",(0,i.jsx)(n.h3,{id:"pre-retrieval",children:"Pre-Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u589e\u5f3a\u548c\u8f6c\u6362\u7528\u6237\u8f93\u5165\uff0c\u4f7f\u5176\u66f4\u6709\u6548\u5730\u6267\u884c\u68c0\u7d22\u4efb\u52a1\uff0c\u89e3\u51b3\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u67e5\u8be2\u3001query \u8bed\u4e49\u4e0d\u6e05\u6670\u3001\u6216\u4e0d\u53d7\u652f\u6301\u7684\u8bed\u8a00\u7b49\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"QueryAugmenter \u67e5\u8be2\u589e\u5f3a\uff1a\u4f7f\u7528\u9644\u52a0\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u4fe1\u606f\u589e\u5f3a\u7528\u6237 query\uff0c\u63d0\u4f9b\u5927\u6a21\u578b\u56de\u7b54\u95ee\u9898\u65f6\u7684\u5fc5\u8981\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1b"}),"\n",(0,i.jsx)(n.li,{children:"QueryTransformer \u67e5\u8be2\u6539\u5199\uff1a\u56e0\u4e3a\u7528\u6237\u7684\u8f93\u5165\u901a\u5e38\u662f\u7247\u9762\u7684\uff0c\u5173\u952e\u4fe1\u606f\u8f83\u5c11\uff0c\u4e0d\u4fbf\u4e8e\u5927\u6a21\u578b\u7406\u89e3\u548c\u56de\u7b54\u95ee\u9898\u3002\u56e0\u6b64\u9700\u8981\u4f7f\u7528 prompt \u8c03\u4f18\u624b\u6bb5\u6216\u8005\u5927\u6a21\u578b\u6539\u5199\u7528\u6237 query\uff1b"}),"\n",(0,i.jsx)(n.li,{children:"QueryExpander \u67e5\u8be2\u6269\u5c55\uff1a\u5c06\u7528\u6237 query \u6269\u5c55\u4e3a\u591a\u4e2a\u8bed\u4e49\u4e0d\u540c\u7684\u53d8\u4f53\u4ee5\u83b7\u5f97\u4e0d\u540c\u89c6\u89d2\uff0c\u6709\u52a9\u4e8e\u68c0\u7d22\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u5e76\u589e\u52a0\u627e\u5230\u76f8\u5173\u7ed3\u679c\u7684\u673a\u4f1a\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"retrieval",children:"Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u8d1f\u8d23\u67e5\u8be2\u5411\u91cf\u5b58\u50a8\u7b49\u6570\u636e\u7cfb\u7edf\u5e76\u68c0\u7d22\u548c\u7528\u6237 query \u76f8\u5173\u6027\u6700\u9ad8\u7684 Document\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"DocumentRetriever\uff1a\u68c0\u7d22\u5668\uff0c\u6839\u636e QueryExpander \u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u6e90\u8fdb\u884c\u68c0\u7d22\uff0c\u4f8b\u5982 \u641c\u7d22\u5f15\u64ce\u3001\u5411\u91cf\u5b58\u50a8\u3001\u6570\u636e\u5e93\u6216\u77e5\u8bc6\u56fe\u7b49\uff1b"}),"\n",(0,i.jsx)(n.li,{children:"DocumentJoiner\uff1a\u5c06\u4ece\u591a\u4e2a query \u548c\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u68c0\u7d22\u5230\u7684 Document \u5408\u5e76\u4e3a\u4e00\u4e2a Document \u96c6\u5408\uff1b"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"post-retrieval",children:"Post-Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u8d1f\u8d23\u5904\u7406\u68c0\u7d22\u5230\u7684 Document \u4ee5\u83b7\u5f97\u6700\u4f73\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u89e3\u51b3\u6a21\u578b\u4e2d\u7684",(0,i.jsx)(n.em,{children:"\u4e2d\u95f4\u4e22\u5931"}),"\u548c\u4e0a\u4e0b\u6587\u957f\u5ea6\u9650\u5236\u7b49\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"DocumentRanker\uff1a\u6839\u636e Document \u548c\u7528\u6237 query \u7684\u76f8\u5173\u6027\u5bf9 Document \u8fdb\u884c\u6392\u5e8f\u548c\u6392\u540d\uff1b"}),"\n",(0,i.jsx)(n.li,{children:"DocumentSelector\uff1a\u7528\u4e8e\u4ece\u68c0\u7d22\u5230\u7684 Document \u5217\u8868\u4e2d\u5220\u9664\u4e0d\u76f8\u5173\u6216\u5197\u4f59\u6587\u6863\uff1b"}),"\n",(0,i.jsx)(n.li,{children:"DocumentCompressor\uff1a\u7528\u4e8e\u538b\u7f29\u6bcf\u4e2a Document\uff0c\u51cf\u5c11\u68c0\u7d22\u5230\u7684\u4fe1\u606f\u4e2d\u7684\u566a\u97f3\u548c\u5197\u4f59\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u751f\u6210",children:"\u751f\u6210"}),"\n",(0,i.jsx)(n.p,{children:"\u751f\u6210\u7528\u6237 Query \u5bf9\u5e94\u7684\u5927\u6a21\u578b\u8f93\u51fa\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"web-search-\u5b9e\u8df5",children:"Web Search \u5b9e\u8df5"}),"\n",(0,i.jsx)(n.p,{children:"\u63a5\u4e0b\u6765\uff0c\u5c06\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Spring AI Alibaba \u548c\u963f\u91cc\u4e91 IQS \u670d\u52a1\u642d\u5efa\u8054\u7f51\u641c\u7d22 RAG \u7684\u5b9e\u73b0\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8d44\u6e90\u51c6\u5907",children:"\u8d44\u6e90\u51c6\u5907"}),"\n",(0,i.jsxs)(n.p,{children:["DashScope apiKey\uff1a",(0,i.jsx)(n.a,{href:"https://help.aliyun.com/zh/model-studio/developer-reference/get-api-key",children:"https://help.aliyun.com/zh/model-studio/developer-reference/get-api-key"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u963f\u91cc\u4e91 IQS \u670d\u52a1 apiKey\uff1a",(0,i.jsx)(n.a,{href:"https://help.aliyun.com/product/2837261.html",children:"https://help.aliyun.com/product/2837261.html"})]}),"\n",(0,i.jsx)(n.h3,{id:"pre-retrieval-1",children:"Pre-Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5c06\u7528\u6237 Query \u4f7f\u7528  qwen-plus \u5927\u6a21\u578b\u8fdb\u884c\u589e\u5f3a\u6539\u5199\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"CustomContextQueryAugmenter.java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class CustomContextQueryAugmenter implements QueryAugmenter {\n    // \u5b9a\u4e49 prompt tmpl\u3002\n\tprivate static final PromptTemplate DEFAULT_PROMPT_TEMPLATE = new PromptTemplate(\n\t\t\t// ......\n\t);\n\n\tprivate static final PromptTemplate DEFAULT_EMPTY_PROMPT_TEMPLATE = new PromptTemplate(\n\t\t// ...\n    );\n\n\t@NotNull\n\t@Override\n\tpublic Query augment(\n\t\t\t@Nullable Query query,\n\t\t\t@Nullable List<Document> documents\n\t) {\n\t\t// 1. collect content from documents.\n\t\tAtomicInteger idCounter = new AtomicInteger(1);\n\t\tString documentContext = documents.stream()\n\t\t\t\t.map(document -> {\n\t\t\t\t\tString text = document.getText();\n\t\t\t\t\treturn "[[" + (idCounter.getAndIncrement()) + "]]" + text;\n\t\t\t\t})\n\t\t\t\t.collect(Collectors.joining("\\n-----------------------------------------------\\n"));\n\n\t\t// 2. Define prompt parameters.\n\t\tMap<String, Object> promptParameters = Map.of(\n\t\t\t\t"query", query.text(),\n\t\t\t\t"context", documentContext\n\t\t);\n\n\t\t// 3. Augment user prompt with document context.\n\t\treturn new Query(this.promptTemplate.render(promptParameters));\n\t}\n\n    // \u5f53\u4e0a\u4e0b\u6587\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de DEFAULT_EMPTY_PROMPT_TEMPLATE\n\tprivate Query augmentQueryWhenEmptyContext(Query query) {\n\n\t\tif (this.allowEmptyContext) {\n\t\t\tlogger.debug("Empty context is allowed. Returning the original query.");\n\t\t\treturn query;\n\t\t}\n\n\t\tlogger.debug("Empty context is not allowed. Returning a specific query for empty context.");\n\t\treturn new Query(this.emptyPromptTemplate.render());\n\t}\n\n\tpublic static final class Builder {\n\t\t// ......\n\t}\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"QueryTransformer \u914d\u7f6e bean\uff0c\u7528\u4e8e rewrite \u7528\u6237 query\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Bean\npublic QueryTransformer queryTransformer(\n    ChatClient.Builder chatClientBuilder,\n    @Qualifier("transformerPromptTemplate") PromptTemplate transformerPromptTemplate\n) {\n\n    ChatClient chatClient = chatClientBuilder.defaultOptions(\n        DashScopeChatOptions.builder()\n        .withModel("qwen-plus")\n        .build()\n    ).build();\n\n    return RewriteQueryTransformer.builder()\n        .chatClientBuilder(chatClient.mutate())\n        .promptTemplate(transformerPromptTemplate)\n        .targetSearchSystem("\u8054\u7f51\u641c\u7d22")\n        .build();\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"QueryExpander.java \u67e5\u8be2\u53d8\u4f53"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class MultiQueryExpander implements QueryExpander {\n\n    private static final Logger logger = LoggerFactory.getLogger(MultiQueryExpander.class);\n\n    private static final PromptTemplate DEFAULT_PROMPT_TEMPLATE = new PromptTemplate(\n\t\t// ...\n    );\n\n    @NotNull\n    @Override\n    public List<Query> expand(@Nullable Query query) {\n\n\t\t// ...\n\n       String resp = this.chatClient.prompt()\n             .user(user -> user.text(this.promptTemplate.getTemplate())\n                   .param("number", this.numberOfQueries)\n                   .param("query", query.text()))\n             .call()\n             .content();\n\n        // ...\n\n       List<String> queryVariants = Arrays.stream(resp.split("\\n")).filter(StringUtils::hasText).toList();\n\n       if (CollectionUtils.isEmpty(queryVariants) || this.numberOfQueries != queryVariants.size()) {\n          return List.of(query);\n       }\n\n       List<Query> queries = queryVariants.stream()\n             .filter(StringUtils::hasText)\n             .map(queryText -> query.mutate().text(queryText).build())\n             .collect(Collectors.toList());\n\n        // \u662f\u5426\u5f15\u5165\u539f\u67e5\u8be2\n       if (this.includeOriginal) {\n\n          logger.debug("Including original query in the expanded queries for query: {}", query.text());\n          queries.add(0, query);\n       }\n\n       return queries;\n    }\n\n    public static final class Builder {\n\t\t// ......\n    }\n\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"retrieval-1",children:"Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u4ece\u4e0d\u540c\u6570\u636e\u6e90\u67e5\u8be2\u548c\u7528\u6237 query \u76f8\u4f3c\u5ea6\u6700\u9ad8\u7684\u6570\u636e\u3002\uff08\u8fd9\u91cc\u4f7f\u7528 Web Search\uff09"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"WebSearchRetriever.java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class WebSearchRetriever implements DocumentRetriever {\n\t\n    // \u6ce8\u5165 IQS \u641c\u7d22\u5f15\u64ce\n    private final IQSSearchEngine searchEngine;\n\n    @NotNull\n    @Override\n    public List<Document> retrieve(\n          @Nullable Query query\n    ) {\n\n       // \u641c\u7d22\n       GenericSearchResult searchResp = searchEngine.search(query.text());\n\n       // \u6e05\u6d17\u6570\u636e\uff0c\u5c06\u6570\u636e\u8f6c\u6362\u4e3a Spring AI \u7684 Document \u5bf9\u8c61\n       List<Document> cleanerData = dataCleaner.getData(searchResp);\n       logger.debug("cleaner data: {}", cleanerData);\n\n       // \u8fd4\u56de\u7ed3\u679c\n       List<Document> documents = dataCleaner.limitResults(cleanerData, maxResults);\n\n       logger.debug("WebSearchRetriever#retrieve() document size: {}, raw documents: {}",\n             documents.size(),\n             documents.stream().map(Document::getId).toArray()\n       );\n\n       return enableRanker ? ranking(query, documents) : documents;\n    }\n\n    private List<Document> ranking(Query query, List<Document> documents) {\n\n       if (documents.size() == 1) {\n          // \u53ea\u6709\u4e00\u4e2a\u65f6\uff0c\u4e0d\u9700\u8981 rank\n          return documents;\n       }\n\n       try {\n          List<Document> rankedDocuments = documentRanker.rank(query, documents);\n          logger.debug("WebSearchRetriever#ranking() Ranked documents: {}", rankedDocuments.stream().map(Document::getId).toArray());\n          return rankedDocuments;\n       } catch (Exception e) {\n          // \u964d\u7ea7\u8fd4\u56de\u539f\u59cb\u7ed3\u679c\n          logger.error("ranking error", e);\n          return documents;\n       }\n    }\n\n\n    public static final class Builder {\n\t\t// ...\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"DocumentJoiner.java \u5408\u5e76 Document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class ConcatenationDocumentJoiner implements DocumentJoiner {\n\n    @NotNull\n    @Override\n    public List<Document> join(\n          @Nullable Map<Query, List<List<Document>>> documentsForQuery\n    ) {\n\t\t// ...\n       Map<Query, List<List<Document>>> selectDocuments = selectDocuments(documentsForQuery, 10);\n\n       Set<String> seen = new HashSet<>();\n\n       return selectDocuments.values().stream()\n             // Flatten List<List<Documents>> to Stream<List<Documents>.\n             .flatMap(List::stream)\n             // Flatten Stream<List<Documents> to Stream<Documents>.\n             .flatMap(List::stream)\n             .filter(doc -> {\n                List<String> keys = extractKeys(doc);\n                for (String key : keys) {\n                   if (!seen.add(key)) {\n                      logger.info("Duplicate document metadata: {}",doc.getMetadata());\n                      // Duplicate keys found.\n                      return false;\n                   }\n                }\n                // All keys are unique.\n                return true;\n             })\n             .collect(Collectors.toList());\n    }\n\n    private Map<Query, List<List<Document>>> selectDocuments(\n          Map<Query, List<List<Document>>> documentsForQuery,\n          int totalDocuments\n    ) {\n\n       Map<Query, List<List<Document>>> selectDocumentsForQuery = new HashMap<>();\n\n       int numberOfQueries = documentsForQuery.size();\n\n       if (Objects.equals(0, numberOfQueries)) {\n\n          return selectDocumentsForQuery;\n       }\n\n       int baseCount = totalDocuments / numberOfQueries;\n       int remainder = totalDocuments % numberOfQueries;\n\n       // To ensure consistent distribution. sort the keys (optional)\n       List<Query> sortedQueries = new ArrayList<>(documentsForQuery.keySet());\n       // Other sort\n       // sortedQueries.sort(Comparator.comparing(Query::getSomeProperty));\n       Iterator<Query> iterator = sortedQueries.iterator();\n\n       for (int i = 0; i < numberOfQueries; i ++) {\n          Query query = sortedQueries.get(i);\n          int documentToSelect = baseCount + (i < remainder ? 1 : 0);\n          List<List<Document>> originalDocuments = documentsForQuery.get(query);\n          List<List<Document>> selectedNestLists = new ArrayList<>();\n           \n          int remainingDocuments = documentToSelect;\n          for (List<Document> documentList : originalDocuments) {\n             if (remainingDocuments <= 0) {\n                break;\n             }\n             List<Document> selectSubList = new ArrayList<>();\n             for (Document docs : documentList) {\n                if (remainingDocuments <= 0) {\n                   break;\n                }\n                selectSubList.add(docs);\n                remainingDocuments --;\n             }\n             if (!selectSubList.isEmpty()) {\n                selectedNestLists.add(selectSubList);\n             }\n          }\n          selectDocumentsForQuery.put(query, selectedNestLists);\n       }\n       return selectDocumentsForQuery;\n    }\n\n    private List<String> extractKeys(Document document) {\n\t\t// \u63d0\u53d6 key\n       return keys;\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"post-retrieval-1",children:"Post-Retrieval"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5904\u7406\u4ece\u8054\u7f51\u641c\u7d22\u79cd\u83b7\u5f97\u7684 Document\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u8f93\u51fa\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"DashScopeDocumentRanker.java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class DashScopeDocumentRanker implements DocumentRanker {\n\n    // ...\n\n    @NotNull\n    @Override\n    public List<Document> rank(\n          @Nullable Query query,\n          @Nullable List<Document> documents\n    ) {\n\t\t// ...\n       try {\n          List<Document> reorderDocs = new ArrayList<>();\n\n          // \u7531\u8c03\u7528\u8005\u63a7\u5236\u6587\u6863\u6570\n          DashScopeRerankOptions rerankOptions = DashScopeRerankOptions.builder()\n                .withTopN(documents.size())\n                .build();\n\n          if (Objects.nonNull(query) && StringUtils.hasText(query.text())) {\n             // \u7ec4\u88c5\u53c2\u6570\u8c03\u7528 rankModel\n             RerankRequest rerankRequest = new RerankRequest(\n                   query.text(),\n                   documents,\n                   rerankOptions\n             );\n             RerankResponse rerankResp = rerankModel.call(rerankRequest);\n\n             rerankResp.getResults().forEach(res -> {\n                Document outputDocs = res.getOutput();\n\n                // \u67e5\u627e\u5e76\u6dfb\u52a0\u5230\u65b0\u7684 list \u4e2d\n                Optional<Document> foundDocsOptional = documents.stream()\n                      .filter(doc ->\n                      {\n                         // debug rerank output.\n                         logger.debug("DashScopeDocumentRanker#rank() doc id: {}, outputDocs id: {}", doc.getId(), outputDocs.getId());\n                         return Objects.equals(doc.getId(), outputDocs.getId());\n                      })\n                      .findFirst();\n\n                foundDocsOptional.ifPresent(reorderDocs::add);\n             });\n          }\n\n          return reorderDocs;\n       }\n       catch (Exception e) {\n          // \u6839\u636e\u5f02\u5e38\u7c7b\u578b\u505a\u8fdb\u4e00\u6b65\u5904\u7406\n          throw new SAAAppException(e.getMessage());\n       }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u5927\u6a21\u578b\u8f93\u51fa",children:"\u5927\u6a21\u578b\u8f93\u51fa"}),"\n",(0,i.jsx)(n.p,{children:"WebSearchService.java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Service\npublic class SAAWebSearchService {\n\n\t// ...\n    \n    private static final String DEFAULT_WEB_SEARCH_MODEL = "deepseek-r1";\n\n    public SAAWebSearchService(\n          ChatClient.Builder chatClientBuilder,\n          QueryTransformer queryTransformer,\n          QueryExpander queryExpander,\n          IQSSearchEngine searchEngine,\n          DataClean dataCleaner,\n          DocumentRanker documentRanker,\n          @Qualifier("queryArgumentPromptTemplate") PromptTemplate queryArgumentPromptTemplate\n    ) {\n\n       this.queryTransformer = queryTransformer;\n       this.queryExpander = queryExpander;\n       this.queryArgumentPromptTemplate = queryArgumentPromptTemplate;\n\n       // \u7528\u4e8e DeepSeek-r1 \u7684 reasoning content \u6574\u5408\u5230\u8f93\u51fa\u4e2d\n       this.reasoningContentAdvisor = new ReasoningContentAdvisor(1);\n\n       // \u6784\u5efa chatClient\n       this.chatClient = chatClientBuilder\n             .defaultOptions(\n                   DashScopeChatOptions.builder()\n                         .withModel(DEFAULT_WEB_SEARCH_MODEL)\n                         // stream \u6a21\u5f0f\u4e0b\u662f\u5426\u5f00\u542f\u589e\u91cf\u8f93\u51fa\n                         .withIncrementalOutput(true)\n                         .build())\n             .build();\n\n       // \u65e5\u5fd7\n       this.simpleLoggerAdvisor = new SimpleLoggerAdvisor(100);\n\n       this.webSearchRetriever = WebSearchRetriever.builder()\n             .searchEngine(searchEngine)\n             .dataCleaner(dataCleaner)\n             .maxResults(2)\n             .enableRanker(true)\n             .documentRanker(documentRanker)\n             .build();\n    }\n\n    // \u5904\u7406\u7528\u6237\u8f93\u5165\n    public Flux<String> chat(String prompt) {\n\n       return chatClient.prompt()\n             .advisors(\n                   createRetrievalAugmentationAdvisor(),\n                   // \u6574\u5408\u5230 reasoning content \u8f93\u51fa\u4e2d\n                   reasoningContentAdvisor,\n                   simpleLoggerAdvisor\n             ).user(prompt)\n             .stream()\n             .content();\n    }\n\n    // \u521b\u5efa advisor\n    private RetrievalAugmentationAdvisor createRetrievalAugmentationAdvisor() {\n\n       return RetrievalAugmentationAdvisor.builder()\n             .documentRetriever(webSearchRetriever)\n             .queryTransformers(queryTransformer)\n             .queryAugmenter(\n                   new CustomContextQueryAugmenter(\n                         queryArgumentPromptTemplate,\n                         null,\n                         true)\n             ).queryExpander(queryExpander)\n             .documentJoiner(new ConcatenationDocumentJoiner())\n             .build();\n    }\n\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u6f14\u793a",children:"\u6f14\u793a"}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528\u95ee\u9898 ",(0,i.jsx)(n.code,{children:"\u676d\u5dde\u6709\u4ec0\u4e48\u63a8\u8350\u65c5\u6e38\u7684\u5730\u65b9\u5417"})," \u4e3a\u4f8b\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"\u666e\u901a\u8f93\u51fa",children:"\u666e\u901a\u8f93\u51fa"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"### \u5fc5\u6e38\u666f\u70b9  \n1. **\u897f\u6e56**  \n   - **\u6838\u5fc3\u7279\u8272**\uff1a\u676d\u5dde\u7684\u6807\u5fd7\u6027\u666f\u70b9\uff0c\u5305\u542b\u201c\u897f\u6e56\u5341\u666f\u201d\uff08\u5982\u82cf\u5824\u6625\u6653\u3001\u65ad\u6865\u6b8b\u96ea\u3001\u4e09\u6f6d\u5370\u6708\u7b49\uff09\uff0c\u53ef\u6cdb\u821f\u6e56\u4e0a\u6216\u6cbf\u6e56\u9a91\u884c\u3002  \n   - **\u63a8\u8350\u6d3b\u52a8**\uff1a\u591c\u6e38\u897f\u6e56\u706f\u5149\u79c0\u3001\u6f2b\u6b65\u767d\u5824/\u82cf\u5824\u3002  \n\n2. **\u7075\u9690\u5bfa\u4e0e\u98de\u6765\u5cf0**  \n   - **\u6587\u5316\u4ef7\u503c**\uff1a\u5343\u5e74\u53e4\u5239\u7075\u9690\u5bfa\u88ab\u8a89\u4e3a\u201c\u4e1c\u5357\u4f5b\u56fd\u201d\uff0c\u98de\u6765\u5cf0\u7684\u6469\u5d16\u77f3\u523b\u4e3a\u5b8b\u4ee3\u4f5b\u6559\u827a\u672f\u7470\u5b9d\u3002  \n\n---\n\n### \u81ea\u7136\u4e0e\u751f\u6001  \n1. **\u897f\u6eaa\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed**  \n   - **\u4eae\u70b9**\uff1a\u56fd\u5185\u9996\u4e2a\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed\uff0c\u53ef\u4e58\u6447\u6a79\u8239\u6e38\u89c8\uff0c\u6625\u79cb\u5b63\u89c2\u82a6\u82c7\u3001\u8d4f\u6885\u82b1\u3002  \n\n2. **\u4e5d\u6eaa\u5341\u516b\u6da7**  \n   - **\u7279\u8272**\uff1a\u8336\u56ed\u3001\u6eaa\u6d41\u3001\u53e4\u6811\u6784\u6210\u7684\u5f92\u6b65\u8def\u7ebf\uff0c\u9002\u5408\u590f\u5b63\u907f\u6691\u3002  \n\n---\n\n### \u6587\u5316\u4f53\u9a8c  \n1. **\u5b8b\u57ce\u666f\u533a**  \n   - **\u5fc5\u770b\u6f14\u51fa**\uff1a\u300a\u5b8b\u57ce\u5343\u53e4\u60c5\u300b\u901a\u8fc7\u6b4c\u821e\u6f14\u7ece\u676d\u5dde\u5386\u53f2\uff0c\u6c89\u6d78\u5f0f\u4f53\u9a8c\u5357\u5b8b\u6587\u5316\u3002  \n\n2. **\u4e2d\u56fd\u8336\u53f6\u535a\u7269\u9986\uff08\u9f99\u4e95\u9986\uff09**  \n   - **\u4f53\u9a8c**\uff1a\u4e86\u89e3\u9f99\u4e95\u8336\u6587\u5316\uff0c\u53c2\u4e0e\u91c7\u8336\u3001\u5236\u8336\u6d3b\u52a8\uff0c\u54c1\u9274\u6b63\u5b97\u897f\u6e56\u9f99\u4e95\u3002  \n\n---\n\n### \u7f8e\u98df\u8857\u533a  \n1. **\u6cb3\u574a\u8857**  \n   - **\u63a8\u8350\u5c0f\u5403**\uff1a\u8471\u5305\u6867\u3001\u5b9a\u80dc\u7cd5\u3001\u897f\u6e56\u918b\u9c7c\u3001\u4e1c\u5761\u8089\u3002  \n\n2. **\u6b66\u6797\u591c\u5e02**  \n   - **\u7279\u8272**\uff1a\u672c\u5730\u4eba\u5e38\u53bb\u7684\u591c\u5bb5\u805a\u96c6\u5730\uff0c\u6c47\u805a\u6d59\u6c5f\u98ce\u5473\u4e0e\u7f51\u7ea2\u7f8e\u98df\u3002  \n\n---\n\n### \u6e29\u99a8\u63d0\u793a  \n- **\u6700\u4f73\u5b63\u8282**\uff1a\u6625\u5b63\uff083-5\u6708\uff09\u8d4f\u6843\u67f3\uff0c\u79cb\u5b63\uff089-11\u6708\uff09\u89c2\u6842\u82b1\u3002  \n- **\u4ea4\u901a\u5efa\u8bae**\uff1a\u897f\u6e56\u5468\u8fb9\u666f\u70b9\u96c6\u4e2d\uff0c\u5efa\u8bae\u9a91\u884c\u6216\u6b65\u884c\uff1b\u5730\u94c11\u53f7\u7ebf\u8986\u76d6\u4e3b\u57ce\u533a\u3002  \n\n\u5982\u9700\u66f4\u8be6\u7ec6\u7684\u884c\u7a0b\u89c4\u5212\uff0c\u53ef\u8865\u5145\u5177\u4f53\u9700\u6c42\uff08\u5982\u4eb2\u5b50\u6e38\u3001\u6444\u5f71\u4e3b\u9898\u7b49\uff09\u3002\n"})}),"\n",(0,i.jsx)(n.h4,{id:"\u8054\u7f51\u641c\u7d22\u8f93\u51fa",children:"\u8054\u7f51\u641c\u7d22\u8f93\u51fa"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"### \u676d\u5dde\u65c5\u6e38\u63a8\u8350\n\n#### 1. \u897f\u6e56\u98ce\u666f\u533a  \n\u676d\u5dde\u7684\u6838\u5fc3\u666f\u70b9\uff0c\u5305\u542b\u65ad\u6865\u6b8b\u96ea\u3001\u82cf\u5824\u6625\u6653\u7b49\u7ecf\u5178\u666f\u89c2\uff0c\u56db\u5b63\u666f\u8272\u5404\u5f02\uff0c\u9002\u5408\u6f2b\u6b65\u6216\u4e58\u8239\u6e38\u89c8\u3002\u6e05\u6668\u548c\u508d\u665a\u7684\u5149\u7ebf\u6700\u4f73\uff0c\u6e56\u5149\u5c71\u8272\u4e0e\u4eba\u6587\u9057\u8ff9\u4ea4\u878d\uff0c\u662f\u6444\u5f71\u548c\u4f11\u95f2\u7684\u9996\u9009 [2][3][6]\u3002  \n\n#### 2. \u7075\u9690\u5bfa  \n\u5343\u5e74\u53e4\u5239\u9690\u4e8e\u5c71\u6797\uff0c\u53e4\u6728\u53c2\u5929\uff0c\u4f5b\u6559\u6c1b\u56f4\u6d53\u539a\u3002\u5bfa\u5185\u7d20\u658b\u4f53\u9a8c\u548c\u7948\u798f\u6d3b\u52a8\u503c\u5f97\u5c1d\u8bd5\uff0c\u9002\u5408\u5bfb\u6c42\u5b81\u9759\u7684\u6e38\u5ba2 [2][5][6]\u3002  \n\n#### 3. \u897f\u6eaa\u56fd\u5bb6\u6e7f\u5730\u516c\u56ed  \n\u57ce\u5e02\u5185\u7684\u751f\u6001\u7eff\u80ba\uff0c\u6cb3\u9053\u7eb5\u6a2a\uff0c\u53ef\u4e58\u8239\u89c2\u8d4f\u6e7f\u5730\u98ce\u5149\uff0c\u5076\u9047\u767d\u9e6d\u7b49\u6c34\u9e1f\u3002\u6625\u5b63\u8e0f\u9752\u3001\u79cb\u5b63\u8d4f\u82a6\u7684\u7edd\u4f73\u5730 [2][3][6]\u3002  \n\n#### 4. \u5929\u7afa\u4e09\u5bfa  \n\u4f4d\u4e8e\u897f\u6e56\u533a\u7075\u9690\u5bfa\u9644\u8fd1\uff0c\u7531\u4e09\u5ea7\u5386\u53f2\u60a0\u4e45\u7684\u5bfa\u5e99\u7ec4\u6210\uff0c\u5efa\u7b51\u98ce\u683c\u72ec\u7279\uff0c\u73af\u5883\u6e05\u5e7d\uff0c\u9002\u5408\u6587\u5316\u63a2\u8bbf\u548c\u79cb\u65e5\u6e38\u89c8 [1]\u3002  \n\n#### 5. \u676d\u5dde\u5b8b\u57ce  \n\u4ee5\u5b8b\u4ee3\u98ce\u8c8c\u4e3a\u4e3b\u9898\u7684\u666f\u533a\uff0c\u53ef\u6362\u53e4\u88c5\u6c89\u6d78\u5f0f\u4f53\u9a8c\u5e02\u4e95\u751f\u6d3b\uff0c\u5927\u578b\u6f14\u51fa\u300a\u5b8b\u57ce\u5343\u53e4\u60c5\u300b\u878d\u5408\u5386\u53f2\u4e0e\u827a\u672f\uff0c\u89c6\u89c9\u9707\u64bc [2][5]\u3002  \n\n#### 6. \u6cb3\u574a\u8857  \n\u53e4\u8272\u53e4\u9999\u7684\u5546\u4e1a\u8857\uff0c\u805a\u96c6\u4f20\u7edf\u5c0f\u5403\u3001\u624b\u5de5\u827a\u54c1\u5e97\uff0c\u53ef\u54c1\u5c1d\u8471\u5305\u6867\u3001\u5b9a\u80dc\u7cd5\u7b49\u7f8e\u98df\uff0c\u9002\u5408\u62cd\u6444\u4eba\u6587\u9898\u6750\u7167\u7247 [2][3][5]\u3002  \n\n#### 7. \u5343\u5c9b\u6e56\u98ce\u666f\u533a  \n\u4ee51078\u5ea7\u5c9b\u5c7f\u95fb\u540d\uff0c\u6885\u5cf0\u5c9b\u89c2\u666f\u53f0\u53ef\u4fef\u77b0\u5168\u666f\uff0c\u6e56\u5149\u5c71\u8272\u5982\u753b\u5377\u3002\u9002\u5408\u81ea\u9a7e\u6e38\u548c\u5c71\u6c34\u6444\u5f71 [3][6]\u3002  \n\n#### 8. \u8305\u5bb6\u57e0\u666f\u533a  \n\u897f\u6e56\u8fb9\u7684\u9690\u9038\u4e4b\u5730\uff0c\u6625\u5b63\u6a31\u82b1\u4e0e\u6e56\u67f3\u76f8\u6620\uff0c\u79cb\u5b63\u82a6\u82c7\u6447\u66f3\uff0c\u4eba\u5c11\u666f\u7f8e\uff0c\u9002\u5408\u5f92\u6b65\u548c\u81ea\u7136\u6444\u5f71 [1][3]\u3002  \n\n#### 9. \u4e5d\u6eaa\u70df\u6811\uff08\u4e5d\u6eaa\u5341\u516b\u6da7\uff09  \n\u5c71\u6da7\u3001\u8336\u56ed\u4e0e\u67ab\u53f6\u4ea4\u7ec7\u7684\u5f92\u6b65\u8def\u7ebf\uff0c\u79cb\u5b63\u7ea2\u53f6\u4f3c\u706b\uff0c\u6eaa\u6c34\u6f7a\u6f7a\uff0c\u5145\u6ee1\u8bd7\u610f [2][6]\u3002  \n\n#### 10. \u592a\u5b50\u6e7e\u516c\u56ed  \n\u6625\u5b63\u90c1\u91d1\u9999\u3001\u6a31\u82b1\u76db\u5f00\uff0c\u8272\u5f69\u6591\u6593\uff0c\u662f\u70ed\u95e8\u6253\u5361\u5730\u3002\u9002\u5408\u5bb6\u5ead\u6e38\u548c\u82b1\u5349\u6444\u5f71 [2][3]\u3002  \n\n---\n\n**\u5176\u4ed6\u63a8\u8350**  \n- **\u6d59\u897f\u5927\u9f99\u6e7e**\uff1a\u81ea\u7136\u5ce1\u8c37\u4e0e\u7011\u5e03\u7fa4\uff0c\u590f\u5b63\u6f02\u6d41\u9879\u76ee\u523a\u6fc0 [1]\u3002  \n- **\u4e2d\u56fd\u5370\u5b66\u535a\u7269\u9986**\uff1a\u5c55\u793a\u5370\u7ae0\u6587\u5316\u4e0e\u5386\u53f2\uff0c\u9002\u5408\u6587\u5316\u7231\u597d\u8005 [1]\u3002  \n- **\u5858\u6816\u53e4\u9547**\uff1a\u8fd0\u6cb3\u7554\u7684\u6c5f\u5357\u6c34\u4e61\uff0c\u4fdd\u7559\u660e\u6e05\u5efa\u7b51\u4e0e\u6c11\u4fd7\u98ce\u60c5 [3][6]\u3002  \n\n**\u65c5\u884c\u63d0\u793a**  \n- \u897f\u6e56\u3001\u7075\u9690\u5bfa\u7b49\u70ed\u95e8\u666f\u70b9\u5efa\u8bae\u63d0\u524d\u9884\u7ea6\u95e8\u7968 [5]\u3002  \n- \u6625\u5b63\u591a\u96e8\uff0c\u9700\u643a\u5e26\u96e8\u5177\uff1b\u79cb\u5b63\u9002\u5408\u6237\u5916\u6d3b\u52a8 [2][5]\u3002  \n\n\uff08\u53c2\u8003\u6587\u6863\uff1a[1][2][3][5][6]\uff09\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u53c2\u8003\u6587\u6863",children:"\u53c2\u8003\u6587\u6863"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Spring AI RAG\uff1a",(0,i.jsx)(n.a,{href:"https://docs.spring.io/spring-ai/reference/api/retrieval-augmented-generation.html",children:"https://docs.spring.io/spring-ai/reference/api/retrieval-augmented-generation.html"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u963f\u91cc\u4e91 IQS\uff1a",(0,i.jsx)(n.a,{href:"https://help.aliyun.com/product/2837261.html",children:"https://help.aliyun.com/product/2837261.html"})]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},81073:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/module-rag-2be363966d8119f3cc4b9fb1dcf2fc34.png"},89999:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(58101);const i={},a=r.createContext(i);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:n},e.children)}},8208:e=>{e.exports=JSON.parse('{"permalink":"/blog/spring-cloud-alibaba-module-rag","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/spring-ai-alibaba-module-rag.md","source":"@site/blog/AI-large-models/spring-ai-alibaba-module-rag.md","title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","description":"\u672c\u6587\u540c\u6b65\u53d1\u5e03\u5728 spring ai alibaba blog \u548c\u963f\u91cc\u4e91\u516c\u4f17\u53f7","date":"2025-03-11T21:01:08.000Z","tags":[{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"Spring AI Alibaba","permalink":"/blog/tags/spring-ai-alibaba"},{"inline":true,"label":"Module RAG","permalink":"/blog/tags/module-rag"},{"inline":true,"label":"DeepSeek","permalink":"/blog/tags/deep-seek"}],"readingTime":9.206666666666667,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"spring-cloud-alibaba-module-rag","title":"\u4f7f\u7528 Spring AI Aliabab Module RAG \u6784\u5efa Web Search \u5e94\u7528","date":"2025-03-11T21:01:08.000Z","authors":"yuluo","tags":["AI","Spring AI Alibaba","Module RAG","DeepSeek"],"keywords":["AI","Spring AI Alibaba","Module RAG","DeepSeek"],"image":"/img/ai/module-rag/bgc.png"},"unlisted":false,"prevItem":{"title":"MCP \u4ecb\u7ecd\u548c\u57fa\u672c\u4f7f\u7528","permalink":"/blog/mcp"},"nextItem":{"title":"\u4f18\u96c5\u4ee3\u7801\u5b9e\u73b0\uff1aSpring Boot \u7684 7 \u4e2a\u6269\u5c55\u63a5\u53e3","permalink":"/blog/spring-boot-extension-interface.md"}}')}}]);