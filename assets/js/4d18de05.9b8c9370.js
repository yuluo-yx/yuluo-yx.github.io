"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9376],{84489:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var r=n(3947),i=n(25105),a=n(89999);const s={slug:"use-spring-ai-and-ollama-build-rag-app",title:"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528",date:new Date("2025-02-23T18:35:06.000Z"),authors:"yuluo",tags:["DeepSeel","Ollama","Spring AI","RAG"],keywords:["DeepSeel","Ollama","Spring AI","RAG"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"\u4f7f\u7528 Ollama + Spring AI \u642d\u5efa RAG \u5e94\u7528",id:"\u4f7f\u7528-ollama--spring-ai-\u642d\u5efa-rag-\u5e94\u7528",level:2},{value:"\u4f7f\u7528 Spring AI",id:"\u4f7f\u7528-spring-ai",level:2},{value:"ApplicationInit",id:"applicationinit",level:3},{value:"AIRagService",id:"airagservice",level:3},{value:"\u9002\u914d Spring AI Alibaba DashScope",id:"\u9002\u914d-spring-ai-alibaba-dashscope",level:2}];function d(t){const e={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"\u4f7f\u7528-ollama--spring-ai-\u642d\u5efa-rag-\u5e94\u7528",children:"\u4f7f\u7528 Ollama + Spring AI \u642d\u5efa RAG \u5e94\u7528"}),"\n",(0,i.jsxs)(e.p,{children:["\u4ee3\u7801\u5730\u5740\uff1a",(0,i.jsx)(e.a,{href:"https://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/ollama-rag",children:"https://github.com/deigmata-paideias/deigmata-paideias/tree/main/ai/ollama-rag"})]}),"\n",(0,i.jsx)(e.p,{children:"\u6a21\u578b\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Embedding \u6a21\u578b\uff1anomic-embed-text",":latest"]}),"\n",(0,i.jsx)(e.li,{children:"Dashscope \u6a21\u578b\uff1adeepseek-r1"}),"\n",(0,i.jsx)(e.li,{children:"Ollama Chat \u6a21\u578b\uff1adeepseek-r1:8b"}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["Ollama \u548c\u6a21\u578b\u4e0b\u8f7d\uff1a",(0,i.jsx)(e.a,{href:"https://yuluo-yx.github.io/blog/windows-deploy-ollama3-install-llama3/",children:"https://yuluo-yx.github.io/blog/windows-deploy-ollama3-install-llama3/"}),"\nDocker \u90e8\u7f72 ES\uff1a",(0,i.jsx)(e.a,{href:"https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/docker-compose/es",children:"https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/docker-compose/es"})]}),"\n",(0,i.jsx)(e.h2,{id:"\u4f7f\u7528-spring-ai",children:"\u4f7f\u7528 Spring AI"}),"\n",(0,i.jsx)(e.p,{children:"\u6838\u5fc3\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(e.h3,{id:"applicationinit",children:"ApplicationInit"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u505a\u7684\u4e8b\u60c5\u662f\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\u4ece ",(0,i.jsx)(e.code,{children:"resources/data"})," \u76ee\u5f55\u52a0\u8f7d pdf \u6587\u4ef6\uff0c\u8f6c\u4e3a Resource \u8d44\u6e90\u5bf9\u8c61\uff1b"]}),"\n",(0,i.jsx)(e.li,{children:"\u5c06 Resource \u8d44\u6e90\u5bf9\u8c61\u8f6c\u5316\u4e3a Spring AI \u7684 Document \u5bf9\u8c61\uff1b"}),"\n",(0,i.jsx)(e.li,{children:"\u8c03\u7528 Ollama \u7684 embedding \u6a21\u578b\uff0c\u8f6c\u4e3a\u5411\u91cf\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\u3002"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class ApplicationInit implements ApplicationRunner {\n\n\tprivate final Logger logger = LoggerFactory.getLogger(ApplicationInit.class);\n\n\tprivate final ResourceLoader resourceLoader;\n\n\tprivate final VectorStore vectorStore;\n\n\tprivate final ElasticsearchClient elasticsearchClient;\n\n\tprivate final ElasticsearchVectorStoreProperties options;\n\n\tprivate static final String textField = "content";\n\n\tprivate static final String vectorField = "embedding";\n\n\tpublic ApplicationInit(\n\t\t\tResourceLoader resourceLoader,\n\t\t\tVectorStore vectorStore,\n\t\t\tElasticsearchClient elasticsearchClient,\n\t\t\tElasticsearchVectorStoreProperties options\n\t) {\n\n\t\tthis.resourceLoader = resourceLoader;\n\t\tthis.vectorStore = vectorStore;\n\t\tthis.elasticsearchClient = elasticsearchClient;\n\t\tthis.options = options;\n\t}\n\n\t@Override\n\tpublic void run(ApplicationArguments args) {\n\n\t\t// 1. load pdf resources.\n\t\tList<Resource> pdfResources = loadPdfResources();\n\n\t\t// 2. parse pdf resources to Documents.\n\t\tList<Document> documents = parsePdfResource(pdfResources);\n\n\t\t// 3. import to ES.\n\t\timportToES(documents);\n\n\t\tlogger.info("RAG application init finished");\n\t}\n\n\tprivate List<Resource> loadPdfResources() {\n\n\t\tList<Resource> pdfResources = new ArrayList<>();\n\n\t\ttry {\n\n\t\t\tlogger.info("\u52a0\u8f7d PDF \u8d44\u6e90=================================");\n\n\t\t\tResourcePatternResolver resolver = (ResourcePatternResolver) resourceLoader;\n\t\t\tResource[] resources = resolver.getResources("classpath:data" + "/*.pdf");\n\n\t\t\tfor (Resource resource : resources) {\n\t\t\t\tif (resource.exists()) {\n\t\t\t\t\tpdfResources.add(resource);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlogger.info("\u52a0\u8f7d PDF \u8d44\u6e90\u5b8c\u6210=================================");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException("Failed to load PDF resources", e);\n\t\t}\n\n\t\treturn pdfResources;\n\t}\n\n\tprivate List<Document> parsePdfResource(List<Resource> pdfResources) {\n\n\t\tList<Document> resList = new ArrayList<>();\n\n\t\tlogger.info("\u5f00\u59cb\u89e3\u6790 PDF \u8d44\u6e90=================================");\n\n\t\tfor (Resource springAiResource : pdfResources) {\n\n\t\t\t// 1. parse document\n\t\t\tDocumentReader reader = new PagePdfDocumentReader(springAiResource);\n\t\t\tList<Document> documents = reader.get();\n\t\t\tlogger.info("{} documents loaded", documents.size());\n\n\t\t\t// 2. split trunks\n\t\t\tList<Document> splitDocuments = new TokenTextSplitter().apply(documents);\n\t\t\tlogger.info("{} documents split", splitDocuments.size());\n\n\t\t\t// 3. add res list\n\t\t\tresList.addAll(splitDocuments);\n\t\t}\n\n\t\tlogger.info("\u89e3\u6790 PDF \u8d44\u6e90\u5b8c\u6210=================================");\n\n\t\treturn resList;\n\t}\n\n\tprivate void importToES(List<Document> documents) {\n\n\t\tlogger.info("\u5f00\u59cb\u5bfc\u5165\u6570\u636e\u5230 ES =================================");\n\n\t\tlogger.info("create embedding and save to vector store");\n\t\tcreateIndexIfNotExists();\n\t\tvectorStore.add(documents);\n\n\t\tlogger.info("\u5bfc\u5165\u6570\u636e\u5230 ES \u5b8c\u6210=================================");\n\t}\n\n\tprivate void createIndexIfNotExists() {\n\n\t\ttry {\n\t\t\tString indexName = options.getIndexName();\n\t\t\tInteger dimsLength = options.getDimensions();\n\n\t\t\tif (!StringUtils.hasText(indexName)) {\n\t\t\t\tthrow new IllegalArgumentException("Elastic search index name must be provided");\n\t\t\t}\n\n\t\t\tboolean exists = elasticsearchClient.indices().exists(idx -> idx.index(indexName)).value();\n\t\t\tif (exists) {\n\t\t\t\tlogger.debug("Index {} already exists. Skipping creation.", indexName);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString similarityAlgo = options.getSimilarity().name();\n\t\t\tIndexSettings indexSettings = IndexSettings\n\t\t\t\t\t.of(settings -> settings.numberOfShards(String.valueOf(1)).numberOfReplicas(String.valueOf(1)));\n\n\t\t\tMap<String, Property> properties = new HashMap<>();\n\t\t\tproperties.put(vectorField, Property.of(property -> property.denseVector(\n\t\t\t\t\tDenseVectorProperty.of(dense -> dense.index(true).dims(dimsLength).similarity(similarityAlgo)))));\n\t\t\tproperties.put(textField, Property.of(property -> property.text(TextProperty.of(t -> t))));\n\n\t\t\tMap<String, Property> metadata = new HashMap<>();\n\t\t\tmetadata.put("ref_doc_id", Property.of(property -> property.keyword(KeywordProperty.of(k -> k))));\n\n\t\t\tproperties.put("metadata",\n\t\t\t\t\tProperty.of(property -> property.object(ObjectProperty.of(op -> op.properties(metadata)))));\n\n\t\t\tCreateIndexResponse indexResponse = elasticsearchClient.indices()\n\t\t\t\t\t.create(createIndexBuilder -> createIndexBuilder.index(indexName)\n\t\t\t\t\t\t\t.settings(indexSettings)\n\t\t\t\t\t\t\t.mappings(TypeMapping.of(mappings -> mappings.properties(properties))));\n\n\t\t\tif (!indexResponse.acknowledged()) {\n\t\t\t\tthrow new RuntimeException("failed to create index");\n\t\t\t}\n\n\t\t\tlogger.info("create elasticsearch index {} successfully", indexName);\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tlogger.error("failed to create index", e);\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"airagservice",children:"AIRagService"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u6b64\u6587\u4ef6\u4e2d\uff0c\u6267\u884c\u7528\u6237\u95ee\u9898\u7684\u67e5\u8be2\u3002\u4e3b\u8981\u7684\u4efb\u52a1\u662f\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"\u52a0\u8f7d prompt \u6a21\u677f\uff0c\u63a5\u53d7\u7528\u6237\u7684 prompt\uff1b"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u5411\u91cf\u76f8\u4f3c\u6027\u68c0\u7d22\uff0c\u83b7\u5f97\u5411\u91cf\u4e0a\u4e0b\u6587\uff1b"}),"\n",(0,i.jsx)(e.li,{children:"\u8c03\u7528\u6a21\u578b\uff0c\u83b7\u5f97\u8f93\u51fa\u3002\uff08deepseek-r1 \u6709  thinking \u8fc7\u7a0b\uff0c\u65e2 Ressoning Content\uff09"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class AIRagService {\n\n\tprivate final Logger logger = LoggerFactory.getLogger(AIRagService.class);\n\n\t@Value("classpath:/prompts/system-qa.st")\n\tprivate Resource systemResource;\n\n\tprivate final ChatModel ragChatModel;\n\n\tprivate final ChatClient ragClient;\n\n\tprivate final VectorStore vectorStore;\n\n\tprivate static final String textField = "content";\n\n\tpublic AIRagService(\n\t\t\tChatModel chatModel,\n\t\t\t// \u4f7f\u7528 DashScope ChatModel\n\t\t\t// @Qualifier("dashscopeChatModel") ChatModel chatModel,\n\t\t\tVectorStore vectorStore\n\t) {\n\n\t\tthis.ragChatModel = chatModel;\n\t\tthis.vectorStore = vectorStore;\n\n\t\tthis.ragClient = ChatClient.builder(ragChatModel)\n\t\t\t\t.defaultAdvisors((new QuestionAnswerAdvisor(vectorStore)))\n\t\t\t\t.build();\n\t}\n\n\tpublic Flux<String> retrieve(String prompt) {\n\n\t\t// Get the vector store prompt tmpl.\n\t\tString promptTemplate = getPromptTemplate(systemResource);\n\n\t\t// Enable hybrid search, both embedding and full text search\n\t\tSearchRequest searchRequest = SearchRequest.builder().\n\t\t\t\ttopK(4)\n\t\t\t\t.similarityThresholdAll()\n\t\t\t\t.filterExpression(\n\t\t\t\t\t\tnew FilterExpressionBuilder()\n\t\t\t\t\t\t\t\t.eq(textField, prompt).build()\n\t\t\t\t).build();\n\n\t\t// Build ChatClient with retrieval rerank advisor:\n\t\t// ChatClient runtimeChatClient = ChatClient.builder(chatModel)\n\t\t//\t\t.defaultAdvisors(new RetrievalRerankAdvisor(vectorStore, rerankModel, searchRequest, promptTemplate, 0.1))\n\t\t//\t\t.build();\n\n\t\t// Spring AI RetrievalAugmentationAdvisor\n\t\t// Advisor retrievalAugmentationAdvisor = RetrievalAugmentationAdvisor.builder()\n\t\t//\t\t.queryTransformers(RewriteQueryTransformer.builder()\n\t\t//\t\t\t\t.chatClientBuilder(ChatClient.builder(ragChatModel).build().mutate())\n\t\t//\t\t\t\t.build())\n\t\t//\t\t.documentRetriever(VectorStoreDocumentRetriever.builder()\n\t\t//\t\t\t\t.similarityThreshold(0.50)\n\t\t//\t\t\t\t.vectorStore(vectorStore)\n\t\t//\t\t\t\t.build())\n\t\t//\t\t.build();\n\n\t\t// Retrieve and llm generate\n\t\t// return ragClient.prompt()\n\t\t//\t\t.advisors(retrievalAugmentationAdvisor)\n\t\t//\t\t.user(prompt)\n\t\t//\t\t.stream()\n\t\t//\t\t.content();\n\n\t\treturn ChatClient.builder(ragChatModel)\n\t\t\t\t.build().prompt()\n\t\t\t\t.advisors(new QuestionAnswerAdvisor(vectorStore, searchRequest, promptTemplate))\n\t\t\t\t.user(prompt)\n\t\t\t\t.stream()\n\t\t\t\t.content();\n\t}\n\n\tprivate String getPromptTemplate(Resource systemResource) {\n\n\t\ttry {\n\t\t\tlogger.info("Loading system resource: {}", systemResource.getURI());\n\t\t\treturn systemResource.getContentAsString(StandardCharsets.UTF_8);\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u540c\u65f6\uff0c\u6839\u636e\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Spring AI Alibaba \u63d0\u4f9b\u7684 Rerank \u91cd\u6392\u5e8f\u5b9e\u73b0\uff0c\u63d0\u9ad8\u68c0\u7d22\u7cbe\u5ea6\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u8c03\u7528\u6548\u679c\u5982\u4e0b\uff1a\uff08\u753b\u7ebf\u4e4b\u524d\u4e3a deepseek \u7684\u601d\u8003\u8fc7\u7a0b\uff09"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"call",src:n(70904).A+"",width:"1915",height:"582"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9002\u914d-spring-ai-alibaba-dashscope",children:"\u9002\u914d Spring AI Alibaba DashScope"}),"\n",(0,i.jsx)(e.p,{children:"\u5f15\u5165 spring-ai-alibaba-starter"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",children:"\x3c!-- Spring AI Alibaba DashScope --\x3e\n<dependency>\n    <groupId>com.alibaba.cloud.ai</groupId>\n    <artifactId>spring-ai-alibaba-starter</artifactId>\n    <version>1.0.0-M5.1</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4ee5\u4e0b\u914d\u7f6e\uff1a\uff08\u786e\u4fdd\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u6a21\u578b\u6ce8\u5165\u5230 IOC \u5bb9\u5668\u4e2d\uff0c\u9700\u8981\u5173\u95ed\u5176\u4ed6 chat \u548c embedding \u6a21\u578b\u7684\u6ce8\u5165\uff09"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"spring:\n  application:\n    name: ollama-rag\n\n  ai:\n    dashscope:\n      api-key: ${AI_DASHSCOPE_API_KEY}\n      chat:\n        options:\n          model: deepseek-r1\n      embedding:\n        enabled: false\n\n    ollama:\n      base-url: http://127.0.0.1:11434\n      chat:\n        model: deepseek-r1:8b\n        enabled: false\n      embedding:\n        model: nomic-embed-text:latest\n\n    vectorstore:\n      elasticsearch:\n        index-name: ollama-rag-embedding-index\n        similarity: cosine\n        dimensions: 768\n\n  elasticsearch:\n    uris: http://127.0.0.1:9200\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u5728 service \u4e2d\u6ce8\u5165 DashScopeChatModel"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public AIRagService(\n        // ChatModel chatModel,\n        // \u4f7f\u7528 DashScope ChatModel\n        @Qualifier("dashscopeChatModel") ChatModel chatModel,\n        VectorStore vectorStore\n) {\n\n    this.ragChatModel = chatModel;\n    this.vectorStore = vectorStore;\n\n    this.ragClient = ChatClient.builder(ragChatModel)\n            .defaultAdvisors((new QuestionAnswerAdvisor(vectorStore)))\n            .build();\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u8c03\u7528\u6548\u679c\u5982\u4e0b\uff1a\uff08Spring AI Alibaba 1.0.0-M5.1 \u4e0d\u652f\u6301 reasoning content \u900f\u51fa\uff0c\u5728 M6 \u4e2d\u652f\u6301\uff09"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"DashScope Call",src:n(46592).A+"",width:"1744",height:"262"})})]})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},46592:(t,e,n)=>{n.d(e,{A:()=>r});const r=n.p+"assets/images/img-c7761ae79437527afe0f3e5eb22200ac.png"},70904:(t,e,n)=>{n.d(e,{A:()=>r});const r=n.p+"assets/images/img_1-bdb816b890324d6922cbc99b68d481ba.png"},89999:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>o});var r=n(58101);const i={},a=r.createContext(i);function s(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),r.createElement(a.Provider,{value:e},t.children)}},3947:t=>{t.exports=JSON.parse('{"permalink":"/blog/use-spring-ai-and-ollama-build-rag-app","editUrl":"https://github.com/yuluo-yx/blog/edit/master/blog/AI-large-models/use-spring-ai-and-ollama-build-rag-app.md","source":"@site/blog/AI-large-models/use-spring-ai-and-ollama-build-rag-app.md","title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","description":"\u4f7f\u7528 Ollama + Spring AI \u642d\u5efa RAG \u5e94\u7528","date":"2025-02-23T18:35:06.000Z","tags":[{"inline":true,"label":"DeepSeel","permalink":"/blog/tags/deep-seel"},{"inline":true,"label":"Ollama","permalink":"/blog/tags/ollama"},{"inline":true,"label":"Spring AI","permalink":"/blog/tags/spring-ai"},{"inline":true,"label":"RAG","permalink":"/blog/tags/rag"}],"readingTime":3.4366666666666665,"hasTruncateMarker":true,"authors":[{"name":"\u7267\u751f","title":"Java & go developer","url":"https://github.com/yuluo-yx","email":"yuluo08290126@gmail.com","socials":{"x":"https://x.com/yuluo","github":"https://github.com/yuluo-yx"},"imageURL":"https://kuizuo.cn/img/logo.png","key":"yuluo","page":null}],"frontMatter":{"slug":"use-spring-ai-and-ollama-build-rag-app","title":"\u4f7f\u7528 Ollama \u6a21\u578b + Spring AI \u642d\u5efa RAG \u5e94\u7528","date":"2025-02-23T18:35:06.000Z","authors":"yuluo","tags":["DeepSeel","Ollama","Spring AI","RAG"],"keywords":["DeepSeel","Ollama","Spring AI","RAG"]},"unlisted":false,"nextItem":{"title":"\u4f7f\u7528 Ollama \u90e8\u7f72 DeepSeek \u5e76\u4f7f\u7528 Spring AI Alibaba \u8c03\u7528","permalink":"/blog/\u4f7f\u7528-Ollama-\u90e8\u7f72-DeepSeek-\u5e76\u4f7f\u7528-Spring-AI-Alibaba-\u8c03\u7528"}}')}}]);